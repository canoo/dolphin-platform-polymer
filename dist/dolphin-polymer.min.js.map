{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bower_components/core.js/library/fn/map.js","dolphin-polymer.min.js","bower_components/core.js/library/modules/$.a-function.js","bower_components/core.js/library/modules/$.add-to-unscopables.js","bower_components/core.js/library/modules/$.an-object.js","bower_components/core.js/library/modules/$.classof.js","bower_components/core.js/library/modules/$.cof.js","bower_components/core.js/library/modules/$.collection-strong.js","bower_components/core.js/library/modules/$.collection-to-json.js","bower_components/core.js/library/modules/$.collection.js","bower_components/core.js/library/modules/$.core.js","bower_components/core.js/library/modules/$.ctx.js","bower_components/core.js/library/modules/$.defined.js","bower_components/core.js/library/modules/$.descriptors.js","bower_components/core.js/library/modules/$.export.js","bower_components/core.js/library/modules/$.fails.js","bower_components/core.js/library/modules/$.for-of.js","bower_components/core.js/library/modules/$.global.js","bower_components/core.js/library/modules/$.has.js","bower_components/core.js/library/modules/$.hide.js","bower_components/core.js/library/modules/$.iobject.js","bower_components/core.js/library/modules/$.is-array-iter.js","bower_components/core.js/library/modules/$.is-object.js","bower_components/core.js/library/modules/$.iter-call.js","bower_components/core.js/library/modules/$.iter-create.js","bower_components/core.js/library/modules/$.iter-define.js","bower_components/core.js/library/modules/$.iter-step.js","bower_components/core.js/library/modules/$.iterators.js","bower_components/core.js/library/modules/$.js","bower_components/core.js/library/modules/$.library.js","bower_components/core.js/library/modules/$.property-desc.js","bower_components/core.js/library/modules/$.redefine-all.js","bower_components/core.js/library/modules/$.redefine.js","bower_components/core.js/library/modules/$.set-species.js","bower_components/core.js/library/modules/$.set-to-string-tag.js","bower_components/core.js/library/modules/$.shared.js","bower_components/core.js/library/modules/$.strict-new.js","bower_components/core.js/library/modules/$.string-at.js","bower_components/core.js/library/modules/$.to-integer.js","bower_components/core.js/library/modules/$.to-iobject.js","bower_components/core.js/library/modules/$.to-length.js","bower_components/core.js/library/modules/$.uid.js","bower_components/core.js/library/modules/$.wks.js","bower_components/core.js/library/modules/core.get-iterator-method.js","bower_components/core.js/library/modules/es6.array.iterator.js","bower_components/core.js/library/modules/es6.map.js","bower_components/core.js/library/modules/es6.string.iterator.js","bower_components/core.js/library/modules/es7.map.to-json.js","bower_components/core.js/library/modules/web.dom.iterable.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/node_modules/browser-pack/_prelude.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/fn/map.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/fn/promise.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_a-function.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_add-to-unscopables.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_an-instance.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_an-object.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_array-from-iterable.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_classof.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_cof.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_collection-strong.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_collection-to-json.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_collection.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_core.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_ctx.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_defined.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_descriptors.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_dom-create.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_export.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_fails.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_for-of.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_global.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_has.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_hide.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_html.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_invoke.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iobject.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_is-array-iter.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_is-object.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-call.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-create.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-define.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-detect.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-step.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iterators.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_library.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_meta.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_microtask.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_property-desc.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_redefine-all.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_redefine.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_set-proto.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_set-species.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_set-to-string-tag.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_shared.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_species-constructor.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_string-at.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_task.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_to-integer.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_to-iobject.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_to-length.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_uid.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_wks.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/core.get-iterator-method.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.array.iterator.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.map.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.promise.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.string.iterator.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es7.map.to-json.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/web.dom.iterable.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/libsrc/opendolphin.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/beanmanager.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/classrepo.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/clientcontext.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/connector.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/controllermanager.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/controllerproxy.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/dolphin.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/polyfills.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/utils.js","src/behavior.js","src/binder.js","src/dolphin-polymer-api.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dolphin","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","Map","../modules/$.core","../modules/es6.map","../modules/es6.object.to-string","../modules/es6.string.iterator","../modules/es7.map.to-json","../modules/web.dom.iterable",2,"it","TypeError",3,4,"isObject","./$.is-object",5,"cof","TAG","ARG","arguments","O","T","B","undefined","Object","callee","./$.cof","./$.wks",6,"toString","slice",7,"$","hide","redefineAll","ctx","strictNew","defined","forOf","$iterDefine","step","ID","$has","setSpecies","DESCRIPTORS","isExtensible","SIZE","id","fastKey","create","getEntry","that","key","entry","index","_i","_f","k","getConstructor","wrapper","NAME","IS_MAP","ADDER","C","iterable","_l","prototype","clear","data","p","delete","next","prev","forEach","callbackfn","v","has","setDesc","get","def","value","setStrong","iterated","kind","_t","_k","./$","./$.ctx","./$.defined","./$.descriptors","./$.for-of","./$.has","./$.hide","./$.iter-define","./$.iter-step","./$.redefine-all","./$.set-species","./$.strict-new","./$.uid",8,"classof","arr","push","./$.classof",9,"$export","fails","setToStringTag","methods","common","IS_WEAK","Base","proto","entries","target","_c","each","split","KEY","IS_ADDER","b","result","size","G","W","F","./$.export","./$.fails","./$.global","./$.set-to-string-tag",10,"core","version","__e",11,"aFunction","fn","c","apply","./$.a-function",12,13,"defineProperty",14,"PROTOTYPE","type","name","source","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","S","IS_PROTO","P","IS_BIND","IS_WRAP","param","Function","./$.core",15,"exec",16,"isArrayIter","anObject","toLength","getIterFn","iterator","iterFn","done","./$.an-object","./$.is-array-iter","./$.iter-call","./$.to-length","./core.get-iterator-method",17,"Math","__g",18,"hasOwnProperty",19,"createDesc","object","./$.property-desc",20,"propertyIsEnumerable",21,"Iterators","ITERATOR","ArrayProto","Array","./$.iterators",22,23,"ret",24,"descriptor","IteratorPrototype","Constructor",25,"LIBRARY","redefine","$iterCreate","getProto","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","DEFAULT","IS_SET","FORCED","getMethod","DEF_VALUES","VALUES_BUG","$native","$default","values","./$.iter-create","./$.library","./$.redefine",26,27,28,"$Object","getPrototypeOf","isEnum","getDesc","getOwnPropertyDescriptor","setDescs","defineProperties","getKeys","getNames","getOwnPropertyNames","getSymbols","getOwnPropertySymbols",29,30,"bitmap","enumerable","configurable","writable",31,"src",32,33,"SPECIES",34,"tag","stat",35,"SHARED","store",36,37,"toInteger","TO_STRING","pos","String","charCodeAt","charAt","./$.to-integer",38,"ceil","floor","isNaN",39,"IObject","./$.iobject",40,"min",41,"px","random","concat",42,"uid","Symbol","./$.shared",43,"getIteratorMethod",44,"addToUnscopables","toIObject","Arguments","./$.add-to-unscopables","./$.to-iobject",45,"strong","set","./$.collection","./$.collection-strong",46,47,"$at","point","./$.string-at",48,"toJSON","./$.collection-to-json",49,"NodeList","HTMLCollection","./es6.array.iterator",50,"../modules/_core","Promise","../modules/es6.promise","forbiddenField","./_is-object","iter","./_for-of","./_cof","./_wks","anInstance","./_","./_an-instance","./_ctx","./_defined","./_descriptors","./_hide","./_iter-define","./_iter-step","./_meta","./_redefine-all","./_set-species","from","./_array-from-iterable","./_classof","meta","NEED","./_export","./_fails","./_global","./_set-to-string-tag","./_a-function","document","is","createElement","expProto","virtual","R","U","./_core","./_an-object","./_is-array-iter","./_iter-call","./_to-length","./_property-desc","documentElement","args","un","./_iterators","$entries","$anyNative","./_has","./_iter-create","./_library","./_redefine","SAFE_CLOSING","riter","skipClosing","safe","META","FREEZE","preventExtensions","setMeta","w","getWeak","onFreeze","./_uid","head","last","notify","macrotask","Observer","MutationObserver","WebKitMutationObserver","process","isNode","flush","parent","domain","exit","enter","nextTick","toggle","node","createTextNode","observe","characterData","resolve","then","task","./_task","check","setPrototypeOf","test","buggy","__proto__","D","constructor","./_to-integer","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","counter","queue","ONREADYSTATECHANGE","run","listner","event","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","./_dom-create","./_html","./_invoke","./_iobject",51,52,53,"USE_SYMBOL","./_shared",54,55,"./_add-to-unscopables","./_to-iobject",56,"./_collection","./_collection-strong",57,58,"Internal","GenericPromiseCapability","Wrapper","setProto","speciesConstructor","microtask","PROMISE","$Promise","empty","testResolve","sub","promise","USE_NATIVE","works","SubPromise","x","thenableThenGotten","sameConstructor","isThenable","newPromiseCapability","PromiseCapability","reject","$$resolve","$$reject","perform","error","isReject","_n","chain","_v","ok","_s","reaction","handler","fail","_h","onHandleUnhandled","onUnhandled","isUnhandled","console","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","executor","err","onFulfilled","onRejected","catch","capability","all","abrupt","remaining","results","alreadyCalled","race","./_iter-detect","./_microtask","./_set-proto","./_species-constructor",59,"./_string-at",60,"./_collection-to-json",61,"TO_STRING_TAG","ArrayValues","Collection",62,"opendolphin","Attribute","QUALIFIER_PROPERTY","DIRTY_PROPERTY","BASE_VALUE","VALUE","Command","Tag","label","tooltip","mandatory","visible","enabled","regex","widgetHint","valueType","__extends","d","__","AttributeCreatedNotification","_super","pmId","attributeId","propertyName","newValue","qualifier","className","AttributeMetadataChangedCommand","metadataName","BaseValueChangedCommand","CallNamedActionCommand","actionName","ChangeAttributeMetadataCommand","EventBus","eventHandlers","onEvent","eventHandler","trigger","handle","presentationModelInstanceCount","ClientPresentationModel","presentationModelType","attributes","clientSideOnly","dirty","invalidBus","dirtyValueChangeBus","copy","getAttributes","attribute","attributeCopy","addAttribute","addAttributes","_this","attr","indexOf","findAttributeByPropertyNameAndTag","getQualifier","findAttributeByQualifier","setPresentationModel","updateDirty","onValueChange","evt","isDirty","setDirty","updateAttributeDirtyness","oldVal","oldValue","reset","rebase","onDirty","onInvalidated","handleInvalidate","getAt","findAttributeByPropertyName","findAllAttributesByPropertyName","findAttributeById","syncWith","sourcePresentationModel","targetAttribute","sourceAttribute","ClientAttribute","clientAttributeInstanceCount","valueChangeBus","qualifierChangeBus","baseValueChangeBus","setValue","setBaseValue","setQualifier","getValue","getBaseValue","baseValue","presentationModel","alert","getPresentationModel","verifiedValue","checkValue","calculateDirty","newQualifier","oldQualifier","oldBaseValue","Boolean","Number","valueOf","log","SUPPORTED_VALUE_TYPES","Date","onQualifierChange","onBaseValueChange","ValueChangedCommand","NamedCommand","EmptyNotification","NoCommandBatcher","batch","shift","BlindCommandBatcher","folding","maxBatchSize","processNext","candidate","command","found","canCmd","batchCmd","Codec","encode","commands","JSON","stringify","decode","transmitted","parse","SignalCommand","CreatePresentationModelCommand","pmType","attrs","put","containsKey","remove","splice","isEmpty","containsValue","keySet","DeletedAllPresentationModelsOfTypeNotification","DeletedPresentationModelNotification","Type","ClientModelStore","clientDolphin","presentationModels","presentationModelsPerType","attributesPerId","attributesPerQualifier","modelStoreChangeBus","getClientDolphin","registerModel","model","connector","getClientConnector","createPMCommand","send","registerAttribute","addAttributeById","addAttributeByQualifier","valueChangeCommand","findAttributesByFilter","baseValueChangeCommand","changeAttrMetadataCmd","add","added","addPresentationModelByType","eventType","ADDED","clientPresentationModel","removed","removePresentationModelByType","removeAttributeById","removeAttributeByQualifier","REMOVED","filter","matches","listPresentationModelIds","listPresentationModels","findPresentationModelById","findAllPresentationModelByType","deleteAllPresentationModelOfType","pm","deletePresentationModel","containsPresentationModel","findAllAttributesByQualifier","onModelStoreChange","onModelStoreChangeForType","pmStoreEvent","ClientDolphin","setClientConnector","clientConnector","commandName","onFinished","sendEmpty","getClientModelStore","setClientModelStore","clientModelStore","modelToDelete","updatePresentationModelQualifier","updateAttributeQualifier","clientAttribute","addAttributeToModel","startPushListening","pushActionName","releaseActionName","setPushListener","setReleaseCommand","setPushEnabled","listen","stopPushListening","PresentationModelResetedCommand","SavedPresentationModelNotification","InitializeAttributeCommand","SwitchPresentationModelCommand","sourcePmId","DeleteAllPresentationModelsOfTypeCommand","DeletePresentationModelCommand","DataCommand","ClientConnector","transmitter","slackMS","commandQueue","currentlySending","pushEnabled","waiting","codec","commandBatcher","setCommandBatcher","newBatcher","newListener","pushListener","newCommand","releaseCommand","release","doSendNext","enqueuePushCommand","cmdsAndHandlers","callback","map","cah","transmit","response","touchedPMs","touched","handleDataCommand","handleDeletePresentationModelCommand","handleDeleteAllPresentationModelOfTypeCommand","handleCreatePresentationModelCommand","handleValueChangedCommand","handleBaseValueChangedCommand","handleSwitchPresentationModelCommand","handleInitializeAttributeCommand","handleSavedPresentationModelNotification","handlePresentationModelResetedCommand","handleAttributeMetadataChangedCommand","handleCallNamedActionCommand","serverCommand","match","clientPm","switchPm","sourcePm","attributesCopy","me","models","onFinishedData","signal","url","makeDolphin","build","DolphinBuilder","NoTransmitter","onDone","HttpTransmitter","charset","errorHandler","supportCORS","HttpCodes","finished","success","http","XMLHttpRequest","sig","withCredentials","invalidate","onerror","handleError","onreadystatechange","readyState","status","responseText","trim","responseCommands","open","overrideMimeType","message","errorEvent","httpStatus","reset_","slackMS_","maxBatchSize_","supportCORS_","url_","errorHandler_","GetPresentationModelCommand","ResetPresentationModelCommand",63,"BeanManager","classRepository","addedHandlers","removedHandlers","updatedHandlers","arrayUpdatedHandlers","allAddedHandlers","allRemovedHandlers","allUpdatedHandlers","allArrayUpdatedHandlers","onBeanAdded","bean","handlerList","exists","onBeanRemoved","onBeanUpdate","onArrayUpdate","count","newElement","notifyBeanChange","notifyArrayChange","removedElements","isManaged","addAll","collection","removeAll","removeIf","predicate","onAdded","unsubscribe","onRemoved","../bower_components/core.js/library/fn/map","./polyfills.js","./utils.js",64,"fromDolphin","DOLPHIN_BEAN","beanFromDolphin","toDolphin","beanToDolphin","sendListAdd","modelId","element","sendListRemove","to","validateList","list","propertyUpdateHandlers","block","blocked","isBlocked","unblock","ClassRepository","classes","classInfos","beanAddedHandlers","beanRemovedHandlers","arrayUpdateHandlers","UNKNOWN","BASIC_TYPE","classInfo","array","isArray","registerClass","search","unregisterClass","load","unload","addListEntry","delListEntry","setListEntry","mapParamToDolphin","mapDolphinToBean","../libsrc/opendolphin.js",65,"ClientContext","beanManager","controllerManager","_controllerManager","_connector","INIT_COMMAND_NAME","DOLPHIN_PLATFORM_PREFIX","DISCONNECT_COMMAND_NAME","createController","disconnect",66,"Connector","config","highlanderPMResolver","highlanderPMPromise","sourceSystem","SOURCE_SYSTEM","SOURCE_SYSTEM_SERVER","onModelAdded","onModelRemoved","serverPush","POLL_COMMAND_NAME","RELEASE_COMMAND_NAME","initializer","req","onload","statusText","ACTION_CALL_BEAN","HIGHLANDER_BEAN","DOLPHIN_LIST_ADD","DOLPHIN_LIST_DEL","DOLPHIN_LIST_SET","SOURCE_SYSTEM_CLIENT","getHighlanderPM","../bower_components/core.js/library/fn/promise",67,"ControllerManager","ControllerProxy","DOLPHIN_BEAN_TYPE","REGISTER_CONTROLLER_COMMAND_NAME","CALL_CONTROLLER_ACTION_COMMAND_NAME","DESTROY_CONTROLLER_COMMAND_NAME","CONTROLLER_NAME","CONTROLLER_ID","MODEL","ACTION_NAME","ERROR_CODE","PARAM_PREFIX","controllerId","highlanderPM","invokeAction","params","prop","isError","destroyController","./classrepo.js","./connector.js","./controllerproxy.js",68,"manager","destroyed","destroy",69,"connect","builder","./beanmanager.js","./clientcontext.js","./controllermanager.js",70,"thisArg","len","kValue","fun","res","val",71,"polymer1_1hack","path","pathElements","arrayKey","parseInt","Polymer","getItem","navigateToBean","navigation","setupCreateBehavior","clientContext","binder","Binder","controllerName","properties","observers","created","controller","_controller","_dolphinObserver","j","indexSplices","substr","change","addedCount","unbind","oldPos","bind","./binder.js","bindScope","scope","deepEqual","array1","array2","listeners","onBeanUpdateHandler","onArrayUpdateHandler","listenerList","rootPath","newElements","oldElements","createBehavior","../bower_components/dolphin-js/dist/dolphin.js","./behavior.js"],"mappings":"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","file":"dolphin-polymer.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nmodule.exports = require('../modules/$.core').Map;","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.dolphin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.map');\n_dereq_('../modules/es7.map.to-json');\nmodule.exports = _dereq_('../modules/$.core').Map;\n},{\"../modules/$.core\":10,\"../modules/es6.map\":45,\"../modules/es6.object.to-string\":46,\"../modules/es6.string.iterator\":47,\"../modules/es7.map.to-json\":48,\"../modules/web.dom.iterable\":49}],2:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n},{}],3:[function(_dereq_,module,exports){\nmodule.exports = function(){ /* empty */ };\n},{}],4:[function(_dereq_,module,exports){\nvar isObject = _dereq_('./$.is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n},{\"./$.is-object\":22}],5:[function(_dereq_,module,exports){\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = _dereq_('./$.cof')\n  , TAG = _dereq_('./$.wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n},{\"./$.cof\":6,\"./$.wks\":42}],6:[function(_dereq_,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n},{}],7:[function(_dereq_,module,exports){\n'use strict';\nvar $            = _dereq_('./$')\n  , hide         = _dereq_('./$.hide')\n  , redefineAll  = _dereq_('./$.redefine-all')\n  , ctx          = _dereq_('./$.ctx')\n  , strictNew    = _dereq_('./$.strict-new')\n  , defined      = _dereq_('./$.defined')\n  , forOf        = _dereq_('./$.for-of')\n  , $iterDefine  = _dereq_('./$.iter-define')\n  , step         = _dereq_('./$.iter-step')\n  , ID           = _dereq_('./$.uid')('id')\n  , $has         = _dereq_('./$.has')\n  , isObject     = _dereq_('./$.is-object')\n  , setSpecies   = _dereq_('./$.set-species')\n  , DESCRIPTORS  = _dereq_('./$.descriptors')\n  , isExtensible = Object.isExtensible || isObject\n  , SIZE         = DESCRIPTORS ? '_s' : 'size'\n  , id           = 0;\n\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!$has(it, ID)){\n    // can't set id to frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add id\n    if(!create)return 'E';\n    // add missing object id\n    hide(it, ID, ++id);\n  // return object id with prefix\n  } return 'O' + it[ID];\n};\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      strictNew(that, C, NAME);\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n},{\"./$\":28,\"./$.ctx\":11,\"./$.defined\":12,\"./$.descriptors\":13,\"./$.for-of\":16,\"./$.has\":18,\"./$.hide\":19,\"./$.is-object\":22,\"./$.iter-define\":25,\"./$.iter-step\":26,\"./$.redefine-all\":31,\"./$.set-species\":33,\"./$.strict-new\":36,\"./$.uid\":41}],8:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar forOf   = _dereq_('./$.for-of')\n  , classof = _dereq_('./$.classof');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    var arr = [];\n    forOf(this, false, arr.push, arr);\n    return arr;\n  };\n};\n},{\"./$.classof\":5,\"./$.for-of\":16}],9:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./$')\n  , global         = _dereq_('./$.global')\n  , $export        = _dereq_('./$.export')\n  , fails          = _dereq_('./$.fails')\n  , hide           = _dereq_('./$.hide')\n  , redefineAll    = _dereq_('./$.redefine-all')\n  , forOf          = _dereq_('./$.for-of')\n  , strictNew      = _dereq_('./$.strict-new')\n  , isObject       = _dereq_('./$.is-object')\n  , setToStringTag = _dereq_('./$.set-to-string-tag')\n  , DESCRIPTORS    = _dereq_('./$.descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n  } else {\n    C = wrapper(function(target, iterable){\n      strictNew(target, C, NAME);\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n},{\"./$\":28,\"./$.descriptors\":13,\"./$.export\":14,\"./$.fails\":15,\"./$.for-of\":16,\"./$.global\":17,\"./$.hide\":19,\"./$.is-object\":22,\"./$.redefine-all\":31,\"./$.set-to-string-tag\":34,\"./$.strict-new\":36}],10:[function(_dereq_,module,exports){\nvar core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n},{}],11:[function(_dereq_,module,exports){\n// optional / simple context binding\nvar aFunction = _dereq_('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n},{\"./$.a-function\":2}],12:[function(_dereq_,module,exports){\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n},{}],13:[function(_dereq_,module,exports){\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !_dereq_('./$.fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n},{\"./$.fails\":15}],14:[function(_dereq_,module,exports){\nvar global    = _dereq_('./$.global')\n  , core      = _dereq_('./$.core')\n  , ctx       = _dereq_('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;\n},{\"./$.core\":10,\"./$.ctx\":11,\"./$.global\":17}],15:[function(_dereq_,module,exports){\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n},{}],16:[function(_dereq_,module,exports){\nvar ctx         = _dereq_('./$.ctx')\n  , call        = _dereq_('./$.iter-call')\n  , isArrayIter = _dereq_('./$.is-array-iter')\n  , anObject    = _dereq_('./$.an-object')\n  , toLength    = _dereq_('./$.to-length')\n  , getIterFn   = _dereq_('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that){\n  var iterFn = getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};\n},{\"./$.an-object\":4,\"./$.ctx\":11,\"./$.is-array-iter\":21,\"./$.iter-call\":23,\"./$.to-length\":40,\"./core.get-iterator-method\":43}],17:[function(_dereq_,module,exports){\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n},{}],18:[function(_dereq_,module,exports){\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n},{}],19:[function(_dereq_,module,exports){\nvar $          = _dereq_('./$')\n  , createDesc = _dereq_('./$.property-desc');\nmodule.exports = _dereq_('./$.descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n},{\"./$\":28,\"./$.descriptors\":13,\"./$.property-desc\":30}],20:[function(_dereq_,module,exports){\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = _dereq_('./$.cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n},{\"./$.cof\":6}],21:[function(_dereq_,module,exports){\n// check on default Array iterator\nvar Iterators  = _dereq_('./$.iterators')\n  , ITERATOR   = _dereq_('./$.wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n},{\"./$.iterators\":27,\"./$.wks\":42}],22:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n},{}],23:[function(_dereq_,module,exports){\n// call something on iterator step with safe closing on error\nvar anObject = _dereq_('./$.an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n},{\"./$.an-object\":4}],24:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./$')\n  , descriptor     = _dereq_('./$.property-desc')\n  , setToStringTag = _dereq_('./$.set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_dereq_('./$.hide')(IteratorPrototype, _dereq_('./$.wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n},{\"./$\":28,\"./$.hide\":19,\"./$.property-desc\":30,\"./$.set-to-string-tag\":34,\"./$.wks\":42}],25:[function(_dereq_,module,exports){\n'use strict';\nvar LIBRARY        = _dereq_('./$.library')\n  , $export        = _dereq_('./$.export')\n  , redefine       = _dereq_('./$.redefine')\n  , hide           = _dereq_('./$.hide')\n  , has            = _dereq_('./$.has')\n  , Iterators      = _dereq_('./$.iterators')\n  , $iterCreate    = _dereq_('./$.iter-create')\n  , setToStringTag = _dereq_('./$.set-to-string-tag')\n  , getProto       = _dereq_('./$').getProto\n  , ITERATOR       = _dereq_('./$.wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , methods, key;\n  // Fix native\n  if($native){\n    var IteratorPrototype = getProto($default.call(new Base));\n    // Set @@toStringTag to native iterators\n    setToStringTag(IteratorPrototype, TAG, true);\n    // FF fix\n    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    // fix Array#{values, @@iterator}.name in V8 / FF\n    if(DEF_VALUES && $native.name !== VALUES){\n      VALUES_BUG = true;\n      $default = function values(){ return $native.call(this); };\n    }\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n      keys:    IS_SET      ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n},{\"./$\":28,\"./$.export\":14,\"./$.has\":18,\"./$.hide\":19,\"./$.iter-create\":24,\"./$.iterators\":27,\"./$.library\":29,\"./$.redefine\":32,\"./$.set-to-string-tag\":34,\"./$.wks\":42}],26:[function(_dereq_,module,exports){\nmodule.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n},{}],27:[function(_dereq_,module,exports){\nmodule.exports = {};\n},{}],28:[function(_dereq_,module,exports){\nvar $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n},{}],29:[function(_dereq_,module,exports){\nmodule.exports = true;\n},{}],30:[function(_dereq_,module,exports){\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n},{}],31:[function(_dereq_,module,exports){\nvar redefine = _dereq_('./$.redefine');\nmodule.exports = function(target, src){\n  for(var key in src)redefine(target, key, src[key]);\n  return target;\n};\n},{\"./$.redefine\":32}],32:[function(_dereq_,module,exports){\nmodule.exports = _dereq_('./$.hide');\n},{\"./$.hide\":19}],33:[function(_dereq_,module,exports){\n'use strict';\nvar core        = _dereq_('./$.core')\n  , $           = _dereq_('./$')\n  , DESCRIPTORS = _dereq_('./$.descriptors')\n  , SPECIES     = _dereq_('./$.wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n},{\"./$\":28,\"./$.core\":10,\"./$.descriptors\":13,\"./$.wks\":42}],34:[function(_dereq_,module,exports){\nvar def = _dereq_('./$').setDesc\n  , has = _dereq_('./$.has')\n  , TAG = _dereq_('./$.wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n},{\"./$\":28,\"./$.has\":18,\"./$.wks\":42}],35:[function(_dereq_,module,exports){\nvar global = _dereq_('./$.global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n},{\"./$.global\":17}],36:[function(_dereq_,module,exports){\nmodule.exports = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};\n},{}],37:[function(_dereq_,module,exports){\nvar toInteger = _dereq_('./$.to-integer')\n  , defined   = _dereq_('./$.defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n},{\"./$.defined\":12,\"./$.to-integer\":38}],38:[function(_dereq_,module,exports){\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n},{}],39:[function(_dereq_,module,exports){\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = _dereq_('./$.iobject')\n  , defined = _dereq_('./$.defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n},{\"./$.defined\":12,\"./$.iobject\":20}],40:[function(_dereq_,module,exports){\n// 7.1.15 ToLength\nvar toInteger = _dereq_('./$.to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n},{\"./$.to-integer\":38}],41:[function(_dereq_,module,exports){\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n},{}],42:[function(_dereq_,module,exports){\nvar store  = _dereq_('./$.shared')('wks')\n  , uid    = _dereq_('./$.uid')\n  , Symbol = _dereq_('./$.global').Symbol;\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n};\n},{\"./$.global\":17,\"./$.shared\":35,\"./$.uid\":41}],43:[function(_dereq_,module,exports){\nvar classof   = _dereq_('./$.classof')\n  , ITERATOR  = _dereq_('./$.wks')('iterator')\n  , Iterators = _dereq_('./$.iterators');\nmodule.exports = _dereq_('./$.core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n},{\"./$.classof\":5,\"./$.core\":10,\"./$.iterators\":27,\"./$.wks\":42}],44:[function(_dereq_,module,exports){\n'use strict';\nvar addToUnscopables = _dereq_('./$.add-to-unscopables')\n  , step             = _dereq_('./$.iter-step')\n  , Iterators        = _dereq_('./$.iterators')\n  , toIObject        = _dereq_('./$.to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = _dereq_('./$.iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n},{\"./$.add-to-unscopables\":3,\"./$.iter-define\":25,\"./$.iter-step\":26,\"./$.iterators\":27,\"./$.to-iobject\":39}],45:[function(_dereq_,module,exports){\n'use strict';\nvar strong = _dereq_('./$.collection-strong');\n\n// 23.1 Map Objects\n_dereq_('./$.collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n},{\"./$.collection\":9,\"./$.collection-strong\":7}],46:[function(_dereq_,module,exports){\n\n},{}],47:[function(_dereq_,module,exports){\n'use strict';\nvar $at  = _dereq_('./$.string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_dereq_('./$.iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n},{\"./$.iter-define\":25,\"./$.string-at\":37}],48:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = _dereq_('./$.export');\n\n$export($export.P, 'Map', {toJSON: _dereq_('./$.collection-to-json')('Map')});\n},{\"./$.collection-to-json\":8,\"./$.export\":14}],49:[function(_dereq_,module,exports){\n_dereq_('./es6.array.iterator');\nvar Iterators = _dereq_('./$.iterators');\nIterators.NodeList = Iterators.HTMLCollection = Iterators.Array;\n},{\"./$.iterators\":27,\"./es6.array.iterator\":44}],50:[function(_dereq_,module,exports){\n(function (global){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.dolphin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.map');\n_dereq_('../modules/es7.map.to-json');\nmodule.exports = _dereq_('../modules/_core').Map;\n},{\"../modules/_core\":14,\"../modules/es6.map\":56,\"../modules/es6.object.to-string\":57,\"../modules/es6.string.iterator\":59,\"../modules/es7.map.to-json\":60,\"../modules/web.dom.iterable\":61}],2:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.promise');\nmodule.exports = _dereq_('../modules/_core').Promise;\n},{\"../modules/_core\":14,\"../modules/es6.object.to-string\":57,\"../modules/es6.promise\":58,\"../modules/es6.string.iterator\":59,\"../modules/web.dom.iterable\":61}],3:[function(_dereq_,module,exports){\nvar $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n},{}],4:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n},{}],5:[function(_dereq_,module,exports){\nmodule.exports = function(){ /* empty */ };\n},{}],6:[function(_dereq_,module,exports){\nmodule.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n},{}],7:[function(_dereq_,module,exports){\nvar isObject = _dereq_('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n},{\"./_is-object\":29}],8:[function(_dereq_,module,exports){\nvar forOf = _dereq_('./_for-of');\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n},{\"./_for-of\":21}],9:[function(_dereq_,module,exports){\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = _dereq_('./_cof')\n  , TAG = _dereq_('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n},{\"./_cof\":10,\"./_wks\":53}],10:[function(_dereq_,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n},{}],11:[function(_dereq_,module,exports){\n'use strict';\nvar $           = _dereq_('./_')\n  , hide        = _dereq_('./_hide')\n  , redefineAll = _dereq_('./_redefine-all')\n  , ctx         = _dereq_('./_ctx')\n  , anInstance  = _dereq_('./_an-instance')\n  , defined     = _dereq_('./_defined')\n  , forOf       = _dereq_('./_for-of')\n  , $iterDefine = _dereq_('./_iter-define')\n  , step        = _dereq_('./_iter-step')\n  , setSpecies  = _dereq_('./_set-species')\n  , DESCRIPTORS = _dereq_('./_descriptors')\n  , fastKey     = _dereq_('./_meta').fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n},{\"./_\":3,\"./_an-instance\":6,\"./_ctx\":15,\"./_defined\":16,\"./_descriptors\":17,\"./_for-of\":21,\"./_hide\":24,\"./_iter-define\":32,\"./_iter-step\":34,\"./_meta\":37,\"./_redefine-all\":40,\"./_set-species\":43}],12:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = _dereq_('./_classof')\n  , from    = _dereq_('./_array-from-iterable');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n},{\"./_array-from-iterable\":8,\"./_classof\":9}],13:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./_')\n  , global         = _dereq_('./_global')\n  , $export        = _dereq_('./_export')\n  , meta           = _dereq_('./_meta')\n  , fails          = _dereq_('./_fails')\n  , hide           = _dereq_('./_hide')\n  , redefineAll    = _dereq_('./_redefine-all')\n  , forOf          = _dereq_('./_for-of')\n  , anInstance     = _dereq_('./_an-instance')\n  , isObject       = _dereq_('./_is-object')\n  , setToStringTag = _dereq_('./_set-to-string-tag')\n  , DESCRIPTORS    = _dereq_('./_descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function(target, iterable){\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        anInstance(this, C, KEY);\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n},{\"./_\":3,\"./_an-instance\":6,\"./_descriptors\":17,\"./_export\":19,\"./_fails\":20,\"./_for-of\":21,\"./_global\":22,\"./_hide\":24,\"./_is-object\":29,\"./_meta\":37,\"./_redefine-all\":40,\"./_set-to-string-tag\":44}],14:[function(_dereq_,module,exports){\nvar core = module.exports = {version: '2.0.3'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n},{}],15:[function(_dereq_,module,exports){\n// optional / simple context binding\nvar aFunction = _dereq_('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n},{\"./_a-function\":4}],16:[function(_dereq_,module,exports){\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n},{}],17:[function(_dereq_,module,exports){\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !_dereq_('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n},{\"./_fails\":20}],18:[function(_dereq_,module,exports){\nvar isObject = _dereq_('./_is-object')\n  , document = _dereq_('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n},{\"./_global\":22,\"./_is-object\":29}],19:[function(_dereq_,module,exports){\nvar global    = _dereq_('./_global')\n  , core      = _dereq_('./_core')\n  , ctx       = _dereq_('./_ctx')\n  , hide      = _dereq_('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n},{\"./_core\":14,\"./_ctx\":15,\"./_global\":22,\"./_hide\":24}],20:[function(_dereq_,module,exports){\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n},{}],21:[function(_dereq_,module,exports){\nvar ctx         = _dereq_('./_ctx')\n  , call        = _dereq_('./_iter-call')\n  , isArrayIter = _dereq_('./_is-array-iter')\n  , anObject    = _dereq_('./_an-object')\n  , toLength    = _dereq_('./_to-length')\n  , getIterFn   = _dereq_('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};\n},{\"./_an-object\":7,\"./_ctx\":15,\"./_is-array-iter\":28,\"./_iter-call\":30,\"./_to-length\":51,\"./core.get-iterator-method\":54}],22:[function(_dereq_,module,exports){\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n},{}],23:[function(_dereq_,module,exports){\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n},{}],24:[function(_dereq_,module,exports){\nvar $          = _dereq_('./_')\n  , createDesc = _dereq_('./_property-desc');\nmodule.exports = _dereq_('./_descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n},{\"./_\":3,\"./_descriptors\":17,\"./_property-desc\":39}],25:[function(_dereq_,module,exports){\nmodule.exports = _dereq_('./_global').document && document.documentElement;\n},{\"./_global\":22}],26:[function(_dereq_,module,exports){\n// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};\n},{}],27:[function(_dereq_,module,exports){\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = _dereq_('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n},{\"./_cof\":10}],28:[function(_dereq_,module,exports){\n// check on default Array iterator\nvar Iterators  = _dereq_('./_iterators')\n  , ITERATOR   = _dereq_('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n},{\"./_iterators\":35,\"./_wks\":53}],29:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n},{}],30:[function(_dereq_,module,exports){\n// call something on iterator step with safe closing on error\nvar anObject = _dereq_('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n},{\"./_an-object\":7}],31:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./_')\n  , descriptor     = _dereq_('./_property-desc')\n  , setToStringTag = _dereq_('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_dereq_('./_hide')(IteratorPrototype, _dereq_('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n},{\"./_\":3,\"./_hide\":24,\"./_property-desc\":39,\"./_set-to-string-tag\":44,\"./_wks\":53}],32:[function(_dereq_,module,exports){\n'use strict';\nvar LIBRARY        = _dereq_('./_library')\n  , $export        = _dereq_('./_export')\n  , redefine       = _dereq_('./_redefine')\n  , hide           = _dereq_('./_hide')\n  , has            = _dereq_('./_has')\n  , Iterators      = _dereq_('./_iterators')\n  , $iterCreate    = _dereq_('./_iter-create')\n  , setToStringTag = _dereq_('./_set-to-string-tag')\n  , getProto       = _dereq_('./_').getProto\n  , ITERATOR       = _dereq_('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getProto($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n},{\"./_\":3,\"./_export\":19,\"./_has\":23,\"./_hide\":24,\"./_iter-create\":31,\"./_iterators\":35,\"./_library\":36,\"./_redefine\":41,\"./_set-to-string-tag\":44,\"./_wks\":53}],33:[function(_dereq_,module,exports){\nvar ITERATOR     = _dereq_('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n},{\"./_wks\":53}],34:[function(_dereq_,module,exports){\nmodule.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n},{}],35:[function(_dereq_,module,exports){\nmodule.exports = {};\n},{}],36:[function(_dereq_,module,exports){\nmodule.exports = true;\n},{}],37:[function(_dereq_,module,exports){\nvar META     = _dereq_('./_uid')('meta')\n  , isObject = _dereq_('./_is-object')\n  , has      = _dereq_('./_has')\n  , setDesc  = _dereq_('./_').setDesc\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !_dereq_('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};\n},{\"./_\":3,\"./_fails\":20,\"./_has\":23,\"./_is-object\":29,\"./_uid\":52}],38:[function(_dereq_,module,exports){\nvar global    = _dereq_('./_global')\n  , macrotask = _dereq_('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = _dereq_('./_cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};\n},{\"./_cof\":10,\"./_global\":22,\"./_task\":48}],39:[function(_dereq_,module,exports){\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n},{}],40:[function(_dereq_,module,exports){\nvar hide = _dereq_('./_hide');\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n},{\"./_hide\":24}],41:[function(_dereq_,module,exports){\nmodule.exports = _dereq_('./_hide');\n},{\"./_hide\":24}],42:[function(_dereq_,module,exports){\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar getDesc  = _dereq_('./_').getDesc\n  , isObject = _dereq_('./_is-object')\n  , anObject = _dereq_('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = _dereq_('./_ctx')(Function.call, getDesc(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n},{\"./_\":3,\"./_an-object\":7,\"./_ctx\":15,\"./_is-object\":29}],43:[function(_dereq_,module,exports){\n'use strict';\nvar core        = _dereq_('./_core')\n  , $           = _dereq_('./_')\n  , DESCRIPTORS = _dereq_('./_descriptors')\n  , SPECIES     = _dereq_('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n},{\"./_\":3,\"./_core\":14,\"./_descriptors\":17,\"./_wks\":53}],44:[function(_dereq_,module,exports){\nvar def = _dereq_('./_').setDesc\n  , has = _dereq_('./_has')\n  , TAG = _dereq_('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n},{\"./_\":3,\"./_has\":23,\"./_wks\":53}],45:[function(_dereq_,module,exports){\nvar global = _dereq_('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n},{\"./_global\":22}],46:[function(_dereq_,module,exports){\n// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = _dereq_('./_an-object')\n  , aFunction = _dereq_('./_a-function')\n  , SPECIES   = _dereq_('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n},{\"./_a-function\":4,\"./_an-object\":7,\"./_wks\":53}],47:[function(_dereq_,module,exports){\nvar toInteger = _dereq_('./_to-integer')\n  , defined   = _dereq_('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n},{\"./_defined\":16,\"./_to-integer\":49}],48:[function(_dereq_,module,exports){\nvar ctx                = _dereq_('./_ctx')\n  , invoke             = _dereq_('./_invoke')\n  , html               = _dereq_('./_html')\n  , cel                = _dereq_('./_dom-create')\n  , global             = _dereq_('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listner = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(_dereq_('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listner;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listner, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};\n},{\"./_cof\":10,\"./_ctx\":15,\"./_dom-create\":18,\"./_global\":22,\"./_html\":25,\"./_invoke\":26}],49:[function(_dereq_,module,exports){\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n},{}],50:[function(_dereq_,module,exports){\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = _dereq_('./_iobject')\n  , defined = _dereq_('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n},{\"./_defined\":16,\"./_iobject\":27}],51:[function(_dereq_,module,exports){\n// 7.1.15 ToLength\nvar toInteger = _dereq_('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n},{\"./_to-integer\":49}],52:[function(_dereq_,module,exports){\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n},{}],53:[function(_dereq_,module,exports){\nvar store      = _dereq_('./_shared')('wks')\n  , uid        = _dereq_('./_uid')\n  , Symbol     = _dereq_('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n},{\"./_global\":22,\"./_shared\":45,\"./_uid\":52}],54:[function(_dereq_,module,exports){\nvar classof   = _dereq_('./_classof')\n  , ITERATOR  = _dereq_('./_wks')('iterator')\n  , Iterators = _dereq_('./_iterators');\nmodule.exports = _dereq_('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n},{\"./_classof\":9,\"./_core\":14,\"./_iterators\":35,\"./_wks\":53}],55:[function(_dereq_,module,exports){\n'use strict';\nvar addToUnscopables = _dereq_('./_add-to-unscopables')\n  , step             = _dereq_('./_iter-step')\n  , Iterators        = _dereq_('./_iterators')\n  , toIObject        = _dereq_('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = _dereq_('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n},{\"./_add-to-unscopables\":5,\"./_iter-define\":32,\"./_iter-step\":34,\"./_iterators\":35,\"./_to-iobject\":50}],56:[function(_dereq_,module,exports){\n'use strict';\nvar strong = _dereq_('./_collection-strong');\n\n// 23.1 Map Objects\nmodule.exports = _dereq_('./_collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n},{\"./_collection\":13,\"./_collection-strong\":11}],57:[function(_dereq_,module,exports){\n\n},{}],58:[function(_dereq_,module,exports){\n'use strict';\nvar $                  = _dereq_('./_')\n  , LIBRARY            = _dereq_('./_library')\n  , global             = _dereq_('./_global')\n  , ctx                = _dereq_('./_ctx')\n  , classof            = _dereq_('./_classof')\n  , $export            = _dereq_('./_export')\n  , isObject           = _dereq_('./_is-object')\n  , anObject           = _dereq_('./_an-object')\n  , aFunction          = _dereq_('./_a-function')\n  , anInstance         = _dereq_('./_an-instance')\n  , forOf              = _dereq_('./_for-of')\n  , from               = _dereq_('./_array-from-iterable')\n  , setProto           = _dereq_('./_set-proto').set\n  , speciesConstructor = _dereq_('./_species-constructor')\n  , task               = _dereq_('./_task').set\n  , microtask          = _dereq_('./_microtask')\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar testResolve = function(sub){\n  var test = new $Promise(empty), promise;\n  if(sub)test.constructor = function(exec){\n    exec(empty, empty);\n  };\n  (promise = $Promise.resolve(test))['catch'](empty);\n  return promise === test;\n};\n\nvar USE_NATIVE = function(){\n  var works = false;\n  var SubPromise = function(x){\n    var self = new $Promise(x);\n    setProto(self, SubPromise.prototype);\n    return self;\n  };\n  try {\n    works = $Promise && $Promise.resolve && testResolve();\n    setProto(SubPromise, $Promise);\n    SubPromise.prototype = $.create($Promise.prototype, {constructor: {value: SubPromise}});\n    // actual Firefox has broken subclass support, test that\n    if(!(SubPromise.resolve(5).then(empty) instanceof SubPromise)){\n      works = false;\n    }\n    // V8 4.8- bug, https://code.google.com/p/v8/issues/detail?id=4162\n    if(works && _dereq_('./_descriptors')){\n      var thenableThenGotten = false;\n      $Promise.resolve($.setDesc({}, 'then', {\n        get: function(){ thenableThenGotten = true; }\n      }));\n      works = thenableThenGotten;\n    }\n  } catch(e){ works = false; }\n  return !!works;\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          result = handler === true ? value : handler(value);\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    if(isUnhandled(promise)){\n      var value = promise._v\n        , handler, console;\n      if(isNode){\n        process.emit('unhandledRejection', value, promise);\n      } else if(handler = global.onunhandledrejection){\n        handler({promise: promise, reason: value});\n      } else if((console = global.console) && console.error){\n        console.error('Unhandled promise rejection', value);\n      } promise._h = 2;\n    } promise._a = undefined;\n  });\n};\nvar isUnhandled = function(promise){\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  if(promise._h == 1)return false;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = _dereq_('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok   = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\n_dereq_('./_set-to-string-tag')($Promise, PROMISE);\n_dereq_('./_set-species')(PROMISE);\nWrapper = _dereq_('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE || testResolve(true)), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && _dereq_('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = from(iterable)\n        , remaining = values.length\n        , results   = Array(remaining);\n      if(remaining)$.each.call(values, function(promise, index){\n        var alreadyCalled = false;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled = true;\n          results[index] = value;\n          --remaining || resolve(results);\n        }, reject);\n      });\n      else resolve(results);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});\n},{\"./_\":3,\"./_a-function\":4,\"./_an-instance\":6,\"./_an-object\":7,\"./_array-from-iterable\":8,\"./_classof\":9,\"./_core\":14,\"./_ctx\":15,\"./_descriptors\":17,\"./_export\":19,\"./_for-of\":21,\"./_global\":22,\"./_is-object\":29,\"./_iter-detect\":33,\"./_library\":36,\"./_microtask\":38,\"./_redefine-all\":40,\"./_set-proto\":42,\"./_set-species\":43,\"./_set-to-string-tag\":44,\"./_species-constructor\":46,\"./_task\":48}],59:[function(_dereq_,module,exports){\n'use strict';\nvar $at  = _dereq_('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_dereq_('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n},{\"./_iter-define\":32,\"./_string-at\":47}],60:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = _dereq_('./_export');\n\n$export($export.P + $export.R, 'Map', {toJSON: _dereq_('./_collection-to-json')('Map')});\n},{\"./_collection-to-json\":12,\"./_export\":19}],61:[function(_dereq_,module,exports){\n_dereq_('./es6.array.iterator');\nvar global        = _dereq_('./_global')\n  , hide          = _dereq_('./_hide')\n  , Iterators     = _dereq_('./_iterators')\n  , TO_STRING_TAG = _dereq_('./_wks')('toStringTag')\n  , ArrayValues   = Iterators.Array;\n\n_dereq_('./_').each.call(['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], function(NAME){\n  var Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = ArrayValues;\n});\n},{\"./_\":3,\"./_global\":22,\"./_hide\":24,\"./_iterators\":35,\"./_wks\":53,\"./es6.array.iterator\":55}],62:[function(_dereq_,module,exports){\nvar opendolphin;\n(function (opendolphin) {\n    var Attribute = (function () {\n        function Attribute() {\n        }\n        Attribute.QUALIFIER_PROPERTY = \"qualifier\";\n        Attribute.DIRTY_PROPERTY = \"dirty\";\n        Attribute.BASE_VALUE = \"baseValue\";\n        Attribute.VALUE = \"value\";\n        Attribute.TAG = \"tag\";\n        return Attribute;\n    })();\n    opendolphin.Attribute = Attribute;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Command = (function () {\n        function Command() {\n            this.id = \"dolphin-core-command\";\n        }\n        return Command;\n    })();\n    opendolphin.Command = Command;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Tag = (function () {\n        function Tag() {\n        }\n        //Implemented as function so that it will never be changed from outside\n        /** The actual value of the attribute. This is the default if no tag is given.*/\n        Tag.value = function () {\n            return \"VALUE\";\n        };\n        /** the to-be-displayed String, not the key. I18N happens on the server. */\n        Tag.label = function () {\n            return \"LABEL\";\n        };\n        /** If the attribute represent tooltip**/\n        Tag.tooltip = function () {\n            return \"TOOLTIP\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint nullable:false */\n        Tag.mandatory = function () {\n            return \"MANDATORY\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint display:true */\n        Tag.visible = function () {\n            return \"VISIBLE\";\n        };\n        /** \"true\" or \"false\" */\n        Tag.enabled = function () {\n            return \"ENABLED\";\n        };\n        /** regular expression for local, syntactical constraints like in \"rejectField\" */\n        Tag.regex = function () {\n            return \"REGEX\";\n        };\n        /** a single text; e.g. \"textArea\" if the String value should be displayed in a text area instead of a textField */\n        Tag.widgetHint = function () {\n            return \"WIDGET_HINT\";\n        };\n        /** a single text; e.g. \"java.util.Date\" if the value String represents a date */\n        Tag.valueType = function () {\n            return \"VALUE_TYPE\";\n        };\n        return Tag;\n    })();\n    opendolphin.Tag = Tag;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeCreatedNotification = (function (_super) {\n        __extends(AttributeCreatedNotification, _super);\n        function AttributeCreatedNotification(pmId, attributeId, propertyName, newValue, qualifier, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.attributeId = attributeId;\n            this.propertyName = propertyName;\n            this.newValue = newValue;\n            this.qualifier = qualifier;\n            this.tag = tag;\n            this.id = 'AttributeCreated';\n            this.className = \"org.opendolphin.core.comm.AttributeCreatedNotification\";\n        }\n        return AttributeCreatedNotification;\n    })(opendolphin.Command);\n    opendolphin.AttributeCreatedNotification = AttributeCreatedNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeMetadataChangedCommand = (function (_super) {\n        __extends(AttributeMetadataChangedCommand, _super);\n        function AttributeMetadataChangedCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'AttributeMetadataChanged';\n            this.className = \"org.opendolphin.core.comm.AttributeMetadataChangedCommand\";\n        }\n        return AttributeMetadataChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.AttributeMetadataChangedCommand = AttributeMetadataChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var BaseValueChangedCommand = (function (_super) {\n        __extends(BaseValueChangedCommand, _super);\n        function BaseValueChangedCommand(attributeId) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.id = 'BaseValueChanged';\n            this.className = \"org.opendolphin.core.comm.BaseValueChangedCommand\";\n        }\n        return BaseValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.BaseValueChangedCommand = BaseValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CallNamedActionCommand = (function (_super) {\n        __extends(CallNamedActionCommand, _super);\n        function CallNamedActionCommand(actionName) {\n            _super.call(this);\n            this.actionName = actionName;\n            this.id = 'CallNamedAction';\n            this.className = \"org.opendolphin.core.comm.CallNamedActionCommand\";\n        }\n        return CallNamedActionCommand;\n    })(opendolphin.Command);\n    opendolphin.CallNamedActionCommand = CallNamedActionCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ChangeAttributeMetadataCommand = (function (_super) {\n        __extends(ChangeAttributeMetadataCommand, _super);\n        function ChangeAttributeMetadataCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'ChangeAttributeMetadata';\n            this.className = \"org.opendolphin.core.comm.ChangeAttributeMetadataCommand\";\n        }\n        return ChangeAttributeMetadataCommand;\n    })(opendolphin.Command);\n    opendolphin.ChangeAttributeMetadataCommand = ChangeAttributeMetadataCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var EventBus = (function () {\n        function EventBus() {\n            this.eventHandlers = [];\n        }\n        EventBus.prototype.onEvent = function (eventHandler) {\n            this.eventHandlers.push(eventHandler);\n        };\n        EventBus.prototype.trigger = function (event) {\n            this.eventHandlers.forEach(function (handle) { return handle(event); });\n        };\n        return EventBus;\n    })();\n    opendolphin.EventBus = EventBus;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var presentationModelInstanceCount = 0; // todo dk: consider making this static in class\n    var ClientPresentationModel = (function () {\n        function ClientPresentationModel(id, presentationModelType) {\n            this.id = id;\n            this.presentationModelType = presentationModelType;\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.dirty = false;\n            if (typeof id !== 'undefined' && id != null) {\n                this.id = id;\n            }\n            else {\n                this.id = (presentationModelInstanceCount++).toString();\n            }\n            this.invalidBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n        }\n        // todo dk: align with Java version: move to ClientDolphin and auto-add to model store\n        /** a copy constructor for anything but IDs. Per default, copies are client side only, no automatic update applies. */\n        ClientPresentationModel.prototype.copy = function () {\n            var result = new ClientPresentationModel(null, this.presentationModelType);\n            result.clientSideOnly = true;\n            this.getAttributes().forEach(function (attribute) {\n                var attributeCopy = attribute.copy();\n                result.addAttribute(attributeCopy);\n            });\n            return result;\n        };\n        //add array of attributes\n        ClientPresentationModel.prototype.addAttributes = function (attributes) {\n            var _this = this;\n            if (!attributes || attributes.length < 1)\n                return;\n            attributes.forEach(function (attr) {\n                _this.addAttribute(attr);\n            });\n        };\n        ClientPresentationModel.prototype.addAttribute = function (attribute) {\n            var _this = this;\n            if (!attribute || (this.attributes.indexOf(attribute) > -1)) {\n                return;\n            }\n            if (this.findAttributeByPropertyNameAndTag(attribute.propertyName, attribute.tag)) {\n                throw new Error(\"There already is an attribute with property name: \" + attribute.propertyName\n                    + \" and tag: \" + attribute.tag + \" in presentation model with id: \" + this.id);\n            }\n            if (attribute.getQualifier() && this.findAttributeByQualifier(attribute.getQualifier())) {\n                throw new Error(\"There already is an attribute with qualifier: \" + attribute.getQualifier()\n                    + \" in presentation model with id: \" + this.id);\n            }\n            attribute.setPresentationModel(this);\n            this.attributes.push(attribute);\n            if (attribute.tag == opendolphin.Tag.value()) {\n                this.updateDirty();\n            }\n            attribute.onValueChange(function (evt) {\n                _this.invalidBus.trigger({ source: _this });\n            });\n        };\n        ClientPresentationModel.prototype.updateDirty = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].isDirty()) {\n                    this.setDirty(true);\n                    return;\n                }\n            }\n            ;\n            this.setDirty(false);\n        };\n        ClientPresentationModel.prototype.updateAttributeDirtyness = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                this.attributes[i].updateDirty();\n            }\n        };\n        ClientPresentationModel.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientPresentationModel.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n        };\n        ClientPresentationModel.prototype.reset = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.reset();\n            });\n        };\n        ClientPresentationModel.prototype.rebase = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.rebase();\n            });\n        };\n        ClientPresentationModel.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientPresentationModel.prototype.onInvalidated = function (handleInvalidate) {\n            this.invalidBus.onEvent(handleInvalidate);\n        };\n        /** returns a copy of the internal state */\n        ClientPresentationModel.prototype.getAttributes = function () {\n            return this.attributes.slice(0);\n        };\n        ClientPresentationModel.prototype.getAt = function (propertyName, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            return this.findAttributeByPropertyNameAndTag(propertyName, tag);\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyName = function (propertyName) {\n            return this.findAttributeByPropertyNameAndTag(propertyName, opendolphin.Tag.value());\n        };\n        ClientPresentationModel.prototype.findAllAttributesByPropertyName = function (propertyName) {\n            var result = [];\n            if (!propertyName)\n                return null;\n            this.attributes.forEach(function (attribute) {\n                if (attribute.propertyName == propertyName) {\n                    result.push(attribute);\n                }\n            });\n            return result;\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyNameAndTag = function (propertyName, tag) {\n            if (!propertyName || !tag)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if ((this.attributes[i].propertyName == propertyName) && (this.attributes[i].tag == tag)) {\n                    return this.attributes[i];\n                }\n            }\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeByQualifier = function (qualifier) {\n            if (!qualifier)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].getQualifier() == qualifier) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeById = function (id) {\n            if (!id)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].id == id) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.syncWith = function (sourcePresentationModel) {\n            this.attributes.forEach(function (targetAttribute) {\n                var sourceAttribute = sourcePresentationModel.getAt(targetAttribute.propertyName, targetAttribute.tag);\n                if (sourceAttribute) {\n                    targetAttribute.syncWith(sourceAttribute);\n                }\n            });\n        };\n        return ClientPresentationModel;\n    })();\n    opendolphin.ClientPresentationModel = ClientPresentationModel;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientAttribute = (function () {\n        function ClientAttribute(propertyName, qualifier, value, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            this.propertyName = propertyName;\n            this.tag = tag;\n            this.dirty = false;\n            this.id = \"\" + (ClientAttribute.clientAttributeInstanceCount++) + \"C\";\n            this.valueChangeBus = new opendolphin.EventBus();\n            this.qualifierChangeBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n            this.baseValueChangeBus = new opendolphin.EventBus();\n            this.setValue(value);\n            this.setBaseValue(value);\n            this.setQualifier(qualifier);\n        }\n        /** a copy constructor with new id and no presentation model */\n        ClientAttribute.prototype.copy = function () {\n            var result = new ClientAttribute(this.propertyName, this.getQualifier(), this.getValue(), this.tag);\n            result.setBaseValue(this.getBaseValue());\n            return result;\n        };\n        ClientAttribute.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientAttribute.prototype.getBaseValue = function () {\n            return this.baseValue;\n        };\n        ClientAttribute.prototype.setPresentationModel = function (presentationModel) {\n            if (this.presentationModel) {\n                alert(\"You can not set a presentation model for an attribute that is already bound.\");\n            }\n            this.presentationModel = presentationModel;\n        };\n        ClientAttribute.prototype.getPresentationModel = function () {\n            return this.presentationModel;\n        };\n        ClientAttribute.prototype.getValue = function () {\n            return this.value;\n        };\n        ClientAttribute.prototype.setValue = function (newValue) {\n            var verifiedValue = ClientAttribute.checkValue(newValue);\n            if (this.value == verifiedValue)\n                return;\n            var oldValue = this.value;\n            this.value = verifiedValue;\n            this.setDirty(this.calculateDirty(this.baseValue, verifiedValue));\n            this.valueChangeBus.trigger({ 'oldValue': oldValue, 'newValue': verifiedValue });\n        };\n        ClientAttribute.prototype.calculateDirty = function (baseValue, value) {\n            if (baseValue == null) {\n                return value != null;\n            }\n            else {\n                return baseValue != value;\n            }\n        };\n        ClientAttribute.prototype.updateDirty = function () {\n            this.setDirty(this.calculateDirty(this.baseValue, this.value));\n        };\n        ClientAttribute.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n            if (this.presentationModel)\n                this.presentationModel.updateDirty();\n        };\n        ClientAttribute.prototype.setQualifier = function (newQualifier) {\n            if (this.qualifier == newQualifier)\n                return;\n            var oldQualifier = this.qualifier;\n            this.qualifier = newQualifier;\n            this.qualifierChangeBus.trigger({ 'oldValue': oldQualifier, 'newValue': newQualifier });\n        };\n        ClientAttribute.prototype.getQualifier = function () {\n            return this.qualifier;\n        };\n        ClientAttribute.prototype.setBaseValue = function (baseValue) {\n            if (this.baseValue == baseValue)\n                return;\n            var oldBaseValue = this.baseValue;\n            this.baseValue = baseValue;\n            this.setDirty(this.calculateDirty(baseValue, this.value));\n            this.baseValueChangeBus.trigger({ 'oldValue': oldBaseValue, 'newValue': baseValue });\n        };\n        ClientAttribute.prototype.rebase = function () {\n            this.setBaseValue(this.value);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.prototype.reset = function () {\n            this.setValue(this.baseValue);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.checkValue = function (value) {\n            if (value == null || value == undefined) {\n                return null;\n            }\n            var result = value;\n            if (result instanceof String || result instanceof Boolean || result instanceof Number) {\n                result = value.valueOf();\n            }\n            if (result instanceof ClientAttribute) {\n                console.log(\"An Attribute may not itself contain an attribute as a value. Assuming you forgot to call value.\");\n                result = this.checkValue(value.value);\n            }\n            var ok = false;\n            if (this.SUPPORTED_VALUE_TYPES.indexOf(typeof result) > -1 || result instanceof Date) {\n                ok = true;\n            }\n            if (!ok) {\n                throw new Error(\"Attribute values of this type are not allowed: \" + typeof value);\n            }\n            return result;\n        };\n        ClientAttribute.prototype.onValueChange = function (eventHandler) {\n            this.valueChangeBus.onEvent(eventHandler);\n            eventHandler({ \"oldValue\": this.value, \"newValue\": this.value });\n        };\n        ClientAttribute.prototype.onQualifierChange = function (eventHandler) {\n            this.qualifierChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onBaseValueChange = function (eventHandler) {\n            this.baseValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.syncWith = function (sourceAttribute) {\n            if (sourceAttribute) {\n                this.setQualifier(sourceAttribute.getQualifier()); // sequence is important\n                this.setBaseValue(sourceAttribute.getBaseValue());\n                this.setValue(sourceAttribute.value);\n            }\n        };\n        ClientAttribute.SUPPORTED_VALUE_TYPES = [\"string\", \"number\", \"boolean\"];\n        ClientAttribute.clientAttributeInstanceCount = 0;\n        return ClientAttribute;\n    })();\n    opendolphin.ClientAttribute = ClientAttribute;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var ValueChangedCommand = (function (_super) {\n        __extends(ValueChangedCommand, _super);\n        function ValueChangedCommand(attributeId, oldValue, newValue) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.oldValue = oldValue;\n            this.newValue = newValue;\n            this.id = \"ValueChanged\";\n            this.className = \"org.opendolphin.core.comm.ValueChangedCommand\";\n        }\n        return ValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.ValueChangedCommand = ValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var NamedCommand = (function (_super) {\n        __extends(NamedCommand, _super);\n        function NamedCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.NamedCommand\";\n        }\n        return NamedCommand;\n    })(opendolphin.Command);\n    opendolphin.NamedCommand = NamedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var EmptyNotification = (function (_super) {\n        __extends(EmptyNotification, _super);\n        function EmptyNotification() {\n            _super.call(this);\n            this.id = \"Empty\";\n            this.className = \"org.opendolphin.core.comm.EmptyNotification\";\n        }\n        return EmptyNotification;\n    })(opendolphin.Command);\n    opendolphin.EmptyNotification = EmptyNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"NamedCommand.ts\"/>\n/// <reference path=\"EmptyNotification.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /** A Batcher that does no batching but merely takes the first element of the queue as the single item in the batch */\n    var NoCommandBatcher = (function () {\n        function NoCommandBatcher() {\n        }\n        NoCommandBatcher.prototype.batch = function (queue) {\n            return [queue.shift()];\n        };\n        return NoCommandBatcher;\n    })();\n    opendolphin.NoCommandBatcher = NoCommandBatcher;\n    /** A batcher that batches the blinds (commands with no callback) and optionally also folds value changes */\n    var BlindCommandBatcher = (function () {\n        /** folding: whether we should try folding ValueChangedCommands */\n        function BlindCommandBatcher(folding, maxBatchSize) {\n            if (folding === void 0) { folding = true; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.folding = folding;\n            this.maxBatchSize = maxBatchSize;\n        }\n        BlindCommandBatcher.prototype.batch = function (queue) {\n            var result = [];\n            this.processNext(this.maxBatchSize, queue, result); // do not batch more than this.maxBatchSize commands to avoid stack overflow on recursion.\n            return result;\n        };\n        // recursive impl method to side-effect both queue and batch\n        BlindCommandBatcher.prototype.processNext = function (maxBatchSize, queue, batch) {\n            if (queue.length < 1 || maxBatchSize < 1)\n                return;\n            var candidate = queue.shift();\n            if (this.folding && candidate.command instanceof opendolphin.ValueChangedCommand && (!candidate.handler)) {\n                var found = null;\n                var canCmd = candidate.command;\n                for (var i = 0; i < batch.length && found == null; i++) {\n                    if (batch[i].command instanceof opendolphin.ValueChangedCommand) {\n                        var batchCmd = batch[i].command;\n                        if (canCmd.attributeId == batchCmd.attributeId && batchCmd.newValue == canCmd.oldValue) {\n                            found = batchCmd;\n                        }\n                    }\n                }\n                if (found) {\n                    found.newValue = canCmd.newValue; // change existing value, do not batch\n                }\n                else {\n                    batch.push(candidate); // we cannot merge, so batch the candidate\n                }\n            }\n            else {\n                batch.push(candidate);\n            }\n            if (!candidate.handler &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.NamedCommand\") &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.EmptyNotification\") // and no unknown client side effect\n            ) {\n                this.processNext(maxBatchSize - 1, queue, batch); // then we can proceed with batching\n            }\n        };\n        return BlindCommandBatcher;\n    })();\n    opendolphin.BlindCommandBatcher = BlindCommandBatcher;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Codec = (function () {\n        function Codec() {\n        }\n        Codec.prototype.encode = function (commands) {\n            return JSON.stringify(commands); // todo dk: look for possible API support for character encoding\n        };\n        Codec.prototype.decode = function (transmitted) {\n            if (typeof transmitted == 'string') {\n                return JSON.parse(transmitted);\n            }\n            else {\n                return transmitted;\n            }\n        };\n        return Codec;\n    })();\n    opendolphin.Codec = Codec;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var SignalCommand = (function (_super) {\n        __extends(SignalCommand, _super);\n        function SignalCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.SignalCommand\";\n        }\n        return SignalCommand;\n    })(opendolphin.Command);\n    opendolphin.SignalCommand = SignalCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CreatePresentationModelCommand = (function (_super) {\n        __extends(CreatePresentationModelCommand, _super);\n        function CreatePresentationModelCommand(presentationModel) {\n            _super.call(this);\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.id = \"CreatePresentationModel\";\n            this.className = \"org.opendolphin.core.comm.CreatePresentationModelCommand\";\n            this.pmId = presentationModel.id;\n            this.pmType = presentationModel.presentationModelType;\n            var attrs = this.attributes;\n            presentationModel.getAttributes().forEach(function (attr) {\n                attrs.push({\n                    propertyName: attr.propertyName,\n                    id: attr.id,\n                    qualifier: attr.getQualifier(),\n                    value: attr.getValue(),\n                    tag: attr.tag\n                });\n            });\n        }\n        return CreatePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.CreatePresentationModelCommand = CreatePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Map = (function () {\n        function Map() {\n            this.keys = [];\n            this.data = [];\n        }\n        Map.prototype.put = function (key, value) {\n            if (!this.containsKey(key)) {\n                this.keys.push(key);\n            }\n            this.data[this.keys.indexOf(key)] = value;\n        };\n        Map.prototype.get = function (key) {\n            return this.data[this.keys.indexOf(key)];\n        };\n        Map.prototype.remove = function (key) {\n            if (this.containsKey(key)) {\n                var index = this.keys.indexOf(key);\n                this.keys.splice(index, 1);\n                this.data.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        Map.prototype.isEmpty = function () {\n            return this.keys.length == 0;\n        };\n        Map.prototype.length = function () {\n            return this.keys.length;\n        };\n        Map.prototype.forEach = function (handler) {\n            for (var i = 0; i < this.keys.length; i++) {\n                handler(this.keys[i], this.data[i]);\n            }\n        };\n        Map.prototype.containsKey = function (key) {\n            return this.keys.indexOf(key) > -1;\n        };\n        Map.prototype.containsValue = function (value) {\n            return this.data.indexOf(value) > -1;\n        };\n        Map.prototype.values = function () {\n            return this.data.slice(0);\n        };\n        Map.prototype.keySet = function () {\n            return this.keys.slice(0);\n        };\n        return Map;\n    })();\n    opendolphin.Map = Map;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedAllPresentationModelsOfTypeNotification = (function (_super) {\n        __extends(DeletedAllPresentationModelsOfTypeNotification, _super);\n        function DeletedAllPresentationModelsOfTypeNotification(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeletedAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeletedAllPresentationModelsOfTypeNotification\";\n        }\n        return DeletedAllPresentationModelsOfTypeNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedAllPresentationModelsOfTypeNotification = DeletedAllPresentationModelsOfTypeNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedPresentationModelNotification = (function (_super) {\n        __extends(DeletedPresentationModelNotification, _super);\n        function DeletedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletedPresentationModelNotification\";\n        }\n        return DeletedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedPresentationModelNotification = DeletedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"CreatePresentationModelCommand.ts\"/>\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"ChangeAttributeMetadataCommand.ts\"/>\n/// <reference path=\"Attribute.ts\"/>\n/// <reference path=\"Map.ts\"/>\n/// <reference path=\"DeletedAllPresentationModelsOfTypeNotification.ts\"/>\n/// <reference path=\"EventBus.ts\"/>\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"DeletedPresentationModelNotification.ts\"/>\n/// <reference path=\"BaseValueChangedCommand.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    (function (Type) {\n        Type[Type[\"ADDED\"] = 'ADDED'] = \"ADDED\";\n        Type[Type[\"REMOVED\"] = 'REMOVED'] = \"REMOVED\";\n    })(opendolphin.Type || (opendolphin.Type = {}));\n    var Type = opendolphin.Type;\n    var ClientModelStore = (function () {\n        function ClientModelStore(clientDolphin) {\n            this.clientDolphin = clientDolphin;\n            this.presentationModels = new opendolphin.Map();\n            this.presentationModelsPerType = new opendolphin.Map();\n            this.attributesPerId = new opendolphin.Map();\n            this.attributesPerQualifier = new opendolphin.Map();\n            this.modelStoreChangeBus = new opendolphin.EventBus();\n        }\n        ClientModelStore.prototype.getClientDolphin = function () {\n            return this.clientDolphin;\n        };\n        ClientModelStore.prototype.registerModel = function (model) {\n            var _this = this;\n            if (model.clientSideOnly) {\n                return;\n            }\n            var connector = this.clientDolphin.getClientConnector();\n            var createPMCommand = new opendolphin.CreatePresentationModelCommand(model);\n            connector.send(createPMCommand, null);\n            model.getAttributes().forEach(function (attribute) {\n                _this.registerAttribute(attribute);\n            });\n        };\n        ClientModelStore.prototype.registerAttribute = function (attribute) {\n            var _this = this;\n            this.addAttributeById(attribute);\n            if (attribute.getQualifier()) {\n                this.addAttributeByQualifier(attribute);\n            }\n            // whenever an attribute changes its value, the server needs to be notified\n            // and all other attributes with the same qualifier are given the same value\n            attribute.onValueChange(function (evt) {\n                var valueChangeCommand = new opendolphin.ValueChangedCommand(attribute.id, evt.oldValue, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(valueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setValue(attribute.getValue());\n                    });\n                }\n            });\n            // all attributes with the same qualifier should have the same base value\n            attribute.onBaseValueChange(function (evt) {\n                var baseValueChangeCommand = new opendolphin.BaseValueChangedCommand(attribute.id);\n                _this.clientDolphin.getClientConnector().send(baseValueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setBaseValue(attribute.getBaseValue());\n                    });\n                }\n            });\n            attribute.onQualifierChange(function (evt) {\n                var changeAttrMetadataCmd = new opendolphin.ChangeAttributeMetadataCommand(attribute.id, opendolphin.Attribute.QUALIFIER_PROPERTY, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(changeAttrMetadataCmd, null);\n            });\n        };\n        ClientModelStore.prototype.add = function (model) {\n            if (!model) {\n                return false;\n            }\n            if (this.presentationModels.containsKey(model.id)) {\n                console.log(\"There already is a PM with id \" + model.id);\n            }\n            var added = false;\n            if (!this.presentationModels.containsValue(model)) {\n                this.presentationModels.put(model.id, model);\n                this.addPresentationModelByType(model);\n                this.registerModel(model);\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.ADDED, 'clientPresentationModel': model });\n                added = true;\n            }\n            return added;\n        };\n        ClientModelStore.prototype.remove = function (model) {\n            var _this = this;\n            if (!model) {\n                return false;\n            }\n            var removed = false;\n            if (this.presentationModels.containsValue(model)) {\n                this.removePresentationModelByType(model);\n                this.presentationModels.remove(model.id);\n                model.getAttributes().forEach(function (attribute) {\n                    _this.removeAttributeById(attribute);\n                    if (attribute.getQualifier()) {\n                        _this.removeAttributeByQualifier(attribute);\n                    }\n                });\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.REMOVED, 'clientPresentationModel': model });\n                removed = true;\n            }\n            return removed;\n        };\n        ClientModelStore.prototype.findAttributesByFilter = function (filter) {\n            var matches = [];\n            this.presentationModels.forEach(function (key, model) {\n                model.getAttributes().forEach(function (attr) {\n                    if (filter(attr)) {\n                        matches.push(attr);\n                    }\n                });\n            });\n            return matches;\n        };\n        ClientModelStore.prototype.addPresentationModelByType = function (model) {\n            if (!model) {\n                return;\n            }\n            var type = model.presentationModelType;\n            if (!type) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(type);\n            if (!presentationModels) {\n                presentationModels = [];\n                this.presentationModelsPerType.put(type, presentationModels);\n            }\n            if (!(presentationModels.indexOf(model) > -1)) {\n                presentationModels.push(model);\n            }\n        };\n        ClientModelStore.prototype.removePresentationModelByType = function (model) {\n            if (!model || !(model.presentationModelType)) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(model.presentationModelType);\n            if (!presentationModels) {\n                return;\n            }\n            if (presentationModels.length > -1) {\n                presentationModels.splice(presentationModels.indexOf(model), 1);\n            }\n            if (presentationModels.length === 0) {\n                this.presentationModelsPerType.remove(model.presentationModelType);\n            }\n        };\n        ClientModelStore.prototype.listPresentationModelIds = function () {\n            return this.presentationModels.keySet().slice(0);\n        };\n        ClientModelStore.prototype.listPresentationModels = function () {\n            return this.presentationModels.values();\n        };\n        ClientModelStore.prototype.findPresentationModelById = function (id) {\n            return this.presentationModels.get(id);\n        };\n        ClientModelStore.prototype.findAllPresentationModelByType = function (type) {\n            if (!type || !this.presentationModelsPerType.containsKey(type)) {\n                return [];\n            }\n            return this.presentationModelsPerType.get(type).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            var _this = this;\n            var presentationModels = this.findAllPresentationModelByType(presentationModelType);\n            presentationModels.forEach(function (pm) {\n                _this.deletePresentationModel(pm, false);\n            });\n            this.clientDolphin.getClientConnector().send(new opendolphin.DeletedAllPresentationModelsOfTypeNotification(presentationModelType), undefined);\n        };\n        ClientModelStore.prototype.deletePresentationModel = function (model, notify) {\n            if (!model) {\n                return;\n            }\n            if (this.containsPresentationModel(model.id)) {\n                this.remove(model);\n                if (!notify || model.clientSideOnly) {\n                    return;\n                }\n                this.clientDolphin.getClientConnector().send(new opendolphin.DeletedPresentationModelNotification(model.id), null);\n            }\n        };\n        ClientModelStore.prototype.containsPresentationModel = function (id) {\n            return this.presentationModels.containsKey(id);\n        };\n        ClientModelStore.prototype.addAttributeById = function (attribute) {\n            if (!attribute || this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.put(attribute.id, attribute);\n        };\n        ClientModelStore.prototype.removeAttributeById = function (attribute) {\n            if (!attribute || !this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.remove(attribute.id);\n        };\n        ClientModelStore.prototype.findAttributeById = function (id) {\n            return this.attributesPerId.get(id);\n        };\n        ClientModelStore.prototype.addAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                attributes = [];\n                this.attributesPerQualifier.put(attribute.getQualifier(), attributes);\n            }\n            if (!(attributes.indexOf(attribute) > -1)) {\n                attributes.push(attribute);\n            }\n        };\n        ClientModelStore.prototype.removeAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                return;\n            }\n            if (attributes.length > -1) {\n                attributes.splice(attributes.indexOf(attribute), 1);\n            }\n            if (attributes.length === 0) {\n                this.attributesPerQualifier.remove(attribute.getQualifier());\n            }\n        };\n        ClientModelStore.prototype.findAllAttributesByQualifier = function (qualifier) {\n            if (!qualifier || !this.attributesPerQualifier.containsKey(qualifier)) {\n                return [];\n            }\n            return this.attributesPerQualifier.get(qualifier).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.onModelStoreChange = function (eventHandler) {\n            this.modelStoreChangeBus.onEvent(eventHandler);\n        };\n        ClientModelStore.prototype.onModelStoreChangeForType = function (presentationModelType, eventHandler) {\n            this.modelStoreChangeBus.onEvent(function (pmStoreEvent) {\n                if (pmStoreEvent.clientPresentationModel.presentationModelType == presentationModelType) {\n                    eventHandler(pmStoreEvent);\n                }\n            });\n        };\n        return ClientModelStore;\n    })();\n    opendolphin.ClientModelStore = ClientModelStore;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"EmptyNotification.ts\" />\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientModelStore.ts\" />\n/// <reference path=\"ClientConnector.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"AttributeCreatedNotification.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientDolphin = (function () {\n        function ClientDolphin() {\n        }\n        ClientDolphin.prototype.setClientConnector = function (clientConnector) {\n            this.clientConnector = clientConnector;\n        };\n        ClientDolphin.prototype.getClientConnector = function () {\n            return this.clientConnector;\n        };\n        ClientDolphin.prototype.send = function (commandName, onFinished) {\n            this.clientConnector.send(new opendolphin.NamedCommand(commandName), onFinished);\n        };\n        ClientDolphin.prototype.sendEmpty = function (onFinished) {\n            this.clientConnector.send(new opendolphin.EmptyNotification(), onFinished);\n        };\n        // factory method for attributes\n        ClientDolphin.prototype.attribute = function (propertyName, qualifier, value, tag) {\n            return new opendolphin.ClientAttribute(propertyName, qualifier, value, tag);\n        };\n        // factory method for presentation models\n        ClientDolphin.prototype.presentationModel = function (id, type) {\n            var attributes = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                attributes[_i - 2] = arguments[_i];\n            }\n            var model = new opendolphin.ClientPresentationModel(id, type);\n            if (attributes && attributes.length > 0) {\n                attributes.forEach(function (attribute) {\n                    model.addAttribute(attribute);\n                });\n            }\n            this.getClientModelStore().add(model);\n            return model;\n        };\n        ClientDolphin.prototype.setClientModelStore = function (clientModelStore) {\n            this.clientModelStore = clientModelStore;\n        };\n        ClientDolphin.prototype.getClientModelStore = function () {\n            return this.clientModelStore;\n        };\n        ClientDolphin.prototype.listPresentationModelIds = function () {\n            return this.getClientModelStore().listPresentationModelIds();\n        };\n        ClientDolphin.prototype.listPresentationModels = function () {\n            return this.getClientModelStore().listPresentationModels();\n        };\n        ClientDolphin.prototype.findAllPresentationModelByType = function (presentationModelType) {\n            return this.getClientModelStore().findAllPresentationModelByType(presentationModelType);\n        };\n        ClientDolphin.prototype.getAt = function (id) {\n            return this.findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.findPresentationModelById = function (id) {\n            return this.getClientModelStore().findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.deletePresentationModel = function (modelToDelete) {\n            this.getClientModelStore().deletePresentationModel(modelToDelete, true);\n        };\n        ClientDolphin.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            this.getClientModelStore().deleteAllPresentationModelOfType(presentationModelType);\n        };\n        ClientDolphin.prototype.updatePresentationModelQualifier = function (presentationModel) {\n            var _this = this;\n            presentationModel.getAttributes().forEach(function (sourceAttribute) {\n                _this.updateAttributeQualifier(sourceAttribute);\n            });\n        };\n        ClientDolphin.prototype.updateAttributeQualifier = function (sourceAttribute) {\n            if (!sourceAttribute.getQualifier())\n                return;\n            var attributes = this.getClientModelStore().findAllAttributesByQualifier(sourceAttribute.getQualifier());\n            attributes.forEach(function (targetAttribute) {\n                if (targetAttribute.tag != sourceAttribute.tag)\n                    return; // attributes with same qualifier and tag\n                targetAttribute.setValue(sourceAttribute.getValue()); // should always have the same value\n                targetAttribute.setBaseValue(sourceAttribute.getBaseValue()); // and same base value and so dirtyness\n            });\n        };\n        ClientDolphin.prototype.tag = function (presentationModel, propertyName, value, tag) {\n            var clientAttribute = new opendolphin.ClientAttribute(propertyName, null, value, tag);\n            this.addAttributeToModel(presentationModel, clientAttribute);\n            return clientAttribute;\n        };\n        ClientDolphin.prototype.addAttributeToModel = function (presentationModel, clientAttribute) {\n            presentationModel.addAttribute(clientAttribute);\n            this.getClientModelStore().registerAttribute(clientAttribute);\n            if (!presentationModel.clientSideOnly) {\n                this.clientConnector.send(new opendolphin.AttributeCreatedNotification(presentationModel.id, clientAttribute.id, clientAttribute.propertyName, clientAttribute.getValue(), clientAttribute.getQualifier(), clientAttribute.tag), null);\n            }\n        };\n        ////// push support ///////\n        ClientDolphin.prototype.startPushListening = function (pushActionName, releaseActionName) {\n            this.clientConnector.setPushListener(new opendolphin.NamedCommand(pushActionName));\n            this.clientConnector.setReleaseCommand(new opendolphin.SignalCommand(releaseActionName));\n            this.clientConnector.setPushEnabled(true);\n            this.clientConnector.listen();\n        };\n        ClientDolphin.prototype.stopPushListening = function () {\n            this.clientConnector.setPushEnabled(false);\n        };\n        return ClientDolphin;\n    })();\n    opendolphin.ClientDolphin = ClientDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var PresentationModelResetedCommand = (function (_super) {\n        __extends(PresentationModelResetedCommand, _super);\n        function PresentationModelResetedCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'PresentationModelReseted';\n            this.className = \"org.opendolphin.core.comm.PresentationModelResetedCommand\";\n        }\n        return PresentationModelResetedCommand;\n    })(opendolphin.Command);\n    opendolphin.PresentationModelResetedCommand = PresentationModelResetedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SavedPresentationModelNotification = (function (_super) {\n        __extends(SavedPresentationModelNotification, _super);\n        function SavedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'SavedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SavedPresentationModelNotification\";\n        }\n        return SavedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.SavedPresentationModelNotification = SavedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var InitializeAttributeCommand = (function (_super) {\n        __extends(InitializeAttributeCommand, _super);\n        function InitializeAttributeCommand(pmId, pmType, propertyName, qualifier, newValue, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.pmType = pmType;\n            this.propertyName = propertyName;\n            this.qualifier = qualifier;\n            this.newValue = newValue;\n            this.tag = tag;\n            this.id = 'InitializeAttribute';\n            this.className = \"org.opendolphin.core.comm.InitializeAttributeCommand\";\n        }\n        return InitializeAttributeCommand;\n    })(opendolphin.Command);\n    opendolphin.InitializeAttributeCommand = InitializeAttributeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SwitchPresentationModelCommand = (function (_super) {\n        __extends(SwitchPresentationModelCommand, _super);\n        function SwitchPresentationModelCommand(pmId, sourcePmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.sourcePmId = sourcePmId;\n            this.id = 'SwitchPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SwitchPresentationModelCommand\";\n        }\n        return SwitchPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.SwitchPresentationModelCommand = SwitchPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeleteAllPresentationModelsOfTypeCommand = (function (_super) {\n        __extends(DeleteAllPresentationModelsOfTypeCommand, _super);\n        function DeleteAllPresentationModelsOfTypeCommand(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeleteAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeleteAllPresentationModelsOfTypeCommand\";\n        }\n        return DeleteAllPresentationModelsOfTypeCommand;\n    })(opendolphin.Command);\n    opendolphin.DeleteAllPresentationModelsOfTypeCommand = DeleteAllPresentationModelsOfTypeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletePresentationModelCommand = (function (_super) {\n        __extends(DeletePresentationModelCommand, _super);\n        function DeletePresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletePresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletePresentationModelCommand\";\n        }\n        return DeletePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.DeletePresentationModelCommand = DeletePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DataCommand = (function (_super) {\n        __extends(DataCommand, _super);\n        function DataCommand(data) {\n            _super.call(this);\n            this.data = data;\n            this.id = \"Data\";\n            this.className = \"org.opendolphin.core.comm.DataCommand\";\n        }\n        return DataCommand;\n    })(opendolphin.Command);\n    opendolphin.DataCommand = DataCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"CommandBatcher.ts\" />\n/// <reference path=\"Codec.ts\" />\n/// <reference path=\"CallNamedActionCommand.ts\" />\n/// <reference path=\"ClientDolphin.ts\" />\n/// <reference path=\"AttributeMetadataChangedCommand.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"PresentationModelResetedCommand.ts\" />\n/// <reference path=\"SavedPresentationModelNotification.ts\" />\n/// <reference path=\"InitializeAttributeCommand.ts\" />\n/// <reference path=\"SwitchPresentationModelCommand.ts\" />\n/// <reference path=\"BaseValueChangedCommand.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeletePresentationModelCommand.ts\" />\n/// <reference path=\"CreatePresentationModelCommand.ts\" />\n/// <reference path=\"DataCommand.ts\" />\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientConnector = (function () {\n        function ClientConnector(transmitter, clientDolphin, slackMS, maxBatchSize) {\n            if (slackMS === void 0) { slackMS = 0; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.commandQueue = [];\n            this.currentlySending = false;\n            this.pushEnabled = false;\n            this.waiting = false;\n            this.transmitter = transmitter;\n            this.clientDolphin = clientDolphin;\n            this.slackMS = slackMS;\n            this.codec = new opendolphin.Codec();\n            this.commandBatcher = new opendolphin.BlindCommandBatcher(true, maxBatchSize);\n        }\n        ClientConnector.prototype.setCommandBatcher = function (newBatcher) {\n            this.commandBatcher = newBatcher;\n        };\n        ClientConnector.prototype.setPushEnabled = function (enabled) {\n            this.pushEnabled = enabled;\n        };\n        ClientConnector.prototype.setPushListener = function (newListener) {\n            this.pushListener = newListener;\n        };\n        ClientConnector.prototype.setReleaseCommand = function (newCommand) {\n            this.releaseCommand = newCommand;\n        };\n        ClientConnector.prototype.send = function (command, onFinished) {\n            this.commandQueue.push({ command: command, handler: onFinished });\n            if (this.currentlySending) {\n                this.release(); // there is not point in releasing if we do not send atm\n                return;\n            }\n            this.doSendNext();\n        };\n        ClientConnector.prototype.doSendNext = function () {\n            var _this = this;\n            if (this.commandQueue.length < 1) {\n                if (this.pushEnabled) {\n                    this.enqueuePushCommand();\n                }\n                else {\n                    this.currentlySending = false;\n                    return;\n                }\n            }\n            this.currentlySending = true;\n            var cmdsAndHandlers = this.commandBatcher.batch(this.commandQueue);\n            var callback = cmdsAndHandlers[cmdsAndHandlers.length - 1].handler;\n            var commands = cmdsAndHandlers.map(function (cah) { return cah.command; });\n            this.transmitter.transmit(commands, function (response) {\n                //console.log(\"server response: [\" + response.map(it => it.id).join(\", \") + \"] \");\n                var touchedPMs = [];\n                response.forEach(function (command) {\n                    var touched = _this.handle(command);\n                    if (touched)\n                        touchedPMs.push(touched);\n                });\n                if (callback) {\n                    callback.onFinished(touchedPMs); // todo: make them unique?\n                }\n                // recursive call: fetch the next in line but allow a bit of slack such that\n                // document events can fire, rendering is done and commands can batch up\n                setTimeout(function () { return _this.doSendNext(); }, _this.slackMS);\n            });\n        };\n        ClientConnector.prototype.handle = function (command) {\n            if (command.id == \"Data\") {\n                return this.handleDataCommand(command);\n            }\n            else if (command.id == \"DeletePresentationModel\") {\n                return this.handleDeletePresentationModelCommand(command);\n            }\n            else if (command.id == \"DeleteAllPresentationModelsOfType\") {\n                return this.handleDeleteAllPresentationModelOfTypeCommand(command);\n            }\n            else if (command.id == \"CreatePresentationModel\") {\n                return this.handleCreatePresentationModelCommand(command);\n            }\n            else if (command.id == \"ValueChanged\") {\n                return this.handleValueChangedCommand(command);\n            }\n            else if (command.id == \"BaseValueChanged\") {\n                return this.handleBaseValueChangedCommand(command);\n            }\n            else if (command.id == \"SwitchPresentationModel\") {\n                return this.handleSwitchPresentationModelCommand(command);\n            }\n            else if (command.id == \"InitializeAttribute\") {\n                return this.handleInitializeAttributeCommand(command);\n            }\n            else if (command.id == \"SavedPresentationModel\") {\n                return this.handleSavedPresentationModelNotification(command);\n            }\n            else if (command.id == \"PresentationModelReseted\") {\n                return this.handlePresentationModelResetedCommand(command);\n            }\n            else if (command.id == \"AttributeMetadataChanged\") {\n                return this.handleAttributeMetadataChangedCommand(command);\n            }\n            else if (command.id == \"CallNamedAction\") {\n                return this.handleCallNamedActionCommand(command);\n            }\n            else {\n                console.log(\"Cannot handle, unknown command \" + command);\n            }\n            return null;\n        };\n        ClientConnector.prototype.handleDataCommand = function (serverCommand) {\n            return serverCommand.data;\n        };\n        ClientConnector.prototype.handleDeletePresentationModelCommand = function (serverCommand) {\n            var model = this.clientDolphin.findPresentationModelById(serverCommand.pmId);\n            if (!model)\n                return null;\n            this.clientDolphin.getClientModelStore().deletePresentationModel(model, true);\n            return model;\n        };\n        ClientConnector.prototype.handleDeleteAllPresentationModelOfTypeCommand = function (serverCommand) {\n            this.clientDolphin.deleteAllPresentationModelOfType(serverCommand.pmType);\n            return null;\n        };\n        ClientConnector.prototype.handleCreatePresentationModelCommand = function (serverCommand) {\n            var _this = this;\n            if (this.clientDolphin.getClientModelStore().containsPresentationModel(serverCommand.pmId)) {\n                throw new Error(\"There already is a presentation model with id \" + serverCommand.pmId + \"  known to the client.\");\n            }\n            var attributes = [];\n            serverCommand.attributes.forEach(function (attr) {\n                var clientAttribute = _this.clientDolphin.attribute(attr.propertyName, attr.qualifier, attr.value, attr.tag ? attr.tag : opendolphin.Tag.value());\n                clientAttribute.setBaseValue(attr.baseValue);\n                if (attr.id && attr.id.match(\".*S$\")) {\n                    clientAttribute.id = attr.id;\n                }\n                attributes.push(clientAttribute);\n            });\n            var clientPm = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n            clientPm.addAttributes(attributes);\n            if (serverCommand.clientSideOnly) {\n                clientPm.clientSideOnly = true;\n            }\n            this.clientDolphin.getClientModelStore().add(clientPm);\n            this.clientDolphin.updatePresentationModelQualifier(clientPm);\n            clientPm.updateAttributeDirtyness();\n            clientPm.updateDirty();\n            return clientPm;\n        };\n        ClientConnector.prototype.handleValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot update old value \" + serverCommand.oldValue + \" to new value \" + serverCommand.newValue);\n                return null;\n            }\n            if (clientAttribute.getValue() == serverCommand.newValue) {\n                //console.log(\"nothing to do. new value == old value\");\n                return null;\n            }\n            // Below was the code that would enforce that value changes only appear when the proper oldValue is given.\n            // While that seemed appropriate at first, there are actually valid command sequences where the oldValue is not properly set.\n            // We leave the commented code in the codebase to allow for logging/debugging such cases.\n            //            if(clientAttribute.getValue() != serverCommand.oldValue) {\n            //                console.log(\"attribute with id \"+serverCommand.attributeId+\" and value \" + clientAttribute.getValue() +\n            //                            \" was set to value \" + serverCommand.newValue + \" even though the change was based on an outdated old value of \" + serverCommand.oldValue);\n            //            }\n            clientAttribute.setValue(serverCommand.newValue);\n            return null;\n        };\n        ClientConnector.prototype.handleBaseValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot set base value.\");\n                return null;\n            }\n            clientAttribute.rebase();\n            return null;\n        };\n        ClientConnector.prototype.handleSwitchPresentationModelCommand = function (serverCommand) {\n            var switchPm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!switchPm) {\n                console.log(\"switch model with id \" + serverCommand.pmId + \" not found, cannot switch.\");\n                return null;\n            }\n            var sourcePm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.sourcePmId);\n            if (!sourcePm) {\n                console.log(\"source model with id \" + serverCommand.sourcePmId + \" not found, cannot switch.\");\n                return null;\n            }\n            switchPm.syncWith(sourcePm);\n            return switchPm;\n        };\n        ClientConnector.prototype.handleInitializeAttributeCommand = function (serverCommand) {\n            var attribute = new opendolphin.ClientAttribute(serverCommand.propertyName, serverCommand.qualifier, serverCommand.newValue, serverCommand.tag);\n            if (serverCommand.qualifier) {\n                var attributesCopy = this.clientDolphin.getClientModelStore().findAllAttributesByQualifier(serverCommand.qualifier);\n                if (attributesCopy) {\n                    if (!serverCommand.newValue) {\n                        var attr = attributesCopy.shift();\n                        if (attr) {\n                            attribute.setValue(attr.getValue());\n                        }\n                    }\n                    else {\n                        attributesCopy.forEach(function (attr) {\n                            attr.setValue(attribute.getValue());\n                        });\n                    }\n                }\n            }\n            var presentationModel;\n            if (serverCommand.pmId) {\n                presentationModel = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            }\n            if (!presentationModel) {\n                presentationModel = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n                this.clientDolphin.getClientModelStore().add(presentationModel);\n            }\n            this.clientDolphin.addAttributeToModel(presentationModel, attribute);\n            this.clientDolphin.updatePresentationModelQualifier(presentationModel);\n            return presentationModel;\n        };\n        ClientConnector.prototype.handleSavedPresentationModelNotification = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot rebase.\");\n                return null;\n            }\n            model.rebase();\n            return model;\n        };\n        ClientConnector.prototype.handlePresentationModelResetedCommand = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot reset.\");\n                return null;\n            }\n            model.reset();\n            return model;\n        };\n        ClientConnector.prototype.handleAttributeMetadataChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute)\n                return null;\n            clientAttribute[serverCommand.metadataName] = serverCommand.value;\n            return null;\n        };\n        ClientConnector.prototype.handleCallNamedActionCommand = function (serverCommand) {\n            this.clientDolphin.send(serverCommand.actionName, null);\n            return null;\n        };\n        ///////////// push support ///////////////\n        ClientConnector.prototype.listen = function () {\n            if (!this.pushEnabled)\n                return;\n            if (this.waiting)\n                return;\n            // todo: how to issue a warning if no pushListener is set?\n            if (!this.currentlySending) {\n                this.doSendNext();\n            }\n        };\n        ClientConnector.prototype.enqueuePushCommand = function () {\n            var me = this;\n            this.waiting = true;\n            this.commandQueue.push({\n                command: this.pushListener,\n                handler: {\n                    onFinished: function (models) { me.waiting = false; },\n                    onFinishedData: null\n                }\n            });\n        };\n        ClientConnector.prototype.release = function () {\n            if (!this.waiting)\n                return;\n            this.waiting = false;\n            // todo: how to issue a warning if no releaseCommand is set?\n            this.transmitter.signal(this.releaseCommand);\n        };\n        return ClientConnector;\n    })();\n    opendolphin.ClientConnector = ClientConnector;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"DolphinBuilder.ts\"/>\n/**\n * JS-friendly facade to avoid too many dependencies in plain JS code.\n * The name of this file is also used for the initial lookup of the\n * one javascript file that contains all the dolphin code.\n * Changing the name requires the build support and all users\n * to be updated as well.\n * Dierk Koenig\n */\nvar opendolphin;\n(function (opendolphin) {\n    // factory method for the initialized dolphin\n    // Deprecated ! Use 'makeDolphin() instead\n    function dolphin(url, reset, slackMS) {\n        if (slackMS === void 0) { slackMS = 300; }\n        return makeDolphin().url(url).reset(reset).slackMS(slackMS).build();\n    }\n    opendolphin.dolphin = dolphin;\n    // factory method to build an initialized dolphin\n    function makeDolphin() {\n        return new opendolphin.DolphinBuilder();\n    }\n    opendolphin.makeDolphin = makeDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /**\n     * A transmitter that is not transmitting at all.\n     * It may serve as a stand-in when no real transmitter is needed.\n     */\n    var NoTransmitter = (function () {\n        function NoTransmitter() {\n        }\n        NoTransmitter.prototype.transmit = function (commands, onDone) {\n            // do nothing special\n            onDone([]);\n        };\n        NoTransmitter.prototype.signal = function (command) {\n            // do nothing\n        };\n        return NoTransmitter;\n    })();\n    opendolphin.NoTransmitter = NoTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"Codec.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var HttpTransmitter = (function () {\n        function HttpTransmitter(url, reset, charset, errorHandler, supportCORS) {\n            if (reset === void 0) { reset = true; }\n            if (charset === void 0) { charset = \"UTF-8\"; }\n            if (errorHandler === void 0) { errorHandler = null; }\n            if (supportCORS === void 0) { supportCORS = false; }\n            this.url = url;\n            this.charset = charset;\n            this.HttpCodes = {\n                finished: 4,\n                success: 200\n            };\n            this.errorHandler = errorHandler;\n            this.supportCORS = supportCORS;\n            this.http = new XMLHttpRequest();\n            this.sig = new XMLHttpRequest();\n            if (this.supportCORS) {\n                if (\"withCredentials\" in this.http) {\n                    this.http.withCredentials = true; // NOTE: doing this for non CORS requests has no impact\n                    this.sig.withCredentials = true;\n                }\n            }\n            this.codec = new opendolphin.Codec();\n            if (reset) {\n                this.invalidate();\n            }\n        }\n        HttpTransmitter.prototype.transmit = function (commands, onDone) {\n            var _this = this;\n            this.http.onerror = function (evt) {\n                _this.handleError('onerror', \"\");\n                onDone([]);\n            };\n            this.http.onreadystatechange = function (evt) {\n                if (_this.http.readyState == _this.HttpCodes.finished) {\n                    if (_this.http.status == _this.HttpCodes.success) {\n                        var responseText = _this.http.responseText;\n                        if (responseText.trim().length > 0) {\n                            try {\n                                var responseCommands = _this.codec.decode(responseText);\n                                onDone(responseCommands);\n                            }\n                            catch (err) {\n                                console.log(\"Error occurred parsing responseText: \", err);\n                                console.log(\"Incorrect responseText: \", responseText);\n                                _this.handleError('application', \"HttpTransmitter: Incorrect responseText: \" + responseText);\n                                onDone([]);\n                            }\n                        }\n                        else {\n                            _this.handleError('application', \"HttpTransmitter: empty responseText\");\n                            onDone([]);\n                        }\n                    }\n                    else {\n                        _this.handleError('application', \"HttpTransmitter: HTTP Status != 200\");\n                        onDone([]);\n                    }\n                }\n            };\n            this.http.open('POST', this.url, true);\n            if (\"overrideMimeType\" in this.http) {\n                this.http.overrideMimeType(\"application/json; charset=\" + this.charset); // todo make injectable\n            }\n            this.http.send(this.codec.encode(commands));\n        };\n        HttpTransmitter.prototype.handleError = function (kind, message) {\n            var errorEvent = { kind: kind, url: this.url, httpStatus: this.http.status, message: message };\n            if (this.errorHandler) {\n                this.errorHandler(errorEvent);\n            }\n            else {\n                console.log(\"Error occurred: \", errorEvent);\n            }\n        };\n        HttpTransmitter.prototype.signal = function (command) {\n            this.sig.open('POST', this.url, true);\n            this.sig.send(this.codec.encode([command]));\n        };\n        HttpTransmitter.prototype.invalidate = function () {\n            this.http.open('POST', this.url + 'invalidate?', false);\n            this.http.send();\n        };\n        return HttpTransmitter;\n    })();\n    opendolphin.HttpTransmitter = HttpTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"OpenDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ClientModelStore.ts\"/>\n/// <reference path=\"NoTransmitter.ts\"/>\n/// <reference path=\"HttpTransmitter.ts\"/>\n/// <reference path=\"ClientAttribute.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var DolphinBuilder = (function () {\n        function DolphinBuilder() {\n            this.reset_ = false;\n            this.slackMS_ = 300;\n            this.maxBatchSize_ = 50;\n            this.supportCORS_ = false;\n        }\n        DolphinBuilder.prototype.url = function (url) {\n            this.url_ = url;\n            return this;\n        };\n        DolphinBuilder.prototype.reset = function (reset) {\n            this.reset_ = reset;\n            return this;\n        };\n        DolphinBuilder.prototype.slackMS = function (slackMS) {\n            this.slackMS_ = slackMS;\n            return this;\n        };\n        DolphinBuilder.prototype.maxBatchSize = function (maxBatchSize) {\n            this.maxBatchSize_ = maxBatchSize;\n            return this;\n        };\n        DolphinBuilder.prototype.supportCORS = function (supportCORS) {\n            this.supportCORS_ = supportCORS;\n            return this;\n        };\n        DolphinBuilder.prototype.errorHandler = function (errorHandler) {\n            this.errorHandler_ = errorHandler;\n            return this;\n        };\n        DolphinBuilder.prototype.build = function () {\n            console.log(\"OpenDolphin js found\");\n            var clientDolphin = new opendolphin.ClientDolphin();\n            var transmitter;\n            if (this.url_ != null && this.url_.length > 0) {\n                transmitter = new opendolphin.HttpTransmitter(this.url_, this.reset_, \"UTF-8\", this.errorHandler_, this.supportCORS_);\n            }\n            else {\n                transmitter = new opendolphin.NoTransmitter();\n            }\n            clientDolphin.setClientConnector(new opendolphin.ClientConnector(transmitter, clientDolphin, this.slackMS_, this.maxBatchSize_));\n            clientDolphin.setClientModelStore(new opendolphin.ClientModelStore(clientDolphin));\n            console.log(\"ClientDolphin initialized\");\n            return clientDolphin;\n        };\n        return DolphinBuilder;\n    })();\n    opendolphin.DolphinBuilder = DolphinBuilder;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var GetPresentationModelCommand = (function (_super) {\n        __extends(GetPresentationModelCommand, _super);\n        function GetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'GetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.GetPresentationModelCommand\";\n        }\n        return GetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.GetPresentationModelCommand = GetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ResetPresentationModelCommand = (function (_super) {\n        __extends(ResetPresentationModelCommand, _super);\n        function ResetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'ResetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.ResetPresentationModelCommand\";\n        }\n        return ResetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.ResetPresentationModelCommand = ResetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n\nmodule.exports = opendolphin;\n},{}],63:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Map = _dereq_('../bower_components/core.js/library/fn/map');\nvar exists = _dereq_('./utils.js').exists;\n\n\nfunction BeanManager(classRepository) {\n    this.classRepository = classRepository;\n    this.addedHandlers = new Map();\n    this.removedHandlers = new Map();\n    this.updatedHandlers = new Map();\n    this.arrayUpdatedHandlers = new Map();\n    this.allAddedHandlers = [];\n    this.allRemovedHandlers = [];\n    this.allUpdatedHandlers = [];\n    this.allArrayUpdatedHandlers = [];\n\n    var self = this;\n    this.classRepository.onBeanAdded(function(type, bean) {\n        var handlerList = self.addedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                handler(bean);\n            });\n        }\n        self.allAddedHandlers.forEach(function (handler) {\n            handler(bean);\n        });\n    });\n    this.classRepository.onBeanRemoved(function(type, bean) {\n        var handlerList = self.removedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function(handler) {\n                handler(bean);\n            });\n        }\n        self.allRemovedHandlers.forEach(function(handler) {\n            handler(bean);\n        });\n    });\n    this.classRepository.onBeanUpdate(function(type, bean, propertyName, newValue, oldValue) {\n        var handlerList = self.updatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                handler(bean, propertyName, newValue, oldValue);\n            });\n        }\n        self.allUpdatedHandlers.forEach(function (handler) {\n            handler(bean, propertyName, newValue, oldValue);\n        });\n    });\n    this.classRepository.onArrayUpdate(function(type, bean, propertyName, index, count, newElement) {\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                handler(bean, propertyName, index, count, newElement);\n            });\n        }\n        self.allArrayUpdatedHandlers.forEach(function (handler) {\n            handler(bean, propertyName, index, count, newElement);\n        });\n    });\n\n}\n\n\nBeanManager.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    return this.classRepository.notifyBeanChange(bean, propertyName, newValue);\n};\n\n\nBeanManager.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    this.classRepository.notifyArrayChange(bean, propertyName, index, count, removedElements);\n};\n\n\nBeanManager.prototype.isManaged = function(bean) {\n    // TODO: Implement dolphin.isManaged() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.create = function(type) {\n    // TODO: Implement dolphin.create() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.add = function(type, bean) {\n    // TODO: Implement dolphin.add() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.addAll = function(type, collection) {\n    // TODO: Implement dolphin.addAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.remove = function(bean) {\n    // TODO: Implement dolphin.remove() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeAll = function(collection) {\n    // TODO: Implement dolphin.removeAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeIf = function(predicate) {\n    // TODO: Implement dolphin.removeIf() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.onAdded = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allAddedHandlers = self.allAddedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allAddedHandlers = self.allAddedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.addedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.addedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.addedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.addedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onRemoved = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allRemovedHandlers = self.allRemovedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allRemovedHandlers = self.allRemovedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.removedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.removedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.removedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onBeanUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allUpdatedHandlers = self.allUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allUpdatedHandlers = self.allUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.updatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.updatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.updatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.updatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onArrayUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.arrayUpdatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.arrayUpdatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.arrayUpdatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\n\nexports.BeanManager = BeanManager;\n},{\"../bower_components/core.js/library/fn/map\":1,\"./polyfills.js\":70,\"./utils.js\":71}],64:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Platform, console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Map = _dereq_('../bower_components/core.js/library/fn/map');\nvar opendolphin = _dereq_('../libsrc/opendolphin.js');\n\nvar exists = _dereq_('./utils.js').exists;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nvar blocked = null;\n\nfunction fromDolphin(classRepository, type, value) {\n    return ! exists(value)? null\n        : type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, value) {\n    return typeof value === 'object' && value !== null? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction sendListAdd(dolphin, modelId, propertyName, pos, element) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('pos', null, pos),\n        dolphin.attribute('element', null, element)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_ADD @@@'].concat(attributes));\n}\n\nfunction sendListRemove(dolphin, modelId, propertyName, from, to) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('from', null, from),\n        dolphin.attribute('to', null, to)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_DEL @@@'].concat(attributes));\n}\n\nfunction validateList(classRepository, type, bean, propertyName) {\n    var list = bean[propertyName];\n    if (!exists(list)) {\n        classRepository.propertyUpdateHandlers.forEach(function(handler) {\n            handler(type, bean, propertyName, [], undefined);\n        });\n    }\n}\n\nfunction block(bean, propertyName) {\n    if (exists(blocked)) {\n        throw new Error('Trying to create a block while another block exists');\n    }\n    blocked = {\n        bean: bean,\n        propertyName: propertyName\n    };\n}\n\nfunction isBlocked(bean, propertyName) {\n    return exists(blocked) && blocked.bean === bean && blocked.propertyName === propertyName;\n}\n\nfunction unblock() {\n    blocked = null;\n}\n\n\nfunction ClassRepository(dolphin) {\n    this.dolphin = dolphin;\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n    this.beanAddedHandlers = [];\n    this.beanRemovedHandlers = [];\n    this.propertyUpdateHandlers = [];\n    this.arrayUpdateHandlers = [];\n}\n\n\nClassRepository.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    var modelId = this.beanToDolphin.get(bean);\n    if (exists(modelId)) {\n        var model = this.dolphin.findPresentationModelById(modelId);\n        if (exists(model)) {\n            var classInfo = this.classes.get(model.presentationModelType);\n            var type = classInfo[propertyName];\n            var attribute = model.findAttributeByPropertyName(propertyName);\n            if (exists(type) && exists(attribute)) {\n                var oldValue = attribute.getValue();\n                attribute.setValue(toDolphin(this, newValue));\n                return fromDolphin(this, type, oldValue);\n            }\n        }\n    }\n};\n\n\nClassRepository.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    if (isBlocked(bean, propertyName)) {\n        return;\n    }\n    var modelId = this.beanToDolphin.get(bean);\n    var array = bean[propertyName];\n    if (exists(modelId) && exists(array)) {\n        if (Array.isArray(removedElements) && removedElements.length > 0) {\n            sendListRemove(this.dolphin, modelId, propertyName, index, index + removedElements.length);\n        }\n        for (var i = index; i < index + count; i++) {\n            sendListAdd(this.dolphin, modelId, propertyName, i, toDolphin(this, array[i]));\n        }\n    }\n};\n\n\nClassRepository.prototype.onBeanAdded = function(handler) {\n    this.beanAddedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanRemoved = function(handler) {\n    this.beanRemovedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanUpdate = function(handler) {\n    this.propertyUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onArrayUpdate = function(handler) {\n    this.arrayUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.registerClass = function (model) {\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.filter(function(attribute) {\n        return attribute.propertyName.search(/^@@@ /) < 0;\n    }).forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    var self = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return (attribute.tag === opendolphin.Tag.value()) && (attribute.propertyName.search(/^@@@ /) < 0);\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                var oldValue = fromDolphin(self, classInfo[attribute.propertyName], event.oldValue);\n                var newValue = fromDolphin(self, classInfo[attribute.propertyName], event.newValue);\n                self.propertyUpdateHandlers.forEach(function(handler) {\n                    handler(model.presentationModelType, bean, attribute.propertyName, newValue, oldValue);\n                });\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    this.beanAddedHandlers.forEach(function(handler) {\n        handler(model.presentationModelType, bean);\n    });\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    if (exists(bean)) {\n        this.beanRemovedHandlers.forEach(function(handler) {\n            handler(model.presentationModelType, bean);\n        });\n    }\n    return bean;\n};\n\n\nClassRepository.prototype.addListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, pos.value, 0, entry);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.delListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to)) {\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean)) {\n            var type = model.presentationModelType;\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, from.value, to.value - from.value);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.setListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, pos.value, 1, entry);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    }else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\nClassRepository.prototype.mapDolphinToBean = function(value, type) {\n    return fromDolphin(this, type, value);\n};\n\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n\n},{\"../bower_components/core.js/library/fn/map\":1,\"../libsrc/opendolphin.js\":62,\"./polyfills.js\":70,\"./utils.js\":71}],65:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar INIT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'initClientContext';\nvar DISCONNECT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'disconnectClientContext';\n\nfunction ClientContext(dolphin, beanManager, controllerManager, connector) {\n    this.dolphin = dolphin;\n    this.beanManager = beanManager;\n    this._controllerManager = controllerManager;\n    this._connector = connector;\n\n    this._connector.invoke(INIT_COMMAND_NAME);\n}\n\n\nClientContext.prototype.createController = function(name) {\n    return this._controllerManager.createController(name);\n};\n\n\nClientContext.prototype.disconnect = function() {\n    // TODO: Implement ClientContext.disconnect [DP-46]\n    this._connector.invoke(DISCONNECT_COMMAND_NAME);\n    this.dolphin.stopPushListening();\n};\n\n\nexports.ClientContext = ClientContext;\n},{\"./polyfills.js\":70}],66:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Promise = _dereq_('../bower_components/core.js/library/fn/promise');\nvar opendolphin = _dereq_('../libsrc/opendolphin.js');\nvar exists = _dereq_('./utils.js').exists;\n\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar POLL_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'longPoll';\nvar RELEASE_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'release';\n\nvar DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nvar ACTION_CALL_BEAN = '@@@ CONTROLLER_ACTION_CALL_BEAN @@@';\nvar HIGHLANDER_BEAN = '@@@ HIGHLANDER_BEAN @@@';\nvar DOLPHIN_LIST_ADD = '@@@ LIST_ADD @@@';\nvar DOLPHIN_LIST_DEL = '@@@ LIST_DEL @@@';\nvar DOLPHIN_LIST_SET = '@@@ LIST_SET @@@';\nvar SOURCE_SYSTEM = '@@@ SOURCE_SYSTEM @@@';\nvar SOURCE_SYSTEM_CLIENT = 'client';\nvar SOURCE_SYSTEM_SERVER = 'server';\n\n\n\nvar initializer;\n\nfunction Connector(url, dolphin, classRepository, config) {\n    var self = this;\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.highlanderPMResolver = function() {};\n    this.highlanderPMPromise = new Promise(function(resolve) {\n        self.highlanderPMResolver = resolve;\n    });\n\n    dolphin.getClientModelStore().onModelStoreChange(function (event) {\n        var model = event.clientPresentationModel;\n        var sourceSystem = model.findAttributeByPropertyName(SOURCE_SYSTEM);\n        if (exists(sourceSystem) && sourceSystem.value === SOURCE_SYSTEM_SERVER) {\n            if (event.eventType === opendolphin.Type.ADDED) {\n                self.onModelAdded(model);\n            } else if (event.eventType === opendolphin.Type.REMOVED) {\n                self.onModelRemoved(model);\n            }\n        }\n    });\n\n    if (!exists(config) || !exists(config.serverPush) || config.serverPush === true) {\n        setTimeout(function() {\n            dolphin.startPushListening(POLL_COMMAND_NAME, RELEASE_COMMAND_NAME);\n        }, 500);\n    }\n\n    initializer = new Promise(function(resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.withCredentials = true;\n\n        req.onload = function() {\n            if (req.status === 200) {\n                resolve();\n            }\n            else {\n                reject(Error(req.statusText));\n            }\n        };\n\n        req.onerror = function() {\n            reject(Error(\"Network Error\"));\n        };\n\n        req.open('POST', url + 'invalidate?');\n        req.send();\n    });\n}\n\n\nConnector.prototype.onModelAdded = function(model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case ACTION_CALL_BEAN:\n            // ignore\n            break;\n        case DOLPHIN_BEAN:\n            this.classRepository.registerClass(model);\n            break;\n        case HIGHLANDER_BEAN:\n            this.highlanderPMResolver(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n            this.classRepository.addListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_DEL:\n            this.classRepository.delListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_SET:\n            this.classRepository.setListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        default:\n            this.classRepository.load(model);\n            break;\n    }\n};\n\n\nConnector.prototype.onModelRemoved = function(model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            this.classRepository.unregisterClass(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n        case DOLPHIN_LIST_DEL:\n        case DOLPHIN_LIST_SET:\n            // do nothing\n            break;\n        default:\n            this.classRepository.unload(model);\n            break;\n    }\n};\n\n\nConnector.prototype.invoke = function(command) {\n    var dolphin = this.dolphin;\n    return new Promise(function(resolve) {\n        // TODO: This needs to be synchronized with changes pushed via BeanManager\n        //initializer.then(function () {\n            dolphin.send(command, {\n                onFinished: function() {\n                    resolve();\n                }\n            });\n        //});\n    });\n};\n\n\nConnector.prototype.getHighlanderPM = function() {\n    return this.highlanderPMPromise;\n};\n\n\n\nexports.Connector = Connector;\nexports.SOURCE_SYSTEM = SOURCE_SYSTEM;\nexports.SOURCE_SYSTEM_CLIENT = SOURCE_SYSTEM_CLIENT;\nexports.SOURCE_SYSTEM_SERVER = SOURCE_SYSTEM_SERVER;\nexports.ACTION_CALL_BEAN = ACTION_CALL_BEAN;\n\n},{\"../bower_components/core.js/library/fn/promise\":2,\"../libsrc/opendolphin.js\":62,\"./polyfills.js\":70,\"./utils.js\":71}],67:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Promise = _dereq_('../bower_components/core.js/library/fn/promise');\nvar exists = _dereq_('./utils.js').exists;\nvar ControllerProxy = _dereq_('./controllerproxy.js').ControllerProxy;\n\nvar DOLPHIN_BEAN_TYPE = _dereq_('./classrepo.js').DOLPHIN_BEAN;\n\nvar SOURCE_SYSTEM = _dereq_('./connector.js').SOURCE_SYSTEM;\nvar SOURCE_SYSTEM_CLIENT = _dereq_('./connector.js').SOURCE_SYSTEM_CLIENT;\nvar ACTION_CALL_BEAN = _dereq_('./connector.js').ACTION_CALL_BEAN;\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar REGISTER_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'registerController';\nvar CALL_CONTROLLER_ACTION_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'callControllerAction';\nvar DESTROY_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'destroyController';\n\nvar CONTROLLER_NAME = 'controllerName';\nvar CONTROLLER_ID = 'controllerId';\nvar MODEL = 'model';\nvar ACTION_NAME = 'actionName';\nvar ERROR_CODE = 'errorCode';\nvar PARAM_PREFIX = '_';\n\n\nfunction ControllerManager(dolphin, classRepository, connector) {\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.connector = connector;\n}\n\n\nControllerManager.prototype.createController = function(name) {\n    var self = this;\n    var controllerId, modelId, model;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_NAME).setValue(name);\n            self.connector.invoke(REGISTER_CONTROLLER_COMMAND_NAME).then(function() {\n                controllerId = highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).getValue();\n                modelId = highlanderPM.findAttributeByPropertyName(MODEL).getValue();\n                model = self.classRepository.mapDolphinToBean(modelId, DOLPHIN_BEAN_TYPE);\n                resolve(new ControllerProxy(controllerId, model, self));\n            });\n        });\n    });\n};\n\n\nControllerManager.prototype.invokeAction = function(controllerId, actionName, params) {\n    var self = this;\n    return new Promise(function(resolve, reject) {\n\n        var attributes = [\n            self.dolphin.attribute(SOURCE_SYSTEM, null, SOURCE_SYSTEM_CLIENT),\n            self.dolphin.attribute(CONTROLLER_ID, null, controllerId),\n            self.dolphin.attribute(ACTION_NAME, null, actionName),\n            self.dolphin.attribute(ERROR_CODE)\n        ];\n\n        if (exists(params)) {\n            for (var prop in params) {\n                if (params.hasOwnProperty(prop)) {\n                    var param = self.classRepository.mapParamToDolphin(params[prop]);\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.value, 'VALUE'));\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.type, 'VALUE_TYPE'));\n                }\n            }\n        }\n\n        var pm = self.dolphin.presentationModel.apply(self.dolphin, [null, ACTION_CALL_BEAN].concat(attributes));\n\n        self.connector.invoke(CALL_CONTROLLER_ACTION_COMMAND_NAME, params).then(function() {\n            var isError = pm.findAttributeByPropertyName(ERROR_CODE).getValue();\n            if (isError) {\n                reject(new Error(\"ControllerAction caused an error\"));\n            } else {\n                resolve();\n            }\n            self.dolphin.deletePresentationModel(pm);\n        });\n    });\n};\n\n\nControllerManager.prototype.destroyController = function(controllerId) {\n    var self = this;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).setValue(controllerId);\n            self.connector.invoke(DESTROY_CONTROLLER_COMMAND_NAME).then(resolve);\n        });\n    });\n};\n\n\n\nexports.ControllerManager = ControllerManager;\n\n},{\"../bower_components/core.js/library/fn/promise\":2,\"./classrepo.js\":64,\"./connector.js\":66,\"./controllerproxy.js\":68,\"./polyfills.js\":70,\"./utils.js\":71}],68:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Promise = _dereq_('../bower_components/core.js/library/fn/promise');\nvar exists = _dereq_('./utils.js').exists;\n\n\n\nfunction ControllerProxy(controllerId, model, manager) {\n    this.controllerId = controllerId;\n    this.model = model;\n    this.manager = manager;\n    this.destroyed = false;\n}\n\n\nControllerProxy.prototype.invoke = function(name, params) {\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    return this.manager.invokeAction(this.controllerId, name, params);\n};\n\n\nControllerProxy.prototype.destroy = function() {\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    this.destroyed = true;\n    return this.manager.destroyController(this);\n};\n\n\n\nexports.ControllerProxy = ControllerProxy;\n\n},{\"../bower_components/core.js/library/fn/promise\":2,\"./polyfills.js\":70,\"./utils.js\":71}],69:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Platform, console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar opendolphin = _dereq_('../libsrc/opendolphin.js');\n\nvar exists = _dereq_('./utils.js').exists;\nvar Connector = _dereq_('./connector.js').Connector;\nvar BeanManager = _dereq_('./beanmanager.js').BeanManager;\nvar ClassRepository = _dereq_('./classrepo.js').ClassRepository;\nvar ControllerManager = _dereq_('./controllermanager.js').ControllerManager;\nvar ClientContext = _dereq_('./clientcontext.js').ClientContext;\n\nexports.connect = function(url, config) {\n    var builder = opendolphin.makeDolphin().url(url).reset(false).slackMS(4).supportCORS(true);\n    if (exists(config) && exists(config.errorHandler)) {\n        builder.errorHandler(config.errorHandler);\n    }\n    var dolphin = builder.build();\n\n    var classRepository = new ClassRepository(dolphin);\n    var beanManager = new BeanManager(classRepository);\n    var connector = new Connector(url, dolphin, classRepository, config);\n    var controllerManager = new ControllerManager(dolphin, classRepository, connector);\n\n    return new ClientContext(dolphin, beanManager, controllerManager, connector);\n};\n\n},{\"../libsrc/opendolphin.js\":62,\"./beanmanager.js\":63,\"./classrepo.js\":64,\"./clientcontext.js\":65,\"./connector.js\":66,\"./controllermanager.js\":67,\"./polyfills.js\":70,\"./utils.js\":71}],70:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n ////////////////////\n// Array.forEach()\n////////////////////\nif (!Array.prototype.forEach) {\n\n    Array.prototype.forEach = function(callback, thisArg) {\n\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n\n\n////////////////////\n// Array.filter()\n////////////////////\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun/*, thisArg*/) {\n        'use strict';\n\n        if (this === void 0 || this === null) {\n            throw new TypeError();\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n\n                // NOTE: Technically this should Object.defineProperty at\n                //       the next index, as push can be affected by\n                //       properties on Object.prototype and Array.prototype.\n                //       But that method's new, and collisions should be\n                //       rare, so use the more-compatible alternative.\n                if (fun.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}\n},{}],71:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nmodule.exports.exists = function(object) {\n    return typeof object !== 'undefined' && object !== null;\n};\n\n},{}]},{},[69])(69)\n});\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],51:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Polymer */\n\"use strict\";\n\nvar Binder = _dereq_('./binder.js').Binder;\n\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\n\nfunction polymer1_1hack(element, path) {\n    // This is a temporary hack to deal with Polymer's API consistency concerning arrays and paths.\n    // An observer uses keys in an array, while the get() and set() methods expect the index.\n    // This is hopefully fixed in Polymer 1.2.\n    do {\n        var pathElements = path.match(/^([^\\.]+)\\.(.*)$/);\n        var key = pathElements !== null? pathElements[1] : path;\n        path = pathElements !== null? pathElements[2] : null;\n\n        if (Array.isArray(element)) {\n            var arrayKey = parseInt(key);\n            if (isNaN(arrayKey)) {\n                element = element[key];\n            } else {\n                var collection = Polymer.Collection.get(element);\n                element = collection.getItem(arrayKey);\n            }\n        } else {\n            element = element[key];\n        }\n    } while (path !== null && exists(element));\n\n    return element;\n}\nfunction navigateToBean(element, path) {\n    var navigation = path.match(/^(.*)\\.[^\\.]*$/);\n    if (! exists(navigation)) {\n        return element;\n    } else {\n        return polymer1_1hack(element, navigation[1]);\n        //return element.get(navigation[1], element);\n    }\n}\n\n\nfunction setupCreateBehavior(clientContext) {\n\n    var binder = new Binder(clientContext.beanManager);\n\n    return function(controllerName) {\n        return {\n\n            properties: {\n                model: {\n                    type: Object,\n                    value: function() { return {}; }\n                }\n            },\n\n            observers: ['_dolphinObserver(model.*)'],\n\n            created: function() {\n                var self = this;\n                clientContext.createController(controllerName).then(function(controller) {\n                    self._controller = controller;\n                    self.set('model', controller.model);\n                });\n            },\n\n            invoke: function(actionName, params) {\n                // TODO Call this after init has finished\n                return this._controller.invoke(actionName, params);\n            },\n\n            _dolphinObserver: function(event) {\n                var path = event.path;\n                var bean, propertyName, i, j;\n                var newValue = event.value;\n\n                if (exists(newValue) && exists(newValue.indexSplices)) {\n                    path = path.substr(0, path.length - \".splices\".length);\n                    bean = navigateToBean(this, path);\n                    if (exists(bean)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var n = newValue.indexSplices.length;\n                        for (i = 0; i < n; i++) {\n                            var change = newValue.indexSplices[i];\n                            clientContext.beanManager.notifyArrayChange(bean, propertyName[0], change.index, change.addedCount, change.removed);\n\n                            var array = bean[propertyName[0]];\n                            for (j = 0; j < change.removed.length; j++) {\n                                binder.unbind(this, path + '.' + (change.index + j), change.removed[j]);\n                            }\n                            for (j = change.index + change.addedCount; j < array.length; j++) {\n                                var oldPos = j - change.addedCount + change.removed.length;\n                                binder.unbind(this, path + '.' + oldPos, array[j]);\n                            }\n                            for (j = change.index; j < array.length; j++) {\n                                binder.bind(this, path + '.' + j, array[j]);\n                            }\n                        }\n                    }\n                } else {\n                    bean = navigateToBean(this, path);\n                    if (exists(bean) && !Array.isArray(bean) && !Array.isArray(newValue)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var oldValue = clientContext.beanManager.notifyBeanChange(bean, propertyName[0], newValue);\n                        if (exists(oldValue)) {\n                            binder.unbind(this, path, oldValue);\n                        }\n                        if (exists(newValue)) {\n                            binder.bind(this, path, newValue);\n                        }\n                    }\n                }\n            }\n        };\n    };\n}\n\n\n\nexports.setupCreateBehavior = setupCreateBehavior;\n},{\"./binder.js\":52}],52:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar Map  = _dereq_('../bower_components/core.js/library/fn/map');\n\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\nfunction bindScope(scope, fn) {\n    return function () {\n        fn.apply(scope, arguments);\n    };\n}\n\nfunction deepEqual(array1, array2) {\n    if (array1 === array2 || (!exists(array1) && !exists(array2))) {\n        return true;\n    }\n    if (exists(array1) !== exists(array2)) {\n        return false;\n    }\n    var n = array1.length;\n    if (array2.length !== n) {\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\nfunction Binder(beanManager) {\n    this.listeners = new Map();\n\n    beanManager.onBeanUpdate(bindScope(this, this.onBeanUpdateHandler));\n    beanManager.onArrayUpdate(bindScope(this, this.onArrayUpdateHandler));\n}\n\n\nBinder.prototype.onBeanUpdateHandler = function(bean, propertyName, newValue, oldValue) {\n    if (oldValue === newValue) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        element.set(path, newValue);\n    } else {\n        bean[propertyName] = newValue;\n    }\n};\n\n\nBinder.prototype.onArrayUpdateHandler = function(bean, propertyName, index, count, newElements) {\n    var array = bean[propertyName];\n    var oldElements = array.slice(index, index + count);\n    if (deepEqual(newElements, oldElements)) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        if (typeof newElements === 'undefined') {\n            element.splice(path, index, count);\n        } else {\n            element.splice(path, index, count, newElements);\n        }\n    } else {\n        if (typeof newElements === 'undefined') {\n            array.splice(index, count);\n        } else {\n            array.splice(index, count, newElements);\n        }\n    }\n};\n\n\nBinder.prototype.bind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (!exists(listenerList)) {\n        listenerList = [];\n        this.listeners.set(value, listenerList);\n    }\n    listenerList.push({element: element, rootPath: rootPath});\n\n    if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n            this.bind(element, rootPath + '.' + i, value[i]);\n        }\n    } else if (typeof value === 'object') {\n        for (var propertyName in value) {\n            this.bind(element, rootPath + '.' + propertyName, value[propertyName]);\n        }\n    }\n};\n\nBinder.prototype.unbind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (exists(listenerList)) {\n        var n = listenerList.length;\n        for (var i = 0; i < n; i++) {\n            var entry = listenerList[i];\n            if (entry.element === element && entry.rootPath === rootPath) {\n                listenerList.splice(i, 1);\n\n                if (Array.isArray(value)) {\n                    for (var j = 0; j < value.length; j++) {\n                        this.unbind(element, rootPath + '.' + j, value[j]);\n                    }\n                } else if (typeof value === 'object') {\n                    for (var propertyName in value) {\n                        this.unbind(element, rootPath + '.' + propertyName, value[propertyName]);\n                    }\n                }\n                return;\n            }\n        }\n    }\n};\n\n\n\nexports.Binder = Binder;\n\n},{\"../bower_components/core.js/library/fn/map\":1}],53:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar connect = _dereq_('../bower_components/dolphin-js/dist/dolphin.js').connect;\nvar setupCreateBehavior = _dereq_('./behavior.js').setupCreateBehavior;\n\n\nexports.connect = function(url, config) {\n    var clientContext = connect(url, config);\n    clientContext.createBehavior = setupCreateBehavior(clientContext);\n    return clientContext;\n};\n\n},{\"../bower_components/dolphin-js/dist/dolphin.js\":50,\"./behavior.js\":51}]},{},[53])(53)\n});\n\n","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","module.exports = function(){ /* empty */ };","var isObject = require('./$.is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./$.cof')\n  , TAG = require('./$.wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","'use strict';\nvar $            = require('./$')\n  , hide         = require('./$.hide')\n  , redefineAll  = require('./$.redefine-all')\n  , ctx          = require('./$.ctx')\n  , strictNew    = require('./$.strict-new')\n  , defined      = require('./$.defined')\n  , forOf        = require('./$.for-of')\n  , $iterDefine  = require('./$.iter-define')\n  , step         = require('./$.iter-step')\n  , ID           = require('./$.uid')('id')\n  , $has         = require('./$.has')\n  , isObject     = require('./$.is-object')\n  , setSpecies   = require('./$.set-species')\n  , DESCRIPTORS  = require('./$.descriptors')\n  , isExtensible = Object.isExtensible || isObject\n  , SIZE         = DESCRIPTORS ? '_s' : 'size'\n  , id           = 0;\n\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!$has(it, ID)){\n    // can't set id to frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add id\n    if(!create)return 'E';\n    // add missing object id\n    hide(it, ID, ++id);\n  // return object id with prefix\n  } return 'O' + it[ID];\n};\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      strictNew(that, C, NAME);\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar forOf   = require('./$.for-of')\n  , classof = require('./$.classof');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    var arr = [];\n    forOf(this, false, arr.push, arr);\n    return arr;\n  };\n};","'use strict';\nvar $              = require('./$')\n  , global         = require('./$.global')\n  , $export        = require('./$.export')\n  , fails          = require('./$.fails')\n  , hide           = require('./$.hide')\n  , redefineAll    = require('./$.redefine-all')\n  , forOf          = require('./$.for-of')\n  , strictNew      = require('./$.strict-new')\n  , isObject       = require('./$.is-object')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , DESCRIPTORS    = require('./$.descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n  } else {\n    C = wrapper(function(target, iterable){\n      strictNew(target, C, NAME);\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};","var core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./$.fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var global    = require('./$.global')\n  , core      = require('./$.core')\n  , ctx       = require('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","var ctx         = require('./$.ctx')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , anObject    = require('./$.an-object')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that){\n  var iterFn = getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var $          = require('./$')\n  , createDesc = require('./$.property-desc');\nmodule.exports = require('./$.descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./$.cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// check on default Array iterator\nvar Iterators  = require('./$.iterators')\n  , ITERATOR   = require('./$.wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","// call something on iterator step with safe closing on error\nvar anObject = require('./$.an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};","'use strict';\nvar $              = require('./$')\n  , descriptor     = require('./$.property-desc')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./$.hide')(IteratorPrototype, require('./$.wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./$.library')\n  , $export        = require('./$.export')\n  , redefine       = require('./$.redefine')\n  , hide           = require('./$.hide')\n  , has            = require('./$.has')\n  , Iterators      = require('./$.iterators')\n  , $iterCreate    = require('./$.iter-create')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , getProto       = require('./$').getProto\n  , ITERATOR       = require('./$.wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , methods, key;\n  // Fix native\n  if($native){\n    var IteratorPrototype = getProto($default.call(new Base));\n    // Set @@toStringTag to native iterators\n    setToStringTag(IteratorPrototype, TAG, true);\n    // FF fix\n    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    // fix Array#{values, @@iterator}.name in V8 / FF\n    if(DEF_VALUES && $native.name !== VALUES){\n      VALUES_BUG = true;\n      $default = function values(){ return $native.call(this); };\n    }\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n      keys:    IS_SET      ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","module.exports = {};","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};","module.exports = true;","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var redefine = require('./$.redefine');\nmodule.exports = function(target, src){\n  for(var key in src)redefine(target, key, src[key]);\n  return target;\n};","module.exports = require('./$.hide');","'use strict';\nvar core        = require('./$.core')\n  , $           = require('./$')\n  , DESCRIPTORS = require('./$.descriptors')\n  , SPECIES     = require('./$.wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};","var def = require('./$').setDesc\n  , has = require('./$.has')\n  , TAG = require('./$.wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","var global = require('./$.global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","module.exports = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};","var toInteger = require('./$.to-integer')\n  , defined   = require('./$.defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./$.iobject')\n  , defined = require('./$.defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.15 ToLength\nvar toInteger = require('./$.to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var store  = require('./$.shared')('wks')\n  , uid    = require('./$.uid')\n  , Symbol = require('./$.global').Symbol;\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n};","var classof   = require('./$.classof')\n  , ITERATOR  = require('./$.wks')('iterator')\n  , Iterators = require('./$.iterators');\nmodule.exports = require('./$.core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};","'use strict';\nvar addToUnscopables = require('./$.add-to-unscopables')\n  , step             = require('./$.iter-step')\n  , Iterators        = require('./$.iterators')\n  , toIObject        = require('./$.to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./$.iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","'use strict';\nvar strong = require('./$.collection-strong');\n\n// 23.1 Map Objects\nrequire('./$.collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","'use strict';\nvar $at  = require('./$.string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./$.iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./$.export');\n\n$export($export.P, 'Map', {toJSON: require('./$.collection-to-json')('Map')});","require('./es6.array.iterator');\nvar Iterators = require('./$.iterators');\nIterators.NodeList = Iterators.HTMLCollection = Iterators.Array;","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nmodule.exports = require('../modules/_core').Map;","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nmodule.exports = require('../modules/_core').Promise;","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","module.exports = function(){ /* empty */ };","module.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","var forOf = require('./_for-of');\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","'use strict';\nvar $           = require('./_')\n  , hide        = require('./_hide')\n  , redefineAll = require('./_redefine-all')\n  , ctx         = require('./_ctx')\n  , anInstance  = require('./_an-instance')\n  , defined     = require('./_defined')\n  , forOf       = require('./_for-of')\n  , $iterDefine = require('./_iter-define')\n  , step        = require('./_iter-step')\n  , setSpecies  = require('./_set-species')\n  , DESCRIPTORS = require('./_descriptors')\n  , fastKey     = require('./_meta').fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof')\n  , from    = require('./_array-from-iterable');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};","'use strict';\nvar $              = require('./_')\n  , global         = require('./_global')\n  , $export        = require('./_export')\n  , meta           = require('./_meta')\n  , fails          = require('./_fails')\n  , hide           = require('./_hide')\n  , redefineAll    = require('./_redefine-all')\n  , forOf          = require('./_for-of')\n  , anInstance     = require('./_an-instance')\n  , isObject       = require('./_is-object')\n  , setToStringTag = require('./_set-to-string-tag')\n  , DESCRIPTORS    = require('./_descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function(target, iterable){\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        anInstance(this, C, KEY);\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};","var core = module.exports = {version: '2.0.3'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","var ctx         = require('./_ctx')\n  , call        = require('./_iter-call')\n  , isArrayIter = require('./_is-array-iter')\n  , anObject    = require('./_an-object')\n  , toLength    = require('./_to-length')\n  , getIterFn   = require('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var $          = require('./_')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","module.exports = require('./_global').document && document.documentElement;","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// check on default Array iterator\nvar Iterators  = require('./_iterators')\n  , ITERATOR   = require('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};","'use strict';\nvar $              = require('./_')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getProto       = require('./_').getProto\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getProto($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","var ITERATOR     = require('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","module.exports = {};","module.exports = true;","var META     = require('./_uid')('meta')\n  , isObject = require('./_is-object')\n  , has      = require('./_has')\n  , setDesc  = require('./_').setDesc\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !require('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};","var global    = require('./_global')\n  , macrotask = require('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./_cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var hide = require('./_hide');\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};","module.exports = require('./_hide');","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar getDesc  = require('./_').getDesc\n  , isObject = require('./_is-object')\n  , anObject = require('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = require('./_ctx')(Function.call, getDesc(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};","'use strict';\nvar core        = require('./_core')\n  , $           = require('./_')\n  , DESCRIPTORS = require('./_descriptors')\n  , SPECIES     = require('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};","var def = require('./_').setDesc\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = require('./_an-object')\n  , aFunction = require('./_a-function')\n  , SPECIES   = require('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","var ctx                = require('./_ctx')\n  , invoke             = require('./_invoke')\n  , html               = require('./_html')\n  , cel                = require('./_dom-create')\n  , global             = require('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listner = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(require('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listner;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listner, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","'use strict';\nvar $                  = require('./_')\n  , LIBRARY            = require('./_library')\n  , global             = require('./_global')\n  , ctx                = require('./_ctx')\n  , classof            = require('./_classof')\n  , $export            = require('./_export')\n  , isObject           = require('./_is-object')\n  , anObject           = require('./_an-object')\n  , aFunction          = require('./_a-function')\n  , anInstance         = require('./_an-instance')\n  , forOf              = require('./_for-of')\n  , from               = require('./_array-from-iterable')\n  , setProto           = require('./_set-proto').set\n  , speciesConstructor = require('./_species-constructor')\n  , task               = require('./_task').set\n  , microtask          = require('./_microtask')\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar testResolve = function(sub){\n  var test = new $Promise(empty), promise;\n  if(sub)test.constructor = function(exec){\n    exec(empty, empty);\n  };\n  (promise = $Promise.resolve(test))['catch'](empty);\n  return promise === test;\n};\n\nvar USE_NATIVE = function(){\n  var works = false;\n  var SubPromise = function(x){\n    var self = new $Promise(x);\n    setProto(self, SubPromise.prototype);\n    return self;\n  };\n  try {\n    works = $Promise && $Promise.resolve && testResolve();\n    setProto(SubPromise, $Promise);\n    SubPromise.prototype = $.create($Promise.prototype, {constructor: {value: SubPromise}});\n    // actual Firefox has broken subclass support, test that\n    if(!(SubPromise.resolve(5).then(empty) instanceof SubPromise)){\n      works = false;\n    }\n    // V8 4.8- bug, https://code.google.com/p/v8/issues/detail?id=4162\n    if(works && require('./_descriptors')){\n      var thenableThenGotten = false;\n      $Promise.resolve($.setDesc({}, 'then', {\n        get: function(){ thenableThenGotten = true; }\n      }));\n      works = thenableThenGotten;\n    }\n  } catch(e){ works = false; }\n  return !!works;\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          result = handler === true ? value : handler(value);\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    if(isUnhandled(promise)){\n      var value = promise._v\n        , handler, console;\n      if(isNode){\n        process.emit('unhandledRejection', value, promise);\n      } else if(handler = global.onunhandledrejection){\n        handler({promise: promise, reason: value});\n      } else if((console = global.console) && console.error){\n        console.error('Unhandled promise rejection', value);\n      } promise._h = 2;\n    } promise._a = undefined;\n  });\n};\nvar isUnhandled = function(promise){\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  if(promise._h == 1)return false;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok   = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE || testResolve(true)), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = from(iterable)\n        , remaining = values.length\n        , results   = Array(remaining);\n      if(remaining)$.each.call(values, function(promise, index){\n        var alreadyCalled = false;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled = true;\n          results[index] = value;\n          --remaining || resolve(results);\n        }, reject);\n      });\n      else resolve(results);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Map', {toJSON: require('./_collection-to-json')('Map')});","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag')\n  , ArrayValues   = Iterators.Array;\n\nrequire('./_').each.call(['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], function(NAME){\n  var Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = ArrayValues;\n});","var opendolphin;\n(function (opendolphin) {\n    var Attribute = (function () {\n        function Attribute() {\n        }\n        Attribute.QUALIFIER_PROPERTY = \"qualifier\";\n        Attribute.DIRTY_PROPERTY = \"dirty\";\n        Attribute.BASE_VALUE = \"baseValue\";\n        Attribute.VALUE = \"value\";\n        Attribute.TAG = \"tag\";\n        return Attribute;\n    })();\n    opendolphin.Attribute = Attribute;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Command = (function () {\n        function Command() {\n            this.id = \"dolphin-core-command\";\n        }\n        return Command;\n    })();\n    opendolphin.Command = Command;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Tag = (function () {\n        function Tag() {\n        }\n        //Implemented as function so that it will never be changed from outside\n        /** The actual value of the attribute. This is the default if no tag is given.*/\n        Tag.value = function () {\n            return \"VALUE\";\n        };\n        /** the to-be-displayed String, not the key. I18N happens on the server. */\n        Tag.label = function () {\n            return \"LABEL\";\n        };\n        /** If the attribute represent tooltip**/\n        Tag.tooltip = function () {\n            return \"TOOLTIP\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint nullable:false */\n        Tag.mandatory = function () {\n            return \"MANDATORY\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint display:true */\n        Tag.visible = function () {\n            return \"VISIBLE\";\n        };\n        /** \"true\" or \"false\" */\n        Tag.enabled = function () {\n            return \"ENABLED\";\n        };\n        /** regular expression for local, syntactical constraints like in \"rejectField\" */\n        Tag.regex = function () {\n            return \"REGEX\";\n        };\n        /** a single text; e.g. \"textArea\" if the String value should be displayed in a text area instead of a textField */\n        Tag.widgetHint = function () {\n            return \"WIDGET_HINT\";\n        };\n        /** a single text; e.g. \"java.util.Date\" if the value String represents a date */\n        Tag.valueType = function () {\n            return \"VALUE_TYPE\";\n        };\n        return Tag;\n    })();\n    opendolphin.Tag = Tag;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeCreatedNotification = (function (_super) {\n        __extends(AttributeCreatedNotification, _super);\n        function AttributeCreatedNotification(pmId, attributeId, propertyName, newValue, qualifier, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.attributeId = attributeId;\n            this.propertyName = propertyName;\n            this.newValue = newValue;\n            this.qualifier = qualifier;\n            this.tag = tag;\n            this.id = 'AttributeCreated';\n            this.className = \"org.opendolphin.core.comm.AttributeCreatedNotification\";\n        }\n        return AttributeCreatedNotification;\n    })(opendolphin.Command);\n    opendolphin.AttributeCreatedNotification = AttributeCreatedNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeMetadataChangedCommand = (function (_super) {\n        __extends(AttributeMetadataChangedCommand, _super);\n        function AttributeMetadataChangedCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'AttributeMetadataChanged';\n            this.className = \"org.opendolphin.core.comm.AttributeMetadataChangedCommand\";\n        }\n        return AttributeMetadataChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.AttributeMetadataChangedCommand = AttributeMetadataChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var BaseValueChangedCommand = (function (_super) {\n        __extends(BaseValueChangedCommand, _super);\n        function BaseValueChangedCommand(attributeId) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.id = 'BaseValueChanged';\n            this.className = \"org.opendolphin.core.comm.BaseValueChangedCommand\";\n        }\n        return BaseValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.BaseValueChangedCommand = BaseValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CallNamedActionCommand = (function (_super) {\n        __extends(CallNamedActionCommand, _super);\n        function CallNamedActionCommand(actionName) {\n            _super.call(this);\n            this.actionName = actionName;\n            this.id = 'CallNamedAction';\n            this.className = \"org.opendolphin.core.comm.CallNamedActionCommand\";\n        }\n        return CallNamedActionCommand;\n    })(opendolphin.Command);\n    opendolphin.CallNamedActionCommand = CallNamedActionCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ChangeAttributeMetadataCommand = (function (_super) {\n        __extends(ChangeAttributeMetadataCommand, _super);\n        function ChangeAttributeMetadataCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'ChangeAttributeMetadata';\n            this.className = \"org.opendolphin.core.comm.ChangeAttributeMetadataCommand\";\n        }\n        return ChangeAttributeMetadataCommand;\n    })(opendolphin.Command);\n    opendolphin.ChangeAttributeMetadataCommand = ChangeAttributeMetadataCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var EventBus = (function () {\n        function EventBus() {\n            this.eventHandlers = [];\n        }\n        EventBus.prototype.onEvent = function (eventHandler) {\n            this.eventHandlers.push(eventHandler);\n        };\n        EventBus.prototype.trigger = function (event) {\n            this.eventHandlers.forEach(function (handle) { return handle(event); });\n        };\n        return EventBus;\n    })();\n    opendolphin.EventBus = EventBus;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var presentationModelInstanceCount = 0; // todo dk: consider making this static in class\n    var ClientPresentationModel = (function () {\n        function ClientPresentationModel(id, presentationModelType) {\n            this.id = id;\n            this.presentationModelType = presentationModelType;\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.dirty = false;\n            if (typeof id !== 'undefined' && id != null) {\n                this.id = id;\n            }\n            else {\n                this.id = (presentationModelInstanceCount++).toString();\n            }\n            this.invalidBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n        }\n        // todo dk: align with Java version: move to ClientDolphin and auto-add to model store\n        /** a copy constructor for anything but IDs. Per default, copies are client side only, no automatic update applies. */\n        ClientPresentationModel.prototype.copy = function () {\n            var result = new ClientPresentationModel(null, this.presentationModelType);\n            result.clientSideOnly = true;\n            this.getAttributes().forEach(function (attribute) {\n                var attributeCopy = attribute.copy();\n                result.addAttribute(attributeCopy);\n            });\n            return result;\n        };\n        //add array of attributes\n        ClientPresentationModel.prototype.addAttributes = function (attributes) {\n            var _this = this;\n            if (!attributes || attributes.length < 1)\n                return;\n            attributes.forEach(function (attr) {\n                _this.addAttribute(attr);\n            });\n        };\n        ClientPresentationModel.prototype.addAttribute = function (attribute) {\n            var _this = this;\n            if (!attribute || (this.attributes.indexOf(attribute) > -1)) {\n                return;\n            }\n            if (this.findAttributeByPropertyNameAndTag(attribute.propertyName, attribute.tag)) {\n                throw new Error(\"There already is an attribute with property name: \" + attribute.propertyName\n                    + \" and tag: \" + attribute.tag + \" in presentation model with id: \" + this.id);\n            }\n            if (attribute.getQualifier() && this.findAttributeByQualifier(attribute.getQualifier())) {\n                throw new Error(\"There already is an attribute with qualifier: \" + attribute.getQualifier()\n                    + \" in presentation model with id: \" + this.id);\n            }\n            attribute.setPresentationModel(this);\n            this.attributes.push(attribute);\n            if (attribute.tag == opendolphin.Tag.value()) {\n                this.updateDirty();\n            }\n            attribute.onValueChange(function (evt) {\n                _this.invalidBus.trigger({ source: _this });\n            });\n        };\n        ClientPresentationModel.prototype.updateDirty = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].isDirty()) {\n                    this.setDirty(true);\n                    return;\n                }\n            }\n            ;\n            this.setDirty(false);\n        };\n        ClientPresentationModel.prototype.updateAttributeDirtyness = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                this.attributes[i].updateDirty();\n            }\n        };\n        ClientPresentationModel.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientPresentationModel.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n        };\n        ClientPresentationModel.prototype.reset = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.reset();\n            });\n        };\n        ClientPresentationModel.prototype.rebase = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.rebase();\n            });\n        };\n        ClientPresentationModel.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientPresentationModel.prototype.onInvalidated = function (handleInvalidate) {\n            this.invalidBus.onEvent(handleInvalidate);\n        };\n        /** returns a copy of the internal state */\n        ClientPresentationModel.prototype.getAttributes = function () {\n            return this.attributes.slice(0);\n        };\n        ClientPresentationModel.prototype.getAt = function (propertyName, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            return this.findAttributeByPropertyNameAndTag(propertyName, tag);\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyName = function (propertyName) {\n            return this.findAttributeByPropertyNameAndTag(propertyName, opendolphin.Tag.value());\n        };\n        ClientPresentationModel.prototype.findAllAttributesByPropertyName = function (propertyName) {\n            var result = [];\n            if (!propertyName)\n                return null;\n            this.attributes.forEach(function (attribute) {\n                if (attribute.propertyName == propertyName) {\n                    result.push(attribute);\n                }\n            });\n            return result;\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyNameAndTag = function (propertyName, tag) {\n            if (!propertyName || !tag)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if ((this.attributes[i].propertyName == propertyName) && (this.attributes[i].tag == tag)) {\n                    return this.attributes[i];\n                }\n            }\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeByQualifier = function (qualifier) {\n            if (!qualifier)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].getQualifier() == qualifier) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeById = function (id) {\n            if (!id)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].id == id) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.syncWith = function (sourcePresentationModel) {\n            this.attributes.forEach(function (targetAttribute) {\n                var sourceAttribute = sourcePresentationModel.getAt(targetAttribute.propertyName, targetAttribute.tag);\n                if (sourceAttribute) {\n                    targetAttribute.syncWith(sourceAttribute);\n                }\n            });\n        };\n        return ClientPresentationModel;\n    })();\n    opendolphin.ClientPresentationModel = ClientPresentationModel;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientAttribute = (function () {\n        function ClientAttribute(propertyName, qualifier, value, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            this.propertyName = propertyName;\n            this.tag = tag;\n            this.dirty = false;\n            this.id = \"\" + (ClientAttribute.clientAttributeInstanceCount++) + \"C\";\n            this.valueChangeBus = new opendolphin.EventBus();\n            this.qualifierChangeBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n            this.baseValueChangeBus = new opendolphin.EventBus();\n            this.setValue(value);\n            this.setBaseValue(value);\n            this.setQualifier(qualifier);\n        }\n        /** a copy constructor with new id and no presentation model */\n        ClientAttribute.prototype.copy = function () {\n            var result = new ClientAttribute(this.propertyName, this.getQualifier(), this.getValue(), this.tag);\n            result.setBaseValue(this.getBaseValue());\n            return result;\n        };\n        ClientAttribute.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientAttribute.prototype.getBaseValue = function () {\n            return this.baseValue;\n        };\n        ClientAttribute.prototype.setPresentationModel = function (presentationModel) {\n            if (this.presentationModel) {\n                alert(\"You can not set a presentation model for an attribute that is already bound.\");\n            }\n            this.presentationModel = presentationModel;\n        };\n        ClientAttribute.prototype.getPresentationModel = function () {\n            return this.presentationModel;\n        };\n        ClientAttribute.prototype.getValue = function () {\n            return this.value;\n        };\n        ClientAttribute.prototype.setValue = function (newValue) {\n            var verifiedValue = ClientAttribute.checkValue(newValue);\n            if (this.value == verifiedValue)\n                return;\n            var oldValue = this.value;\n            this.value = verifiedValue;\n            this.setDirty(this.calculateDirty(this.baseValue, verifiedValue));\n            this.valueChangeBus.trigger({ 'oldValue': oldValue, 'newValue': verifiedValue });\n        };\n        ClientAttribute.prototype.calculateDirty = function (baseValue, value) {\n            if (baseValue == null) {\n                return value != null;\n            }\n            else {\n                return baseValue != value;\n            }\n        };\n        ClientAttribute.prototype.updateDirty = function () {\n            this.setDirty(this.calculateDirty(this.baseValue, this.value));\n        };\n        ClientAttribute.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n            if (this.presentationModel)\n                this.presentationModel.updateDirty();\n        };\n        ClientAttribute.prototype.setQualifier = function (newQualifier) {\n            if (this.qualifier == newQualifier)\n                return;\n            var oldQualifier = this.qualifier;\n            this.qualifier = newQualifier;\n            this.qualifierChangeBus.trigger({ 'oldValue': oldQualifier, 'newValue': newQualifier });\n        };\n        ClientAttribute.prototype.getQualifier = function () {\n            return this.qualifier;\n        };\n        ClientAttribute.prototype.setBaseValue = function (baseValue) {\n            if (this.baseValue == baseValue)\n                return;\n            var oldBaseValue = this.baseValue;\n            this.baseValue = baseValue;\n            this.setDirty(this.calculateDirty(baseValue, this.value));\n            this.baseValueChangeBus.trigger({ 'oldValue': oldBaseValue, 'newValue': baseValue });\n        };\n        ClientAttribute.prototype.rebase = function () {\n            this.setBaseValue(this.value);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.prototype.reset = function () {\n            this.setValue(this.baseValue);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.checkValue = function (value) {\n            if (value == null || value == undefined) {\n                return null;\n            }\n            var result = value;\n            if (result instanceof String || result instanceof Boolean || result instanceof Number) {\n                result = value.valueOf();\n            }\n            if (result instanceof ClientAttribute) {\n                console.log(\"An Attribute may not itself contain an attribute as a value. Assuming you forgot to call value.\");\n                result = this.checkValue(value.value);\n            }\n            var ok = false;\n            if (this.SUPPORTED_VALUE_TYPES.indexOf(typeof result) > -1 || result instanceof Date) {\n                ok = true;\n            }\n            if (!ok) {\n                throw new Error(\"Attribute values of this type are not allowed: \" + typeof value);\n            }\n            return result;\n        };\n        ClientAttribute.prototype.onValueChange = function (eventHandler) {\n            this.valueChangeBus.onEvent(eventHandler);\n            eventHandler({ \"oldValue\": this.value, \"newValue\": this.value });\n        };\n        ClientAttribute.prototype.onQualifierChange = function (eventHandler) {\n            this.qualifierChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onBaseValueChange = function (eventHandler) {\n            this.baseValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.syncWith = function (sourceAttribute) {\n            if (sourceAttribute) {\n                this.setQualifier(sourceAttribute.getQualifier()); // sequence is important\n                this.setBaseValue(sourceAttribute.getBaseValue());\n                this.setValue(sourceAttribute.value);\n            }\n        };\n        ClientAttribute.SUPPORTED_VALUE_TYPES = [\"string\", \"number\", \"boolean\"];\n        ClientAttribute.clientAttributeInstanceCount = 0;\n        return ClientAttribute;\n    })();\n    opendolphin.ClientAttribute = ClientAttribute;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var ValueChangedCommand = (function (_super) {\n        __extends(ValueChangedCommand, _super);\n        function ValueChangedCommand(attributeId, oldValue, newValue) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.oldValue = oldValue;\n            this.newValue = newValue;\n            this.id = \"ValueChanged\";\n            this.className = \"org.opendolphin.core.comm.ValueChangedCommand\";\n        }\n        return ValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.ValueChangedCommand = ValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var NamedCommand = (function (_super) {\n        __extends(NamedCommand, _super);\n        function NamedCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.NamedCommand\";\n        }\n        return NamedCommand;\n    })(opendolphin.Command);\n    opendolphin.NamedCommand = NamedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var EmptyNotification = (function (_super) {\n        __extends(EmptyNotification, _super);\n        function EmptyNotification() {\n            _super.call(this);\n            this.id = \"Empty\";\n            this.className = \"org.opendolphin.core.comm.EmptyNotification\";\n        }\n        return EmptyNotification;\n    })(opendolphin.Command);\n    opendolphin.EmptyNotification = EmptyNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"NamedCommand.ts\"/>\n/// <reference path=\"EmptyNotification.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /** A Batcher that does no batching but merely takes the first element of the queue as the single item in the batch */\n    var NoCommandBatcher = (function () {\n        function NoCommandBatcher() {\n        }\n        NoCommandBatcher.prototype.batch = function (queue) {\n            return [queue.shift()];\n        };\n        return NoCommandBatcher;\n    })();\n    opendolphin.NoCommandBatcher = NoCommandBatcher;\n    /** A batcher that batches the blinds (commands with no callback) and optionally also folds value changes */\n    var BlindCommandBatcher = (function () {\n        /** folding: whether we should try folding ValueChangedCommands */\n        function BlindCommandBatcher(folding, maxBatchSize) {\n            if (folding === void 0) { folding = true; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.folding = folding;\n            this.maxBatchSize = maxBatchSize;\n        }\n        BlindCommandBatcher.prototype.batch = function (queue) {\n            var result = [];\n            this.processNext(this.maxBatchSize, queue, result); // do not batch more than this.maxBatchSize commands to avoid stack overflow on recursion.\n            return result;\n        };\n        // recursive impl method to side-effect both queue and batch\n        BlindCommandBatcher.prototype.processNext = function (maxBatchSize, queue, batch) {\n            if (queue.length < 1 || maxBatchSize < 1)\n                return;\n            var candidate = queue.shift();\n            if (this.folding && candidate.command instanceof opendolphin.ValueChangedCommand && (!candidate.handler)) {\n                var found = null;\n                var canCmd = candidate.command;\n                for (var i = 0; i < batch.length && found == null; i++) {\n                    if (batch[i].command instanceof opendolphin.ValueChangedCommand) {\n                        var batchCmd = batch[i].command;\n                        if (canCmd.attributeId == batchCmd.attributeId && batchCmd.newValue == canCmd.oldValue) {\n                            found = batchCmd;\n                        }\n                    }\n                }\n                if (found) {\n                    found.newValue = canCmd.newValue; // change existing value, do not batch\n                }\n                else {\n                    batch.push(candidate); // we cannot merge, so batch the candidate\n                }\n            }\n            else {\n                batch.push(candidate);\n            }\n            if (!candidate.handler &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.NamedCommand\") &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.EmptyNotification\") // and no unknown client side effect\n            ) {\n                this.processNext(maxBatchSize - 1, queue, batch); // then we can proceed with batching\n            }\n        };\n        return BlindCommandBatcher;\n    })();\n    opendolphin.BlindCommandBatcher = BlindCommandBatcher;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Codec = (function () {\n        function Codec() {\n        }\n        Codec.prototype.encode = function (commands) {\n            return JSON.stringify(commands); // todo dk: look for possible API support for character encoding\n        };\n        Codec.prototype.decode = function (transmitted) {\n            if (typeof transmitted == 'string') {\n                return JSON.parse(transmitted);\n            }\n            else {\n                return transmitted;\n            }\n        };\n        return Codec;\n    })();\n    opendolphin.Codec = Codec;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var SignalCommand = (function (_super) {\n        __extends(SignalCommand, _super);\n        function SignalCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.SignalCommand\";\n        }\n        return SignalCommand;\n    })(opendolphin.Command);\n    opendolphin.SignalCommand = SignalCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CreatePresentationModelCommand = (function (_super) {\n        __extends(CreatePresentationModelCommand, _super);\n        function CreatePresentationModelCommand(presentationModel) {\n            _super.call(this);\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.id = \"CreatePresentationModel\";\n            this.className = \"org.opendolphin.core.comm.CreatePresentationModelCommand\";\n            this.pmId = presentationModel.id;\n            this.pmType = presentationModel.presentationModelType;\n            var attrs = this.attributes;\n            presentationModel.getAttributes().forEach(function (attr) {\n                attrs.push({\n                    propertyName: attr.propertyName,\n                    id: attr.id,\n                    qualifier: attr.getQualifier(),\n                    value: attr.getValue(),\n                    tag: attr.tag\n                });\n            });\n        }\n        return CreatePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.CreatePresentationModelCommand = CreatePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Map = (function () {\n        function Map() {\n            this.keys = [];\n            this.data = [];\n        }\n        Map.prototype.put = function (key, value) {\n            if (!this.containsKey(key)) {\n                this.keys.push(key);\n            }\n            this.data[this.keys.indexOf(key)] = value;\n        };\n        Map.prototype.get = function (key) {\n            return this.data[this.keys.indexOf(key)];\n        };\n        Map.prototype.remove = function (key) {\n            if (this.containsKey(key)) {\n                var index = this.keys.indexOf(key);\n                this.keys.splice(index, 1);\n                this.data.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        Map.prototype.isEmpty = function () {\n            return this.keys.length == 0;\n        };\n        Map.prototype.length = function () {\n            return this.keys.length;\n        };\n        Map.prototype.forEach = function (handler) {\n            for (var i = 0; i < this.keys.length; i++) {\n                handler(this.keys[i], this.data[i]);\n            }\n        };\n        Map.prototype.containsKey = function (key) {\n            return this.keys.indexOf(key) > -1;\n        };\n        Map.prototype.containsValue = function (value) {\n            return this.data.indexOf(value) > -1;\n        };\n        Map.prototype.values = function () {\n            return this.data.slice(0);\n        };\n        Map.prototype.keySet = function () {\n            return this.keys.slice(0);\n        };\n        return Map;\n    })();\n    opendolphin.Map = Map;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedAllPresentationModelsOfTypeNotification = (function (_super) {\n        __extends(DeletedAllPresentationModelsOfTypeNotification, _super);\n        function DeletedAllPresentationModelsOfTypeNotification(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeletedAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeletedAllPresentationModelsOfTypeNotification\";\n        }\n        return DeletedAllPresentationModelsOfTypeNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedAllPresentationModelsOfTypeNotification = DeletedAllPresentationModelsOfTypeNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedPresentationModelNotification = (function (_super) {\n        __extends(DeletedPresentationModelNotification, _super);\n        function DeletedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletedPresentationModelNotification\";\n        }\n        return DeletedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedPresentationModelNotification = DeletedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"CreatePresentationModelCommand.ts\"/>\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"ChangeAttributeMetadataCommand.ts\"/>\n/// <reference path=\"Attribute.ts\"/>\n/// <reference path=\"Map.ts\"/>\n/// <reference path=\"DeletedAllPresentationModelsOfTypeNotification.ts\"/>\n/// <reference path=\"EventBus.ts\"/>\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"DeletedPresentationModelNotification.ts\"/>\n/// <reference path=\"BaseValueChangedCommand.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    (function (Type) {\n        Type[Type[\"ADDED\"] = 'ADDED'] = \"ADDED\";\n        Type[Type[\"REMOVED\"] = 'REMOVED'] = \"REMOVED\";\n    })(opendolphin.Type || (opendolphin.Type = {}));\n    var Type = opendolphin.Type;\n    var ClientModelStore = (function () {\n        function ClientModelStore(clientDolphin) {\n            this.clientDolphin = clientDolphin;\n            this.presentationModels = new opendolphin.Map();\n            this.presentationModelsPerType = new opendolphin.Map();\n            this.attributesPerId = new opendolphin.Map();\n            this.attributesPerQualifier = new opendolphin.Map();\n            this.modelStoreChangeBus = new opendolphin.EventBus();\n        }\n        ClientModelStore.prototype.getClientDolphin = function () {\n            return this.clientDolphin;\n        };\n        ClientModelStore.prototype.registerModel = function (model) {\n            var _this = this;\n            if (model.clientSideOnly) {\n                return;\n            }\n            var connector = this.clientDolphin.getClientConnector();\n            var createPMCommand = new opendolphin.CreatePresentationModelCommand(model);\n            connector.send(createPMCommand, null);\n            model.getAttributes().forEach(function (attribute) {\n                _this.registerAttribute(attribute);\n            });\n        };\n        ClientModelStore.prototype.registerAttribute = function (attribute) {\n            var _this = this;\n            this.addAttributeById(attribute);\n            if (attribute.getQualifier()) {\n                this.addAttributeByQualifier(attribute);\n            }\n            // whenever an attribute changes its value, the server needs to be notified\n            // and all other attributes with the same qualifier are given the same value\n            attribute.onValueChange(function (evt) {\n                var valueChangeCommand = new opendolphin.ValueChangedCommand(attribute.id, evt.oldValue, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(valueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setValue(attribute.getValue());\n                    });\n                }\n            });\n            // all attributes with the same qualifier should have the same base value\n            attribute.onBaseValueChange(function (evt) {\n                var baseValueChangeCommand = new opendolphin.BaseValueChangedCommand(attribute.id);\n                _this.clientDolphin.getClientConnector().send(baseValueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setBaseValue(attribute.getBaseValue());\n                    });\n                }\n            });\n            attribute.onQualifierChange(function (evt) {\n                var changeAttrMetadataCmd = new opendolphin.ChangeAttributeMetadataCommand(attribute.id, opendolphin.Attribute.QUALIFIER_PROPERTY, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(changeAttrMetadataCmd, null);\n            });\n        };\n        ClientModelStore.prototype.add = function (model) {\n            if (!model) {\n                return false;\n            }\n            if (this.presentationModels.containsKey(model.id)) {\n                console.log(\"There already is a PM with id \" + model.id);\n            }\n            var added = false;\n            if (!this.presentationModels.containsValue(model)) {\n                this.presentationModels.put(model.id, model);\n                this.addPresentationModelByType(model);\n                this.registerModel(model);\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.ADDED, 'clientPresentationModel': model });\n                added = true;\n            }\n            return added;\n        };\n        ClientModelStore.prototype.remove = function (model) {\n            var _this = this;\n            if (!model) {\n                return false;\n            }\n            var removed = false;\n            if (this.presentationModels.containsValue(model)) {\n                this.removePresentationModelByType(model);\n                this.presentationModels.remove(model.id);\n                model.getAttributes().forEach(function (attribute) {\n                    _this.removeAttributeById(attribute);\n                    if (attribute.getQualifier()) {\n                        _this.removeAttributeByQualifier(attribute);\n                    }\n                });\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.REMOVED, 'clientPresentationModel': model });\n                removed = true;\n            }\n            return removed;\n        };\n        ClientModelStore.prototype.findAttributesByFilter = function (filter) {\n            var matches = [];\n            this.presentationModels.forEach(function (key, model) {\n                model.getAttributes().forEach(function (attr) {\n                    if (filter(attr)) {\n                        matches.push(attr);\n                    }\n                });\n            });\n            return matches;\n        };\n        ClientModelStore.prototype.addPresentationModelByType = function (model) {\n            if (!model) {\n                return;\n            }\n            var type = model.presentationModelType;\n            if (!type) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(type);\n            if (!presentationModels) {\n                presentationModels = [];\n                this.presentationModelsPerType.put(type, presentationModels);\n            }\n            if (!(presentationModels.indexOf(model) > -1)) {\n                presentationModels.push(model);\n            }\n        };\n        ClientModelStore.prototype.removePresentationModelByType = function (model) {\n            if (!model || !(model.presentationModelType)) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(model.presentationModelType);\n            if (!presentationModels) {\n                return;\n            }\n            if (presentationModels.length > -1) {\n                presentationModels.splice(presentationModels.indexOf(model), 1);\n            }\n            if (presentationModels.length === 0) {\n                this.presentationModelsPerType.remove(model.presentationModelType);\n            }\n        };\n        ClientModelStore.prototype.listPresentationModelIds = function () {\n            return this.presentationModels.keySet().slice(0);\n        };\n        ClientModelStore.prototype.listPresentationModels = function () {\n            return this.presentationModels.values();\n        };\n        ClientModelStore.prototype.findPresentationModelById = function (id) {\n            return this.presentationModels.get(id);\n        };\n        ClientModelStore.prototype.findAllPresentationModelByType = function (type) {\n            if (!type || !this.presentationModelsPerType.containsKey(type)) {\n                return [];\n            }\n            return this.presentationModelsPerType.get(type).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            var _this = this;\n            var presentationModels = this.findAllPresentationModelByType(presentationModelType);\n            presentationModels.forEach(function (pm) {\n                _this.deletePresentationModel(pm, false);\n            });\n            this.clientDolphin.getClientConnector().send(new opendolphin.DeletedAllPresentationModelsOfTypeNotification(presentationModelType), undefined);\n        };\n        ClientModelStore.prototype.deletePresentationModel = function (model, notify) {\n            if (!model) {\n                return;\n            }\n            if (this.containsPresentationModel(model.id)) {\n                this.remove(model);\n                if (!notify || model.clientSideOnly) {\n                    return;\n                }\n                this.clientDolphin.getClientConnector().send(new opendolphin.DeletedPresentationModelNotification(model.id), null);\n            }\n        };\n        ClientModelStore.prototype.containsPresentationModel = function (id) {\n            return this.presentationModels.containsKey(id);\n        };\n        ClientModelStore.prototype.addAttributeById = function (attribute) {\n            if (!attribute || this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.put(attribute.id, attribute);\n        };\n        ClientModelStore.prototype.removeAttributeById = function (attribute) {\n            if (!attribute || !this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.remove(attribute.id);\n        };\n        ClientModelStore.prototype.findAttributeById = function (id) {\n            return this.attributesPerId.get(id);\n        };\n        ClientModelStore.prototype.addAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                attributes = [];\n                this.attributesPerQualifier.put(attribute.getQualifier(), attributes);\n            }\n            if (!(attributes.indexOf(attribute) > -1)) {\n                attributes.push(attribute);\n            }\n        };\n        ClientModelStore.prototype.removeAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                return;\n            }\n            if (attributes.length > -1) {\n                attributes.splice(attributes.indexOf(attribute), 1);\n            }\n            if (attributes.length === 0) {\n                this.attributesPerQualifier.remove(attribute.getQualifier());\n            }\n        };\n        ClientModelStore.prototype.findAllAttributesByQualifier = function (qualifier) {\n            if (!qualifier || !this.attributesPerQualifier.containsKey(qualifier)) {\n                return [];\n            }\n            return this.attributesPerQualifier.get(qualifier).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.onModelStoreChange = function (eventHandler) {\n            this.modelStoreChangeBus.onEvent(eventHandler);\n        };\n        ClientModelStore.prototype.onModelStoreChangeForType = function (presentationModelType, eventHandler) {\n            this.modelStoreChangeBus.onEvent(function (pmStoreEvent) {\n                if (pmStoreEvent.clientPresentationModel.presentationModelType == presentationModelType) {\n                    eventHandler(pmStoreEvent);\n                }\n            });\n        };\n        return ClientModelStore;\n    })();\n    opendolphin.ClientModelStore = ClientModelStore;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"EmptyNotification.ts\" />\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientModelStore.ts\" />\n/// <reference path=\"ClientConnector.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"AttributeCreatedNotification.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientDolphin = (function () {\n        function ClientDolphin() {\n        }\n        ClientDolphin.prototype.setClientConnector = function (clientConnector) {\n            this.clientConnector = clientConnector;\n        };\n        ClientDolphin.prototype.getClientConnector = function () {\n            return this.clientConnector;\n        };\n        ClientDolphin.prototype.send = function (commandName, onFinished) {\n            this.clientConnector.send(new opendolphin.NamedCommand(commandName), onFinished);\n        };\n        ClientDolphin.prototype.sendEmpty = function (onFinished) {\n            this.clientConnector.send(new opendolphin.EmptyNotification(), onFinished);\n        };\n        // factory method for attributes\n        ClientDolphin.prototype.attribute = function (propertyName, qualifier, value, tag) {\n            return new opendolphin.ClientAttribute(propertyName, qualifier, value, tag);\n        };\n        // factory method for presentation models\n        ClientDolphin.prototype.presentationModel = function (id, type) {\n            var attributes = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                attributes[_i - 2] = arguments[_i];\n            }\n            var model = new opendolphin.ClientPresentationModel(id, type);\n            if (attributes && attributes.length > 0) {\n                attributes.forEach(function (attribute) {\n                    model.addAttribute(attribute);\n                });\n            }\n            this.getClientModelStore().add(model);\n            return model;\n        };\n        ClientDolphin.prototype.setClientModelStore = function (clientModelStore) {\n            this.clientModelStore = clientModelStore;\n        };\n        ClientDolphin.prototype.getClientModelStore = function () {\n            return this.clientModelStore;\n        };\n        ClientDolphin.prototype.listPresentationModelIds = function () {\n            return this.getClientModelStore().listPresentationModelIds();\n        };\n        ClientDolphin.prototype.listPresentationModels = function () {\n            return this.getClientModelStore().listPresentationModels();\n        };\n        ClientDolphin.prototype.findAllPresentationModelByType = function (presentationModelType) {\n            return this.getClientModelStore().findAllPresentationModelByType(presentationModelType);\n        };\n        ClientDolphin.prototype.getAt = function (id) {\n            return this.findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.findPresentationModelById = function (id) {\n            return this.getClientModelStore().findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.deletePresentationModel = function (modelToDelete) {\n            this.getClientModelStore().deletePresentationModel(modelToDelete, true);\n        };\n        ClientDolphin.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            this.getClientModelStore().deleteAllPresentationModelOfType(presentationModelType);\n        };\n        ClientDolphin.prototype.updatePresentationModelQualifier = function (presentationModel) {\n            var _this = this;\n            presentationModel.getAttributes().forEach(function (sourceAttribute) {\n                _this.updateAttributeQualifier(sourceAttribute);\n            });\n        };\n        ClientDolphin.prototype.updateAttributeQualifier = function (sourceAttribute) {\n            if (!sourceAttribute.getQualifier())\n                return;\n            var attributes = this.getClientModelStore().findAllAttributesByQualifier(sourceAttribute.getQualifier());\n            attributes.forEach(function (targetAttribute) {\n                if (targetAttribute.tag != sourceAttribute.tag)\n                    return; // attributes with same qualifier and tag\n                targetAttribute.setValue(sourceAttribute.getValue()); // should always have the same value\n                targetAttribute.setBaseValue(sourceAttribute.getBaseValue()); // and same base value and so dirtyness\n            });\n        };\n        ClientDolphin.prototype.tag = function (presentationModel, propertyName, value, tag) {\n            var clientAttribute = new opendolphin.ClientAttribute(propertyName, null, value, tag);\n            this.addAttributeToModel(presentationModel, clientAttribute);\n            return clientAttribute;\n        };\n        ClientDolphin.prototype.addAttributeToModel = function (presentationModel, clientAttribute) {\n            presentationModel.addAttribute(clientAttribute);\n            this.getClientModelStore().registerAttribute(clientAttribute);\n            if (!presentationModel.clientSideOnly) {\n                this.clientConnector.send(new opendolphin.AttributeCreatedNotification(presentationModel.id, clientAttribute.id, clientAttribute.propertyName, clientAttribute.getValue(), clientAttribute.getQualifier(), clientAttribute.tag), null);\n            }\n        };\n        ////// push support ///////\n        ClientDolphin.prototype.startPushListening = function (pushActionName, releaseActionName) {\n            this.clientConnector.setPushListener(new opendolphin.NamedCommand(pushActionName));\n            this.clientConnector.setReleaseCommand(new opendolphin.SignalCommand(releaseActionName));\n            this.clientConnector.setPushEnabled(true);\n            this.clientConnector.listen();\n        };\n        ClientDolphin.prototype.stopPushListening = function () {\n            this.clientConnector.setPushEnabled(false);\n        };\n        return ClientDolphin;\n    })();\n    opendolphin.ClientDolphin = ClientDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var PresentationModelResetedCommand = (function (_super) {\n        __extends(PresentationModelResetedCommand, _super);\n        function PresentationModelResetedCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'PresentationModelReseted';\n            this.className = \"org.opendolphin.core.comm.PresentationModelResetedCommand\";\n        }\n        return PresentationModelResetedCommand;\n    })(opendolphin.Command);\n    opendolphin.PresentationModelResetedCommand = PresentationModelResetedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SavedPresentationModelNotification = (function (_super) {\n        __extends(SavedPresentationModelNotification, _super);\n        function SavedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'SavedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SavedPresentationModelNotification\";\n        }\n        return SavedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.SavedPresentationModelNotification = SavedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var InitializeAttributeCommand = (function (_super) {\n        __extends(InitializeAttributeCommand, _super);\n        function InitializeAttributeCommand(pmId, pmType, propertyName, qualifier, newValue, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.pmType = pmType;\n            this.propertyName = propertyName;\n            this.qualifier = qualifier;\n            this.newValue = newValue;\n            this.tag = tag;\n            this.id = 'InitializeAttribute';\n            this.className = \"org.opendolphin.core.comm.InitializeAttributeCommand\";\n        }\n        return InitializeAttributeCommand;\n    })(opendolphin.Command);\n    opendolphin.InitializeAttributeCommand = InitializeAttributeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SwitchPresentationModelCommand = (function (_super) {\n        __extends(SwitchPresentationModelCommand, _super);\n        function SwitchPresentationModelCommand(pmId, sourcePmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.sourcePmId = sourcePmId;\n            this.id = 'SwitchPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SwitchPresentationModelCommand\";\n        }\n        return SwitchPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.SwitchPresentationModelCommand = SwitchPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeleteAllPresentationModelsOfTypeCommand = (function (_super) {\n        __extends(DeleteAllPresentationModelsOfTypeCommand, _super);\n        function DeleteAllPresentationModelsOfTypeCommand(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeleteAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeleteAllPresentationModelsOfTypeCommand\";\n        }\n        return DeleteAllPresentationModelsOfTypeCommand;\n    })(opendolphin.Command);\n    opendolphin.DeleteAllPresentationModelsOfTypeCommand = DeleteAllPresentationModelsOfTypeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletePresentationModelCommand = (function (_super) {\n        __extends(DeletePresentationModelCommand, _super);\n        function DeletePresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletePresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletePresentationModelCommand\";\n        }\n        return DeletePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.DeletePresentationModelCommand = DeletePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DataCommand = (function (_super) {\n        __extends(DataCommand, _super);\n        function DataCommand(data) {\n            _super.call(this);\n            this.data = data;\n            this.id = \"Data\";\n            this.className = \"org.opendolphin.core.comm.DataCommand\";\n        }\n        return DataCommand;\n    })(opendolphin.Command);\n    opendolphin.DataCommand = DataCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"CommandBatcher.ts\" />\n/// <reference path=\"Codec.ts\" />\n/// <reference path=\"CallNamedActionCommand.ts\" />\n/// <reference path=\"ClientDolphin.ts\" />\n/// <reference path=\"AttributeMetadataChangedCommand.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"PresentationModelResetedCommand.ts\" />\n/// <reference path=\"SavedPresentationModelNotification.ts\" />\n/// <reference path=\"InitializeAttributeCommand.ts\" />\n/// <reference path=\"SwitchPresentationModelCommand.ts\" />\n/// <reference path=\"BaseValueChangedCommand.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeletePresentationModelCommand.ts\" />\n/// <reference path=\"CreatePresentationModelCommand.ts\" />\n/// <reference path=\"DataCommand.ts\" />\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientConnector = (function () {\n        function ClientConnector(transmitter, clientDolphin, slackMS, maxBatchSize) {\n            if (slackMS === void 0) { slackMS = 0; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.commandQueue = [];\n            this.currentlySending = false;\n            this.pushEnabled = false;\n            this.waiting = false;\n            this.transmitter = transmitter;\n            this.clientDolphin = clientDolphin;\n            this.slackMS = slackMS;\n            this.codec = new opendolphin.Codec();\n            this.commandBatcher = new opendolphin.BlindCommandBatcher(true, maxBatchSize);\n        }\n        ClientConnector.prototype.setCommandBatcher = function (newBatcher) {\n            this.commandBatcher = newBatcher;\n        };\n        ClientConnector.prototype.setPushEnabled = function (enabled) {\n            this.pushEnabled = enabled;\n        };\n        ClientConnector.prototype.setPushListener = function (newListener) {\n            this.pushListener = newListener;\n        };\n        ClientConnector.prototype.setReleaseCommand = function (newCommand) {\n            this.releaseCommand = newCommand;\n        };\n        ClientConnector.prototype.send = function (command, onFinished) {\n            this.commandQueue.push({ command: command, handler: onFinished });\n            if (this.currentlySending) {\n                this.release(); // there is not point in releasing if we do not send atm\n                return;\n            }\n            this.doSendNext();\n        };\n        ClientConnector.prototype.doSendNext = function () {\n            var _this = this;\n            if (this.commandQueue.length < 1) {\n                if (this.pushEnabled) {\n                    this.enqueuePushCommand();\n                }\n                else {\n                    this.currentlySending = false;\n                    return;\n                }\n            }\n            this.currentlySending = true;\n            var cmdsAndHandlers = this.commandBatcher.batch(this.commandQueue);\n            var callback = cmdsAndHandlers[cmdsAndHandlers.length - 1].handler;\n            var commands = cmdsAndHandlers.map(function (cah) { return cah.command; });\n            this.transmitter.transmit(commands, function (response) {\n                //console.log(\"server response: [\" + response.map(it => it.id).join(\", \") + \"] \");\n                var touchedPMs = [];\n                response.forEach(function (command) {\n                    var touched = _this.handle(command);\n                    if (touched)\n                        touchedPMs.push(touched);\n                });\n                if (callback) {\n                    callback.onFinished(touchedPMs); // todo: make them unique?\n                }\n                // recursive call: fetch the next in line but allow a bit of slack such that\n                // document events can fire, rendering is done and commands can batch up\n                setTimeout(function () { return _this.doSendNext(); }, _this.slackMS);\n            });\n        };\n        ClientConnector.prototype.handle = function (command) {\n            if (command.id == \"Data\") {\n                return this.handleDataCommand(command);\n            }\n            else if (command.id == \"DeletePresentationModel\") {\n                return this.handleDeletePresentationModelCommand(command);\n            }\n            else if (command.id == \"DeleteAllPresentationModelsOfType\") {\n                return this.handleDeleteAllPresentationModelOfTypeCommand(command);\n            }\n            else if (command.id == \"CreatePresentationModel\") {\n                return this.handleCreatePresentationModelCommand(command);\n            }\n            else if (command.id == \"ValueChanged\") {\n                return this.handleValueChangedCommand(command);\n            }\n            else if (command.id == \"BaseValueChanged\") {\n                return this.handleBaseValueChangedCommand(command);\n            }\n            else if (command.id == \"SwitchPresentationModel\") {\n                return this.handleSwitchPresentationModelCommand(command);\n            }\n            else if (command.id == \"InitializeAttribute\") {\n                return this.handleInitializeAttributeCommand(command);\n            }\n            else if (command.id == \"SavedPresentationModel\") {\n                return this.handleSavedPresentationModelNotification(command);\n            }\n            else if (command.id == \"PresentationModelReseted\") {\n                return this.handlePresentationModelResetedCommand(command);\n            }\n            else if (command.id == \"AttributeMetadataChanged\") {\n                return this.handleAttributeMetadataChangedCommand(command);\n            }\n            else if (command.id == \"CallNamedAction\") {\n                return this.handleCallNamedActionCommand(command);\n            }\n            else {\n                console.log(\"Cannot handle, unknown command \" + command);\n            }\n            return null;\n        };\n        ClientConnector.prototype.handleDataCommand = function (serverCommand) {\n            return serverCommand.data;\n        };\n        ClientConnector.prototype.handleDeletePresentationModelCommand = function (serverCommand) {\n            var model = this.clientDolphin.findPresentationModelById(serverCommand.pmId);\n            if (!model)\n                return null;\n            this.clientDolphin.getClientModelStore().deletePresentationModel(model, true);\n            return model;\n        };\n        ClientConnector.prototype.handleDeleteAllPresentationModelOfTypeCommand = function (serverCommand) {\n            this.clientDolphin.deleteAllPresentationModelOfType(serverCommand.pmType);\n            return null;\n        };\n        ClientConnector.prototype.handleCreatePresentationModelCommand = function (serverCommand) {\n            var _this = this;\n            if (this.clientDolphin.getClientModelStore().containsPresentationModel(serverCommand.pmId)) {\n                throw new Error(\"There already is a presentation model with id \" + serverCommand.pmId + \"  known to the client.\");\n            }\n            var attributes = [];\n            serverCommand.attributes.forEach(function (attr) {\n                var clientAttribute = _this.clientDolphin.attribute(attr.propertyName, attr.qualifier, attr.value, attr.tag ? attr.tag : opendolphin.Tag.value());\n                clientAttribute.setBaseValue(attr.baseValue);\n                if (attr.id && attr.id.match(\".*S$\")) {\n                    clientAttribute.id = attr.id;\n                }\n                attributes.push(clientAttribute);\n            });\n            var clientPm = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n            clientPm.addAttributes(attributes);\n            if (serverCommand.clientSideOnly) {\n                clientPm.clientSideOnly = true;\n            }\n            this.clientDolphin.getClientModelStore().add(clientPm);\n            this.clientDolphin.updatePresentationModelQualifier(clientPm);\n            clientPm.updateAttributeDirtyness();\n            clientPm.updateDirty();\n            return clientPm;\n        };\n        ClientConnector.prototype.handleValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot update old value \" + serverCommand.oldValue + \" to new value \" + serverCommand.newValue);\n                return null;\n            }\n            if (clientAttribute.getValue() == serverCommand.newValue) {\n                //console.log(\"nothing to do. new value == old value\");\n                return null;\n            }\n            // Below was the code that would enforce that value changes only appear when the proper oldValue is given.\n            // While that seemed appropriate at first, there are actually valid command sequences where the oldValue is not properly set.\n            // We leave the commented code in the codebase to allow for logging/debugging such cases.\n            //            if(clientAttribute.getValue() != serverCommand.oldValue) {\n            //                console.log(\"attribute with id \"+serverCommand.attributeId+\" and value \" + clientAttribute.getValue() +\n            //                            \" was set to value \" + serverCommand.newValue + \" even though the change was based on an outdated old value of \" + serverCommand.oldValue);\n            //            }\n            clientAttribute.setValue(serverCommand.newValue);\n            return null;\n        };\n        ClientConnector.prototype.handleBaseValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot set base value.\");\n                return null;\n            }\n            clientAttribute.rebase();\n            return null;\n        };\n        ClientConnector.prototype.handleSwitchPresentationModelCommand = function (serverCommand) {\n            var switchPm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!switchPm) {\n                console.log(\"switch model with id \" + serverCommand.pmId + \" not found, cannot switch.\");\n                return null;\n            }\n            var sourcePm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.sourcePmId);\n            if (!sourcePm) {\n                console.log(\"source model with id \" + serverCommand.sourcePmId + \" not found, cannot switch.\");\n                return null;\n            }\n            switchPm.syncWith(sourcePm);\n            return switchPm;\n        };\n        ClientConnector.prototype.handleInitializeAttributeCommand = function (serverCommand) {\n            var attribute = new opendolphin.ClientAttribute(serverCommand.propertyName, serverCommand.qualifier, serverCommand.newValue, serverCommand.tag);\n            if (serverCommand.qualifier) {\n                var attributesCopy = this.clientDolphin.getClientModelStore().findAllAttributesByQualifier(serverCommand.qualifier);\n                if (attributesCopy) {\n                    if (!serverCommand.newValue) {\n                        var attr = attributesCopy.shift();\n                        if (attr) {\n                            attribute.setValue(attr.getValue());\n                        }\n                    }\n                    else {\n                        attributesCopy.forEach(function (attr) {\n                            attr.setValue(attribute.getValue());\n                        });\n                    }\n                }\n            }\n            var presentationModel;\n            if (serverCommand.pmId) {\n                presentationModel = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            }\n            if (!presentationModel) {\n                presentationModel = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n                this.clientDolphin.getClientModelStore().add(presentationModel);\n            }\n            this.clientDolphin.addAttributeToModel(presentationModel, attribute);\n            this.clientDolphin.updatePresentationModelQualifier(presentationModel);\n            return presentationModel;\n        };\n        ClientConnector.prototype.handleSavedPresentationModelNotification = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot rebase.\");\n                return null;\n            }\n            model.rebase();\n            return model;\n        };\n        ClientConnector.prototype.handlePresentationModelResetedCommand = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot reset.\");\n                return null;\n            }\n            model.reset();\n            return model;\n        };\n        ClientConnector.prototype.handleAttributeMetadataChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute)\n                return null;\n            clientAttribute[serverCommand.metadataName] = serverCommand.value;\n            return null;\n        };\n        ClientConnector.prototype.handleCallNamedActionCommand = function (serverCommand) {\n            this.clientDolphin.send(serverCommand.actionName, null);\n            return null;\n        };\n        ///////////// push support ///////////////\n        ClientConnector.prototype.listen = function () {\n            if (!this.pushEnabled)\n                return;\n            if (this.waiting)\n                return;\n            // todo: how to issue a warning if no pushListener is set?\n            if (!this.currentlySending) {\n                this.doSendNext();\n            }\n        };\n        ClientConnector.prototype.enqueuePushCommand = function () {\n            var me = this;\n            this.waiting = true;\n            this.commandQueue.push({\n                command: this.pushListener,\n                handler: {\n                    onFinished: function (models) { me.waiting = false; },\n                    onFinishedData: null\n                }\n            });\n        };\n        ClientConnector.prototype.release = function () {\n            if (!this.waiting)\n                return;\n            this.waiting = false;\n            // todo: how to issue a warning if no releaseCommand is set?\n            this.transmitter.signal(this.releaseCommand);\n        };\n        return ClientConnector;\n    })();\n    opendolphin.ClientConnector = ClientConnector;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"DolphinBuilder.ts\"/>\n/**\n * JS-friendly facade to avoid too many dependencies in plain JS code.\n * The name of this file is also used for the initial lookup of the\n * one javascript file that contains all the dolphin code.\n * Changing the name requires the build support and all users\n * to be updated as well.\n * Dierk Koenig\n */\nvar opendolphin;\n(function (opendolphin) {\n    // factory method for the initialized dolphin\n    // Deprecated ! Use 'makeDolphin() instead\n    function dolphin(url, reset, slackMS) {\n        if (slackMS === void 0) { slackMS = 300; }\n        return makeDolphin().url(url).reset(reset).slackMS(slackMS).build();\n    }\n    opendolphin.dolphin = dolphin;\n    // factory method to build an initialized dolphin\n    function makeDolphin() {\n        return new opendolphin.DolphinBuilder();\n    }\n    opendolphin.makeDolphin = makeDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /**\n     * A transmitter that is not transmitting at all.\n     * It may serve as a stand-in when no real transmitter is needed.\n     */\n    var NoTransmitter = (function () {\n        function NoTransmitter() {\n        }\n        NoTransmitter.prototype.transmit = function (commands, onDone) {\n            // do nothing special\n            onDone([]);\n        };\n        NoTransmitter.prototype.signal = function (command) {\n            // do nothing\n        };\n        return NoTransmitter;\n    })();\n    opendolphin.NoTransmitter = NoTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"Codec.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var HttpTransmitter = (function () {\n        function HttpTransmitter(url, reset, charset, errorHandler, supportCORS) {\n            if (reset === void 0) { reset = true; }\n            if (charset === void 0) { charset = \"UTF-8\"; }\n            if (errorHandler === void 0) { errorHandler = null; }\n            if (supportCORS === void 0) { supportCORS = false; }\n            this.url = url;\n            this.charset = charset;\n            this.HttpCodes = {\n                finished: 4,\n                success: 200\n            };\n            this.errorHandler = errorHandler;\n            this.supportCORS = supportCORS;\n            this.http = new XMLHttpRequest();\n            this.sig = new XMLHttpRequest();\n            if (this.supportCORS) {\n                if (\"withCredentials\" in this.http) {\n                    this.http.withCredentials = true; // NOTE: doing this for non CORS requests has no impact\n                    this.sig.withCredentials = true;\n                }\n            }\n            this.codec = new opendolphin.Codec();\n            if (reset) {\n                this.invalidate();\n            }\n        }\n        HttpTransmitter.prototype.transmit = function (commands, onDone) {\n            var _this = this;\n            this.http.onerror = function (evt) {\n                _this.handleError('onerror', \"\");\n                onDone([]);\n            };\n            this.http.onreadystatechange = function (evt) {\n                if (_this.http.readyState == _this.HttpCodes.finished) {\n                    if (_this.http.status == _this.HttpCodes.success) {\n                        var responseText = _this.http.responseText;\n                        if (responseText.trim().length > 0) {\n                            try {\n                                var responseCommands = _this.codec.decode(responseText);\n                                onDone(responseCommands);\n                            }\n                            catch (err) {\n                                console.log(\"Error occurred parsing responseText: \", err);\n                                console.log(\"Incorrect responseText: \", responseText);\n                                _this.handleError('application', \"HttpTransmitter: Incorrect responseText: \" + responseText);\n                                onDone([]);\n                            }\n                        }\n                        else {\n                            _this.handleError('application', \"HttpTransmitter: empty responseText\");\n                            onDone([]);\n                        }\n                    }\n                    else {\n                        _this.handleError('application', \"HttpTransmitter: HTTP Status != 200\");\n                        onDone([]);\n                    }\n                }\n            };\n            this.http.open('POST', this.url, true);\n            if (\"overrideMimeType\" in this.http) {\n                this.http.overrideMimeType(\"application/json; charset=\" + this.charset); // todo make injectable\n            }\n            this.http.send(this.codec.encode(commands));\n        };\n        HttpTransmitter.prototype.handleError = function (kind, message) {\n            var errorEvent = { kind: kind, url: this.url, httpStatus: this.http.status, message: message };\n            if (this.errorHandler) {\n                this.errorHandler(errorEvent);\n            }\n            else {\n                console.log(\"Error occurred: \", errorEvent);\n            }\n        };\n        HttpTransmitter.prototype.signal = function (command) {\n            this.sig.open('POST', this.url, true);\n            this.sig.send(this.codec.encode([command]));\n        };\n        HttpTransmitter.prototype.invalidate = function () {\n            this.http.open('POST', this.url + 'invalidate?', false);\n            this.http.send();\n        };\n        return HttpTransmitter;\n    })();\n    opendolphin.HttpTransmitter = HttpTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"OpenDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ClientModelStore.ts\"/>\n/// <reference path=\"NoTransmitter.ts\"/>\n/// <reference path=\"HttpTransmitter.ts\"/>\n/// <reference path=\"ClientAttribute.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var DolphinBuilder = (function () {\n        function DolphinBuilder() {\n            this.reset_ = false;\n            this.slackMS_ = 300;\n            this.maxBatchSize_ = 50;\n            this.supportCORS_ = false;\n        }\n        DolphinBuilder.prototype.url = function (url) {\n            this.url_ = url;\n            return this;\n        };\n        DolphinBuilder.prototype.reset = function (reset) {\n            this.reset_ = reset;\n            return this;\n        };\n        DolphinBuilder.prototype.slackMS = function (slackMS) {\n            this.slackMS_ = slackMS;\n            return this;\n        };\n        DolphinBuilder.prototype.maxBatchSize = function (maxBatchSize) {\n            this.maxBatchSize_ = maxBatchSize;\n            return this;\n        };\n        DolphinBuilder.prototype.supportCORS = function (supportCORS) {\n            this.supportCORS_ = supportCORS;\n            return this;\n        };\n        DolphinBuilder.prototype.errorHandler = function (errorHandler) {\n            this.errorHandler_ = errorHandler;\n            return this;\n        };\n        DolphinBuilder.prototype.build = function () {\n            console.log(\"OpenDolphin js found\");\n            var clientDolphin = new opendolphin.ClientDolphin();\n            var transmitter;\n            if (this.url_ != null && this.url_.length > 0) {\n                transmitter = new opendolphin.HttpTransmitter(this.url_, this.reset_, \"UTF-8\", this.errorHandler_, this.supportCORS_);\n            }\n            else {\n                transmitter = new opendolphin.NoTransmitter();\n            }\n            clientDolphin.setClientConnector(new opendolphin.ClientConnector(transmitter, clientDolphin, this.slackMS_, this.maxBatchSize_));\n            clientDolphin.setClientModelStore(new opendolphin.ClientModelStore(clientDolphin));\n            console.log(\"ClientDolphin initialized\");\n            return clientDolphin;\n        };\n        return DolphinBuilder;\n    })();\n    opendolphin.DolphinBuilder = DolphinBuilder;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var GetPresentationModelCommand = (function (_super) {\n        __extends(GetPresentationModelCommand, _super);\n        function GetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'GetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.GetPresentationModelCommand\";\n        }\n        return GetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.GetPresentationModelCommand = GetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ResetPresentationModelCommand = (function (_super) {\n        __extends(ResetPresentationModelCommand, _super);\n        function ResetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'ResetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.ResetPresentationModelCommand\";\n        }\n        return ResetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.ResetPresentationModelCommand = ResetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n\nmodule.exports = opendolphin;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Map = require('../bower_components/core.js/library/fn/map');\nvar exists = require('./utils.js').exists;\n\n\nfunction BeanManager(classRepository) {\n    this.classRepository = classRepository;\n    this.addedHandlers = new Map();\n    this.removedHandlers = new Map();\n    this.updatedHandlers = new Map();\n    this.arrayUpdatedHandlers = new Map();\n    this.allAddedHandlers = [];\n    this.allRemovedHandlers = [];\n    this.allUpdatedHandlers = [];\n    this.allArrayUpdatedHandlers = [];\n\n    var self = this;\n    this.classRepository.onBeanAdded(function(type, bean) {\n        var handlerList = self.addedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                handler(bean);\n            });\n        }\n        self.allAddedHandlers.forEach(function (handler) {\n            handler(bean);\n        });\n    });\n    this.classRepository.onBeanRemoved(function(type, bean) {\n        var handlerList = self.removedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function(handler) {\n                handler(bean);\n            });\n        }\n        self.allRemovedHandlers.forEach(function(handler) {\n            handler(bean);\n        });\n    });\n    this.classRepository.onBeanUpdate(function(type, bean, propertyName, newValue, oldValue) {\n        var handlerList = self.updatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                handler(bean, propertyName, newValue, oldValue);\n            });\n        }\n        self.allUpdatedHandlers.forEach(function (handler) {\n            handler(bean, propertyName, newValue, oldValue);\n        });\n    });\n    this.classRepository.onArrayUpdate(function(type, bean, propertyName, index, count, newElement) {\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                handler(bean, propertyName, index, count, newElement);\n            });\n        }\n        self.allArrayUpdatedHandlers.forEach(function (handler) {\n            handler(bean, propertyName, index, count, newElement);\n        });\n    });\n\n}\n\n\nBeanManager.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    return this.classRepository.notifyBeanChange(bean, propertyName, newValue);\n};\n\n\nBeanManager.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    this.classRepository.notifyArrayChange(bean, propertyName, index, count, removedElements);\n};\n\n\nBeanManager.prototype.isManaged = function(bean) {\n    // TODO: Implement dolphin.isManaged() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.create = function(type) {\n    // TODO: Implement dolphin.create() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.add = function(type, bean) {\n    // TODO: Implement dolphin.add() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.addAll = function(type, collection) {\n    // TODO: Implement dolphin.addAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.remove = function(bean) {\n    // TODO: Implement dolphin.remove() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeAll = function(collection) {\n    // TODO: Implement dolphin.removeAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeIf = function(predicate) {\n    // TODO: Implement dolphin.removeIf() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.onAdded = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allAddedHandlers = self.allAddedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allAddedHandlers = self.allAddedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.addedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.addedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.addedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.addedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onRemoved = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allRemovedHandlers = self.allRemovedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allRemovedHandlers = self.allRemovedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.removedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.removedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.removedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onBeanUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allUpdatedHandlers = self.allUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allUpdatedHandlers = self.allUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.updatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.updatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.updatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.updatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onArrayUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.arrayUpdatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.arrayUpdatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.arrayUpdatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\n\nexports.BeanManager = BeanManager;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Platform, console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Map = require('../bower_components/core.js/library/fn/map');\nvar opendolphin = require('../libsrc/opendolphin.js');\n\nvar exists = require('./utils.js').exists;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nvar blocked = null;\n\nfunction fromDolphin(classRepository, type, value) {\n    return ! exists(value)? null\n        : type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, value) {\n    return typeof value === 'object' && value !== null? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction sendListAdd(dolphin, modelId, propertyName, pos, element) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('pos', null, pos),\n        dolphin.attribute('element', null, element)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_ADD @@@'].concat(attributes));\n}\n\nfunction sendListRemove(dolphin, modelId, propertyName, from, to) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('from', null, from),\n        dolphin.attribute('to', null, to)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_DEL @@@'].concat(attributes));\n}\n\nfunction validateList(classRepository, type, bean, propertyName) {\n    var list = bean[propertyName];\n    if (!exists(list)) {\n        classRepository.propertyUpdateHandlers.forEach(function(handler) {\n            handler(type, bean, propertyName, [], undefined);\n        });\n    }\n}\n\nfunction block(bean, propertyName) {\n    if (exists(blocked)) {\n        throw new Error('Trying to create a block while another block exists');\n    }\n    blocked = {\n        bean: bean,\n        propertyName: propertyName\n    };\n}\n\nfunction isBlocked(bean, propertyName) {\n    return exists(blocked) && blocked.bean === bean && blocked.propertyName === propertyName;\n}\n\nfunction unblock() {\n    blocked = null;\n}\n\n\nfunction ClassRepository(dolphin) {\n    this.dolphin = dolphin;\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n    this.beanAddedHandlers = [];\n    this.beanRemovedHandlers = [];\n    this.propertyUpdateHandlers = [];\n    this.arrayUpdateHandlers = [];\n}\n\n\nClassRepository.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    var modelId = this.beanToDolphin.get(bean);\n    if (exists(modelId)) {\n        var model = this.dolphin.findPresentationModelById(modelId);\n        if (exists(model)) {\n            var classInfo = this.classes.get(model.presentationModelType);\n            var type = classInfo[propertyName];\n            var attribute = model.findAttributeByPropertyName(propertyName);\n            if (exists(type) && exists(attribute)) {\n                var oldValue = attribute.getValue();\n                attribute.setValue(toDolphin(this, newValue));\n                return fromDolphin(this, type, oldValue);\n            }\n        }\n    }\n};\n\n\nClassRepository.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    if (isBlocked(bean, propertyName)) {\n        return;\n    }\n    var modelId = this.beanToDolphin.get(bean);\n    var array = bean[propertyName];\n    if (exists(modelId) && exists(array)) {\n        if (Array.isArray(removedElements) && removedElements.length > 0) {\n            sendListRemove(this.dolphin, modelId, propertyName, index, index + removedElements.length);\n        }\n        for (var i = index; i < index + count; i++) {\n            sendListAdd(this.dolphin, modelId, propertyName, i, toDolphin(this, array[i]));\n        }\n    }\n};\n\n\nClassRepository.prototype.onBeanAdded = function(handler) {\n    this.beanAddedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanRemoved = function(handler) {\n    this.beanRemovedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanUpdate = function(handler) {\n    this.propertyUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onArrayUpdate = function(handler) {\n    this.arrayUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.registerClass = function (model) {\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.filter(function(attribute) {\n        return attribute.propertyName.search(/^@@@ /) < 0;\n    }).forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    var self = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return (attribute.tag === opendolphin.Tag.value()) && (attribute.propertyName.search(/^@@@ /) < 0);\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                var oldValue = fromDolphin(self, classInfo[attribute.propertyName], event.oldValue);\n                var newValue = fromDolphin(self, classInfo[attribute.propertyName], event.newValue);\n                self.propertyUpdateHandlers.forEach(function(handler) {\n                    handler(model.presentationModelType, bean, attribute.propertyName, newValue, oldValue);\n                });\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    this.beanAddedHandlers.forEach(function(handler) {\n        handler(model.presentationModelType, bean);\n    });\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    if (exists(bean)) {\n        this.beanRemovedHandlers.forEach(function(handler) {\n            handler(model.presentationModelType, bean);\n        });\n    }\n    return bean;\n};\n\n\nClassRepository.prototype.addListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, pos.value, 0, entry);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.delListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to)) {\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean)) {\n            var type = model.presentationModelType;\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, from.value, to.value - from.value);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.setListEntry = function(model) {\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    handler(type, bean, attribute.value, pos.value, 1, entry);\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    }else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\nClassRepository.prototype.mapDolphinToBean = function(value, type) {\n    return fromDolphin(this, type, value);\n};\n\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar INIT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'initClientContext';\nvar DISCONNECT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'disconnectClientContext';\n\nfunction ClientContext(dolphin, beanManager, controllerManager, connector) {\n    this.dolphin = dolphin;\n    this.beanManager = beanManager;\n    this._controllerManager = controllerManager;\n    this._connector = connector;\n\n    this._connector.invoke(INIT_COMMAND_NAME);\n}\n\n\nClientContext.prototype.createController = function(name) {\n    return this._controllerManager.createController(name);\n};\n\n\nClientContext.prototype.disconnect = function() {\n    // TODO: Implement ClientContext.disconnect [DP-46]\n    this._connector.invoke(DISCONNECT_COMMAND_NAME);\n    this.dolphin.stopPushListening();\n};\n\n\nexports.ClientContext = ClientContext;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Promise = require('../bower_components/core.js/library/fn/promise');\nvar opendolphin = require('../libsrc/opendolphin.js');\nvar exists = require('./utils.js').exists;\n\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar POLL_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'longPoll';\nvar RELEASE_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'release';\n\nvar DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nvar ACTION_CALL_BEAN = '@@@ CONTROLLER_ACTION_CALL_BEAN @@@';\nvar HIGHLANDER_BEAN = '@@@ HIGHLANDER_BEAN @@@';\nvar DOLPHIN_LIST_ADD = '@@@ LIST_ADD @@@';\nvar DOLPHIN_LIST_DEL = '@@@ LIST_DEL @@@';\nvar DOLPHIN_LIST_SET = '@@@ LIST_SET @@@';\nvar SOURCE_SYSTEM = '@@@ SOURCE_SYSTEM @@@';\nvar SOURCE_SYSTEM_CLIENT = 'client';\nvar SOURCE_SYSTEM_SERVER = 'server';\n\n\n\nvar initializer;\n\nfunction Connector(url, dolphin, classRepository, config) {\n    var self = this;\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.highlanderPMResolver = function() {};\n    this.highlanderPMPromise = new Promise(function(resolve) {\n        self.highlanderPMResolver = resolve;\n    });\n\n    dolphin.getClientModelStore().onModelStoreChange(function (event) {\n        var model = event.clientPresentationModel;\n        var sourceSystem = model.findAttributeByPropertyName(SOURCE_SYSTEM);\n        if (exists(sourceSystem) && sourceSystem.value === SOURCE_SYSTEM_SERVER) {\n            if (event.eventType === opendolphin.Type.ADDED) {\n                self.onModelAdded(model);\n            } else if (event.eventType === opendolphin.Type.REMOVED) {\n                self.onModelRemoved(model);\n            }\n        }\n    });\n\n    if (!exists(config) || !exists(config.serverPush) || config.serverPush === true) {\n        setTimeout(function() {\n            dolphin.startPushListening(POLL_COMMAND_NAME, RELEASE_COMMAND_NAME);\n        }, 500);\n    }\n\n    initializer = new Promise(function(resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.withCredentials = true;\n\n        req.onload = function() {\n            if (req.status === 200) {\n                resolve();\n            }\n            else {\n                reject(Error(req.statusText));\n            }\n        };\n\n        req.onerror = function() {\n            reject(Error(\"Network Error\"));\n        };\n\n        req.open('POST', url + 'invalidate?');\n        req.send();\n    });\n}\n\n\nConnector.prototype.onModelAdded = function(model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case ACTION_CALL_BEAN:\n            // ignore\n            break;\n        case DOLPHIN_BEAN:\n            this.classRepository.registerClass(model);\n            break;\n        case HIGHLANDER_BEAN:\n            this.highlanderPMResolver(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n            this.classRepository.addListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_DEL:\n            this.classRepository.delListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_SET:\n            this.classRepository.setListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        default:\n            this.classRepository.load(model);\n            break;\n    }\n};\n\n\nConnector.prototype.onModelRemoved = function(model) {\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            this.classRepository.unregisterClass(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n        case DOLPHIN_LIST_DEL:\n        case DOLPHIN_LIST_SET:\n            // do nothing\n            break;\n        default:\n            this.classRepository.unload(model);\n            break;\n    }\n};\n\n\nConnector.prototype.invoke = function(command) {\n    var dolphin = this.dolphin;\n    return new Promise(function(resolve) {\n        // TODO: This needs to be synchronized with changes pushed via BeanManager\n        //initializer.then(function () {\n            dolphin.send(command, {\n                onFinished: function() {\n                    resolve();\n                }\n            });\n        //});\n    });\n};\n\n\nConnector.prototype.getHighlanderPM = function() {\n    return this.highlanderPMPromise;\n};\n\n\n\nexports.Connector = Connector;\nexports.SOURCE_SYSTEM = SOURCE_SYSTEM;\nexports.SOURCE_SYSTEM_CLIENT = SOURCE_SYSTEM_CLIENT;\nexports.SOURCE_SYSTEM_SERVER = SOURCE_SYSTEM_SERVER;\nexports.ACTION_CALL_BEAN = ACTION_CALL_BEAN;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Promise = require('../bower_components/core.js/library/fn/promise');\nvar exists = require('./utils.js').exists;\nvar ControllerProxy = require('./controllerproxy.js').ControllerProxy;\n\nvar DOLPHIN_BEAN_TYPE = require('./classrepo.js').DOLPHIN_BEAN;\n\nvar SOURCE_SYSTEM = require('./connector.js').SOURCE_SYSTEM;\nvar SOURCE_SYSTEM_CLIENT = require('./connector.js').SOURCE_SYSTEM_CLIENT;\nvar ACTION_CALL_BEAN = require('./connector.js').ACTION_CALL_BEAN;\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar REGISTER_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'registerController';\nvar CALL_CONTROLLER_ACTION_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'callControllerAction';\nvar DESTROY_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'destroyController';\n\nvar CONTROLLER_NAME = 'controllerName';\nvar CONTROLLER_ID = 'controllerId';\nvar MODEL = 'model';\nvar ACTION_NAME = 'actionName';\nvar ERROR_CODE = 'errorCode';\nvar PARAM_PREFIX = '_';\n\n\nfunction ControllerManager(dolphin, classRepository, connector) {\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.connector = connector;\n}\n\n\nControllerManager.prototype.createController = function(name) {\n    var self = this;\n    var controllerId, modelId, model;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_NAME).setValue(name);\n            self.connector.invoke(REGISTER_CONTROLLER_COMMAND_NAME).then(function() {\n                controllerId = highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).getValue();\n                modelId = highlanderPM.findAttributeByPropertyName(MODEL).getValue();\n                model = self.classRepository.mapDolphinToBean(modelId, DOLPHIN_BEAN_TYPE);\n                resolve(new ControllerProxy(controllerId, model, self));\n            });\n        });\n    });\n};\n\n\nControllerManager.prototype.invokeAction = function(controllerId, actionName, params) {\n    var self = this;\n    return new Promise(function(resolve, reject) {\n\n        var attributes = [\n            self.dolphin.attribute(SOURCE_SYSTEM, null, SOURCE_SYSTEM_CLIENT),\n            self.dolphin.attribute(CONTROLLER_ID, null, controllerId),\n            self.dolphin.attribute(ACTION_NAME, null, actionName),\n            self.dolphin.attribute(ERROR_CODE)\n        ];\n\n        if (exists(params)) {\n            for (var prop in params) {\n                if (params.hasOwnProperty(prop)) {\n                    var param = self.classRepository.mapParamToDolphin(params[prop]);\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.value, 'VALUE'));\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.type, 'VALUE_TYPE'));\n                }\n            }\n        }\n\n        var pm = self.dolphin.presentationModel.apply(self.dolphin, [null, ACTION_CALL_BEAN].concat(attributes));\n\n        self.connector.invoke(CALL_CONTROLLER_ACTION_COMMAND_NAME, params).then(function() {\n            var isError = pm.findAttributeByPropertyName(ERROR_CODE).getValue();\n            if (isError) {\n                reject(new Error(\"ControllerAction caused an error\"));\n            } else {\n                resolve();\n            }\n            self.dolphin.deletePresentationModel(pm);\n        });\n    });\n};\n\n\nControllerManager.prototype.destroyController = function(controllerId) {\n    var self = this;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).setValue(controllerId);\n            self.connector.invoke(DESTROY_CONTROLLER_COMMAND_NAME).then(resolve);\n        });\n    });\n};\n\n\n\nexports.ControllerManager = ControllerManager;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Promise = require('../bower_components/core.js/library/fn/promise');\nvar exists = require('./utils.js').exists;\n\n\n\nfunction ControllerProxy(controllerId, model, manager) {\n    this.controllerId = controllerId;\n    this.model = model;\n    this.manager = manager;\n    this.destroyed = false;\n}\n\n\nControllerProxy.prototype.invoke = function(name, params) {\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    return this.manager.invokeAction(this.controllerId, name, params);\n};\n\n\nControllerProxy.prototype.destroy = function() {\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    this.destroyed = true;\n    return this.manager.destroyController(this);\n};\n\n\n\nexports.ControllerProxy = ControllerProxy;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Platform, console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar opendolphin = require('../libsrc/opendolphin.js');\n\nvar exists = require('./utils.js').exists;\nvar Connector = require('./connector.js').Connector;\nvar BeanManager = require('./beanmanager.js').BeanManager;\nvar ClassRepository = require('./classrepo.js').ClassRepository;\nvar ControllerManager = require('./controllermanager.js').ControllerManager;\nvar ClientContext = require('./clientcontext.js').ClientContext;\n\nexports.connect = function(url, config) {\n    var builder = opendolphin.makeDolphin().url(url).reset(false).slackMS(4).supportCORS(true);\n    if (exists(config) && exists(config.errorHandler)) {\n        builder.errorHandler(config.errorHandler);\n    }\n    var dolphin = builder.build();\n\n    var classRepository = new ClassRepository(dolphin);\n    var beanManager = new BeanManager(classRepository);\n    var connector = new Connector(url, dolphin, classRepository, config);\n    var controllerManager = new ControllerManager(dolphin, classRepository, connector);\n\n    return new ClientContext(dolphin, beanManager, controllerManager, connector);\n};\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n ////////////////////\n// Array.forEach()\n////////////////////\nif (!Array.prototype.forEach) {\n\n    Array.prototype.forEach = function(callback, thisArg) {\n\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n\n\n////////////////////\n// Array.filter()\n////////////////////\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun/*, thisArg*/) {\n        'use strict';\n\n        if (this === void 0 || this === null) {\n            throw new TypeError();\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n\n                // NOTE: Technically this should Object.defineProperty at\n                //       the next index, as push can be affected by\n                //       properties on Object.prototype and Array.prototype.\n                //       But that method's new, and collisions should be\n                //       rare, so use the more-compatible alternative.\n                if (fun.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nmodule.exports.exists = function(object) {\n    return typeof object !== 'undefined' && object !== null;\n};\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Polymer */\n\"use strict\";\n\nvar Binder = require('./binder.js').Binder;\n\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\n\nfunction polymer1_1hack(element, path) {\n    // This is a temporary hack to deal with Polymer's API consistency concerning arrays and paths.\n    // An observer uses keys in an array, while the get() and set() methods expect the index.\n    // This is hopefully fixed in Polymer 1.2.\n    do {\n        var pathElements = path.match(/^([^\\.]+)\\.(.*)$/);\n        var key = pathElements !== null? pathElements[1] : path;\n        path = pathElements !== null? pathElements[2] : null;\n\n        if (Array.isArray(element)) {\n            var arrayKey = parseInt(key);\n            if (isNaN(arrayKey)) {\n                element = element[key];\n            } else {\n                var collection = Polymer.Collection.get(element);\n                element = collection.getItem(arrayKey);\n            }\n        } else {\n            element = element[key];\n        }\n    } while (path !== null && exists(element));\n\n    return element;\n}\nfunction navigateToBean(element, path) {\n    var navigation = path.match(/^(.*)\\.[^\\.]*$/);\n    if (! exists(navigation)) {\n        return element;\n    } else {\n        return polymer1_1hack(element, navigation[1]);\n        //return element.get(navigation[1], element);\n    }\n}\n\n\nfunction setupCreateBehavior(clientContext) {\n\n    var binder = new Binder(clientContext.beanManager);\n\n    return function(controllerName) {\n        return {\n\n            properties: {\n                model: {\n                    type: Object,\n                    value: function() { return {}; }\n                }\n            },\n\n            observers: ['_dolphinObserver(model.*)'],\n\n            created: function() {\n                var self = this;\n                clientContext.createController(controllerName).then(function(controller) {\n                    self._controller = controller;\n                    self.set('model', controller.model);\n                });\n            },\n\n            invoke: function(actionName, params) {\n                // TODO Call this after init has finished\n                return this._controller.invoke(actionName, params);\n            },\n\n            _dolphinObserver: function(event) {\n                var path = event.path;\n                var bean, propertyName, i, j;\n                var newValue = event.value;\n\n                if (exists(newValue) && exists(newValue.indexSplices)) {\n                    path = path.substr(0, path.length - \".splices\".length);\n                    bean = navigateToBean(this, path);\n                    if (exists(bean)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var n = newValue.indexSplices.length;\n                        for (i = 0; i < n; i++) {\n                            var change = newValue.indexSplices[i];\n                            clientContext.beanManager.notifyArrayChange(bean, propertyName[0], change.index, change.addedCount, change.removed);\n\n                            var array = bean[propertyName[0]];\n                            for (j = 0; j < change.removed.length; j++) {\n                                binder.unbind(this, path + '.' + (change.index + j), change.removed[j]);\n                            }\n                            for (j = change.index + change.addedCount; j < array.length; j++) {\n                                var oldPos = j - change.addedCount + change.removed.length;\n                                binder.unbind(this, path + '.' + oldPos, array[j]);\n                            }\n                            for (j = change.index; j < array.length; j++) {\n                                binder.bind(this, path + '.' + j, array[j]);\n                            }\n                        }\n                    }\n                } else {\n                    bean = navigateToBean(this, path);\n                    if (exists(bean) && !Array.isArray(bean) && !Array.isArray(newValue)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var oldValue = clientContext.beanManager.notifyBeanChange(bean, propertyName[0], newValue);\n                        if (exists(oldValue)) {\n                            binder.unbind(this, path, oldValue);\n                        }\n                        if (exists(newValue)) {\n                            binder.bind(this, path, newValue);\n                        }\n                    }\n                }\n            }\n        };\n    };\n}\n\n\n\nexports.setupCreateBehavior = setupCreateBehavior;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar Map  = require('../bower_components/core.js/library/fn/map');\n\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\nfunction bindScope(scope, fn) {\n    return function () {\n        fn.apply(scope, arguments);\n    };\n}\n\nfunction deepEqual(array1, array2) {\n    if (array1 === array2 || (!exists(array1) && !exists(array2))) {\n        return true;\n    }\n    if (exists(array1) !== exists(array2)) {\n        return false;\n    }\n    var n = array1.length;\n    if (array2.length !== n) {\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\nfunction Binder(beanManager) {\n    this.listeners = new Map();\n\n    beanManager.onBeanUpdate(bindScope(this, this.onBeanUpdateHandler));\n    beanManager.onArrayUpdate(bindScope(this, this.onArrayUpdateHandler));\n}\n\n\nBinder.prototype.onBeanUpdateHandler = function(bean, propertyName, newValue, oldValue) {\n    if (oldValue === newValue) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        element.set(path, newValue);\n    } else {\n        bean[propertyName] = newValue;\n    }\n};\n\n\nBinder.prototype.onArrayUpdateHandler = function(bean, propertyName, index, count, newElements) {\n    var array = bean[propertyName];\n    var oldElements = array.slice(index, index + count);\n    if (deepEqual(newElements, oldElements)) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        if (typeof newElements === 'undefined') {\n            element.splice(path, index, count);\n        } else {\n            element.splice(path, index, count, newElements);\n        }\n    } else {\n        if (typeof newElements === 'undefined') {\n            array.splice(index, count);\n        } else {\n            array.splice(index, count, newElements);\n        }\n    }\n};\n\n\nBinder.prototype.bind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (!exists(listenerList)) {\n        listenerList = [];\n        this.listeners.set(value, listenerList);\n    }\n    listenerList.push({element: element, rootPath: rootPath});\n\n    if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n            this.bind(element, rootPath + '.' + i, value[i]);\n        }\n    } else if (typeof value === 'object') {\n        for (var propertyName in value) {\n            this.bind(element, rootPath + '.' + propertyName, value[propertyName]);\n        }\n    }\n};\n\nBinder.prototype.unbind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (exists(listenerList)) {\n        var n = listenerList.length;\n        for (var i = 0; i < n; i++) {\n            var entry = listenerList[i];\n            if (entry.element === element && entry.rootPath === rootPath) {\n                listenerList.splice(i, 1);\n\n                if (Array.isArray(value)) {\n                    for (var j = 0; j < value.length; j++) {\n                        this.unbind(element, rootPath + '.' + j, value[j]);\n                    }\n                } else if (typeof value === 'object') {\n                    for (var propertyName in value) {\n                        this.unbind(element, rootPath + '.' + propertyName, value[propertyName]);\n                    }\n                }\n                return;\n            }\n        }\n    }\n};\n\n\n\nexports.Binder = Binder;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar connect = require('../bower_components/dolphin-js/dist/dolphin.js').connect;\nvar setupCreateBehavior = require('./behavior.js').setupCreateBehavior;\n\n\nexports.connect = function(url, config) {\n    var clientContext = connect(url, config);\n    clientContext.createBehavior = setupCreateBehavior(clientContext);\n    return clientContext;\n};\n"],"sourceRoot":"/source/"}