{"version":3,"sources":["node_modules/browser-pack/_prelude.js","dolphin-polymer.min.js","../dolphin-js/dist/bower_components/dolphin-js/dist/node_modules/browser-pack/_prelude.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/fn/map.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/fn/promise.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/fn/set.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_a-function.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_add-to-unscopables.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_an-instance.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_an-object.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_array-from-iterable.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_classof.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_cof.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_collection-strong.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_collection-to-json.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_collection.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_core.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_ctx.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_defined.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_descriptors.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_dom-create.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_export.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_fails.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_for-of.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_global.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_has.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_hide.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_html.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_invoke.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iobject.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_is-array-iter.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_is-object.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-call.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-create.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-define.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-detect.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-step.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iterators.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_library.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_meta.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_microtask.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_property-desc.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_redefine-all.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_redefine.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_set-proto.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_set-species.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_set-to-string-tag.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_shared.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_species-constructor.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_string-at.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_task.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_to-integer.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_to-iobject.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_to-length.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_uid.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_wks.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/core.get-iterator-method.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.array.iterator.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.map.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.promise.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.set.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.string.iterator.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es7.map.to-json.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es7.set.to-json.js","../dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/web.dom.iterable.js","../dolphin-js/dist/bower_components/dolphin-js/dist/libsrc/opendolphin.js","../dolphin-js/dist/bower_components/dolphin-js/dist/src/beanmanager.js","../dolphin-js/dist/bower_components/dolphin-js/dist/src/classrepo.js","../dolphin-js/dist/bower_components/dolphin-js/dist/src/clientcontext.js","../dolphin-js/dist/bower_components/dolphin-js/dist/src/connector.js","../dolphin-js/dist/bower_components/dolphin-js/dist/src/controllermanager.js","../dolphin-js/dist/bower_components/dolphin-js/dist/src/controllerproxy.js","../dolphin-js/dist/bower_components/dolphin-js/dist/src/dolphin.js","../dolphin-js/dist/bower_components/dolphin-js/dist/src/polyfills.js","../dolphin-js/dist/bower_components/dolphin-js/dist/src/utils.js","bower_components/core.js/library/fn/map.js","bower_components/core.js/library/modules/$.a-function.js","bower_components/core.js/library/modules/$.add-to-unscopables.js","bower_components/core.js/library/modules/$.an-object.js","bower_components/core.js/library/modules/$.classof.js","bower_components/core.js/library/modules/$.cof.js","bower_components/core.js/library/modules/$.collection-strong.js","bower_components/core.js/library/modules/$.collection-to-json.js","bower_components/core.js/library/modules/$.collection.js","bower_components/core.js/library/modules/$.core.js","bower_components/core.js/library/modules/$.ctx.js","bower_components/core.js/library/modules/$.defined.js","bower_components/core.js/library/modules/$.descriptors.js","bower_components/core.js/library/modules/$.export.js","bower_components/core.js/library/modules/$.fails.js","bower_components/core.js/library/modules/$.for-of.js","bower_components/core.js/library/modules/$.global.js","bower_components/core.js/library/modules/$.has.js","bower_components/core.js/library/modules/$.hide.js","bower_components/core.js/library/modules/$.iobject.js","bower_components/core.js/library/modules/$.is-array-iter.js","bower_components/core.js/library/modules/$.is-object.js","bower_components/core.js/library/modules/$.iter-call.js","bower_components/core.js/library/modules/$.iter-create.js","bower_components/core.js/library/modules/$.iter-define.js","bower_components/core.js/library/modules/$.iter-step.js","bower_components/core.js/library/modules/$.iterators.js","bower_components/core.js/library/modules/$.js","bower_components/core.js/library/modules/$.library.js","bower_components/core.js/library/modules/$.property-desc.js","bower_components/core.js/library/modules/$.redefine-all.js","bower_components/core.js/library/modules/$.redefine.js","bower_components/core.js/library/modules/$.set-species.js","bower_components/core.js/library/modules/$.set-to-string-tag.js","bower_components/core.js/library/modules/$.shared.js","bower_components/core.js/library/modules/$.strict-new.js","bower_components/core.js/library/modules/$.string-at.js","bower_components/core.js/library/modules/$.to-integer.js","bower_components/core.js/library/modules/$.to-iobject.js","bower_components/core.js/library/modules/$.to-length.js","bower_components/core.js/library/modules/$.uid.js","bower_components/core.js/library/modules/$.wks.js","bower_components/core.js/library/modules/core.get-iterator-method.js","bower_components/core.js/library/modules/es6.array.iterator.js","bower_components/core.js/library/modules/es6.map.js","bower_components/core.js/library/modules/es6.string.iterator.js","bower_components/core.js/library/modules/es7.map.to-json.js","bower_components/core.js/library/modules/web.dom.iterable.js","src/behavior.js","src/binder.js","src/dolphin-polymer-api.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dolphin","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","Map","../modules/_core","../modules/es6.map","../modules/es6.object.to-string","../modules/es6.string.iterator","../modules/es7.map.to-json","../modules/web.dom.iterable",2,"Promise","../modules/es6.promise",3,"Set","../modules/es6.set","../modules/es7.set.to-json",4,"$Object","Object","create","getProto","getPrototypeOf","isEnum","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","defineProperty","setDescs","defineProperties","getKeys","keys","getNames","getOwnPropertyNames","getSymbols","getOwnPropertySymbols","each","forEach",5,"it","TypeError",6,7,"Constructor","name","forbiddenField","undefined",8,"isObject","./_is-object",9,"forOf","iter","ITERATOR","result","push","./_for-of",10,"cof","TAG","ARG","arguments","O","T","B","callee","./_cof","./_wks",11,"toString","slice",12,"$","redefineAll","ctx","anInstance","defined","$iterDefine","step","setSpecies","DESCRIPTORS","fastKey","SIZE","getEntry","that","key","entry","index","_i","_f","k","getConstructor","wrapper","NAME","IS_MAP","ADDER","C","iterable","_l","prototype","clear","data","p","delete","next","prev","callbackfn","v","has","get","def","value","setStrong","iterated","kind","_t","_k","./_","./_an-instance","./_ctx","./_defined","./_descriptors","./_hide","./_iter-define","./_iter-step","./_meta","./_redefine-all","./_set-species",13,"classof","from","./_array-from-iterable","./_classof",14,"$export","meta","fails","hide","setToStringTag","methods","common","IS_WEAK","Base","proto","entries","target","_c","split","KEY","IS_ADDER","b","size","NEED","G","W","F","./_export","./_fails","./_global","./_set-to-string-tag",15,"core","version","__e",16,"aFunction","fn","c","apply","./_a-function",17,18,19,"document","is","createElement",20,"PROTOTYPE","type","source","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","S","IS_PROTO","P","IS_BIND","IS_WRAP","expProto","Function","virtual","R","U","./_core",21,"exec",22,"isArrayIter","anObject","toLength","getIterFn","iterator","iterFn","done","./_an-object","./_is-array-iter","./_iter-call","./_to-length","./core.get-iterator-method",23,"Math","__g",24,"hasOwnProperty",25,"createDesc","object","./_property-desc",26,"documentElement",27,"args","un",28,29,"Iterators","ArrayProto","Array","./_iterators",30,31,"ret",32,"descriptor","IteratorPrototype",33,"LIBRARY","redefine","$iterCreate","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","DEFAULT","IS_SET","FORCED","getMethod","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","values","./_has","./_iter-create","./_library","./_redefine",34,"SAFE_CLOSING","riter","skipClosing","safe","arr",35,36,37,38,"META","id","isExtensible","FREEZE","preventExtensions","setMeta","w","getWeak","onFreeze","./_uid",39,"head","last","notify","macrotask","set","Observer","MutationObserver","WebKitMutationObserver","process","isNode","flush","parent","domain","exit","enter","nextTick","toggle","node","createTextNode","observe","characterData","resolve","then","task","./_task",40,"bitmap","enumerable","configurable","writable",41,"src",42,43,"check","setPrototypeOf","test","buggy","__proto__",44,"SPECIES",45,"tag","stat",46,"SHARED","store",47,"D","constructor",48,"toInteger","TO_STRING","pos","String","charCodeAt","charAt","./_to-integer",49,"defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","counter","queue","ONREADYSTATECHANGE","run","listner","event","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","./_dom-create","./_html","./_invoke",50,"ceil","floor","isNaN",51,"IObject","./_iobject",52,"min",53,"px","random","concat",54,"uid","Symbol","USE_SYMBOL","./_shared",55,"getIteratorMethod",56,"addToUnscopables","toIObject","Arguments","./_add-to-unscopables","./_to-iobject",57,"strong","./_collection","./_collection-strong",58,59,"Internal","GenericPromiseCapability","Wrapper","setProto","speciesConstructor","microtask","PROMISE","$Promise","empty","testResolve","sub","promise","USE_NATIVE","works","SubPromise","x","thenableThenGotten","sameConstructor","isThenable","newPromiseCapability","PromiseCapability","reject","$$resolve","$$reject","perform","error","isReject","_n","chain","_v","ok","_s","reaction","handler","fail","_h","onHandleUnhandled","onUnhandled","isUnhandled","console","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","executor","err","onFulfilled","onRejected","catch","capability","all","abrupt","remaining","results","alreadyCalled","race","./_iter-detect","./_microtask","./_set-proto","./_species-constructor",60,"add",61,"$at","point","./_string-at",62,"toJSON","./_collection-to-json",63,64,"TO_STRING_TAG","ArrayValues","Collection","./es6.array.iterator",65,"opendolphin","Attribute","QUALIFIER_PROPERTY","DIRTY_PROPERTY","BASE_VALUE","VALUE","Command","Tag","label","tooltip","mandatory","visible","enabled","regex","widgetHint","valueType","__extends","d","__","AttributeCreatedNotification","_super","pmId","attributeId","propertyName","newValue","qualifier","className","AttributeMetadataChangedCommand","metadataName","BaseValueChangedCommand","CallNamedActionCommand","actionName","ChangeAttributeMetadataCommand","EventBus","eventHandlers","onEvent","eventHandler","trigger","handle","presentationModelInstanceCount","ClientPresentationModel","presentationModelType","attributes","clientSideOnly","dirty","invalidBus","dirtyValueChangeBus","copy","getAttributes","attribute","attributeCopy","addAttribute","addAttributes","_this","attr","indexOf","findAttributeByPropertyNameAndTag","getQualifier","findAttributeByQualifier","setPresentationModel","updateDirty","onValueChange","evt","isDirty","setDirty","updateAttributeDirtyness","oldVal","oldValue","reset","rebase","onDirty","onInvalidated","handleInvalidate","getAt","findAttributeByPropertyName","findAllAttributesByPropertyName","findAttributeById","syncWith","sourcePresentationModel","targetAttribute","sourceAttribute","ClientAttribute","clientAttributeInstanceCount","valueChangeBus","qualifierChangeBus","baseValueChangeBus","setValue","setBaseValue","setQualifier","getValue","getBaseValue","baseValue","presentationModel","alert","getPresentationModel","verifiedValue","checkValue","calculateDirty","newQualifier","oldQualifier","oldBaseValue","Boolean","Number","valueOf","log","SUPPORTED_VALUE_TYPES","Date","onQualifierChange","onBaseValueChange","ValueChangedCommand","NamedCommand","EmptyNotification","NoCommandBatcher","batch","shift","BlindCommandBatcher","folding","maxBatchSize","processNext","candidate","command","found","canCmd","batchCmd","Codec","encode","commands","JSON","stringify","decode","transmitted","parse","SignalCommand","CreatePresentationModelCommand","pmType","attrs","put","containsKey","remove","splice","isEmpty","containsValue","keySet","DeletedAllPresentationModelsOfTypeNotification","DeletedPresentationModelNotification","Type","ClientModelStore","clientDolphin","presentationModels","presentationModelsPerType","attributesPerId","attributesPerQualifier","modelStoreChangeBus","getClientDolphin","registerModel","model","connector","getClientConnector","createPMCommand","send","registerAttribute","addAttributeById","addAttributeByQualifier","valueChangeCommand","findAttributesByFilter","baseValueChangeCommand","changeAttrMetadataCmd","added","addPresentationModelByType","eventType","ADDED","clientPresentationModel","removed","removePresentationModelByType","removeAttributeById","removeAttributeByQualifier","REMOVED","filter","matches","listPresentationModelIds","listPresentationModels","findPresentationModelById","findAllPresentationModelByType","deleteAllPresentationModelOfType","pm","deletePresentationModel","containsPresentationModel","findAllAttributesByQualifier","onModelStoreChange","onModelStoreChangeForType","pmStoreEvent","ClientDolphin","setClientConnector","clientConnector","commandName","onFinished","sendEmpty","getClientModelStore","setClientModelStore","clientModelStore","modelToDelete","updatePresentationModelQualifier","updateAttributeQualifier","clientAttribute","addAttributeToModel","startPushListening","pushActionName","releaseActionName","setPushListener","setReleaseCommand","setPushEnabled","listen","stopPushListening","PresentationModelResetedCommand","SavedPresentationModelNotification","InitializeAttributeCommand","SwitchPresentationModelCommand","sourcePmId","DeleteAllPresentationModelsOfTypeCommand","DeletePresentationModelCommand","DataCommand","ClientConnector","transmitter","slackMS","commandQueue","currentlySending","pushEnabled","waiting","codec","commandBatcher","setCommandBatcher","newBatcher","newListener","pushListener","newCommand","releaseCommand","release","doSendNext","enqueuePushCommand","cmdsAndHandlers","callback","map","cah","transmit","response","touchedPMs","touched","handleDataCommand","handleDeletePresentationModelCommand","handleDeleteAllPresentationModelOfTypeCommand","handleCreatePresentationModelCommand","handleValueChangedCommand","handleBaseValueChangedCommand","handleSwitchPresentationModelCommand","handleInitializeAttributeCommand","handleSavedPresentationModelNotification","handlePresentationModelResetedCommand","handleAttributeMetadataChangedCommand","handleCallNamedActionCommand","serverCommand","match","clientPm","switchPm","sourcePm","attributesCopy","me","models","onFinishedData","signal","url","makeDolphin","build","DolphinBuilder","NoTransmitter","onDone","HttpTransmitter","charset","errorHandler","supportCORS","HttpCodes","finished","success","http","XMLHttpRequest","sig","withCredentials","invalidate","onerror","handleError","onreadystatechange","readyState","status","responseText","trim","responseCommands","open","overrideMimeType","message","errorEvent","httpStatus","reset_","slackMS_","maxBatchSize_","supportCORS_","url_","errorHandler_","GetPresentationModelCommand","ResetPresentationModelCommand",66,"BeanManager","classRepository","checkMethod","checkParam","addedHandlers","removedHandlers","updatedHandlers","arrayUpdatedHandlers","allAddedHandlers","allRemovedHandlers","allUpdatedHandlers","allArrayUpdatedHandlers","onBeanAdded","bean","handlerList","exists","warn","onBeanRemoved","onBeanUpdate","onArrayUpdate","count","newElement","utils","notifyBeanChange","notifyArrayChange","removedElements","isManaged","addAll","collection","removeAll","removeIf","predicate","onAdded","unsubscribe","onRemoved","../bower_components/core.js/library/fn/map","./polyfills.js","./utils.js",67,"fromDolphin","DOLPHIN_BEAN","beanFromDolphin","toDolphin","beanToDolphin","sendListAdd","modelId","element","sendListRemove","to","validateList","list","propertyUpdateHandlers","block","blocked","isBlocked","unblock","ClassRepository","classes","classInfos","beanAddedHandlers","beanRemovedHandlers","arrayUpdateHandlers","UNKNOWN","BASIC_TYPE","classInfo","array","isArray","registerClass","search","unregisterClass","load","unload","addListEntry","delListEntry","setListEntry","mapParamToDolphin","param","mapDolphinToBean","../libsrc/opendolphin.js",68,"ClientContext","beanManager","controllerManager","_controllerManager","_connector","INIT_COMMAND_NAME","DOLPHIN_PLATFORM_PREFIX","DISCONNECT_COMMAND_NAME","createController","disconnect","destroy",69,"Connector","config","highlanderPMResolver","highlanderPMPromise","sourceSystem","SOURCE_SYSTEM","SOURCE_SYSTEM_SERVER","onModelAdded","onModelRemoved","serverPush","POLL_COMMAND_NAME","RELEASE_COMMAND_NAME","initializer","req","onload","statusText","ACTION_CALL_BEAN","HIGHLANDER_BEAN","DOLPHIN_LIST_ADD","DOLPHIN_LIST_DEL","DOLPHIN_LIST_SET","SOURCE_SYSTEM_CLIENT","getHighlanderPM","../bower_components/core.js/library/fn/promise",70,"ControllerManager","controllers","ControllerProxy","DOLPHIN_BEAN_TYPE","REGISTER_CONTROLLER_COMMAND_NAME","CALL_CONTROLLER_ACTION_COMMAND_NAME","DESTROY_CONTROLLER_COMMAND_NAME","CONTROLLER_NAME","CONTROLLER_ID","MODEL","ACTION_NAME","ERROR_CODE","PARAM_PREFIX","controllerId","controller","highlanderPM","invokeAction","params","prop","isError","destroyController","controllersCopy","promises","../bower_components/core.js/library/fn/set","./classrepo.js","./connector.js","./controllerproxy.js",71,"manager","destroyed","onDestroyedHandlers","onDestroyed",72,"connect","builder","./beanmanager.js","./clientcontext.js","./controllermanager.js",73,"thisArg","len","kValue","fun","res","val",74,"checkMethodName","parameterName","../modules/$.core","./$.is-object","./$.cof","./$.wks","strictNew","ID","$has","./$","./$.ctx","./$.defined","./$.descriptors","./$.for-of","./$.has","./$.hide","./$.iter-define","./$.iter-step","./$.redefine-all","./$.set-species","./$.strict-new","./$.uid","./$.classof","./$.export","./$.fails","./$.global","./$.set-to-string-tag","./$.a-function","./$.core","./$.an-object","./$.is-array-iter","./$.iter-call","./$.to-length","./$.property-desc","./$.iterators","./$.iter-create","./$.library","./$.redefine","./$.to-integer","./$.iobject","./$.shared","./$.add-to-unscopables","./$.to-iobject","./$.collection","./$.collection-strong","./$.string-at","./$.collection-to-json","NodeList","HTMLCollection","polymer1_1hack","path","pathElements","arrayKey","parseInt","Polymer","getItem","navigateToBean","navigation","setupCreateBehavior","clientContext","binder","Binder","controllerName","state","properties","observers","created","_controller","_dolphinObserver","j","indexSplices","substr","change","addedCount","unbind","oldPos","bind","./binder.js","bindScope","scope","deepEqual","array1","array2","listeners","onBeanUpdateHandler","onArrayUpdateHandler","listenerList","rootPath","newElements","oldElements","createBehavior","../bower_components/dolphin-js/dist/dolphin.js","./behavior.js"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,QAAAV,MAAA,WAAA,GAAAG,EAAA,OAAA,SAAAQ,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAC,EAAAzB,EAAAD,ICCA,SAAWM,ICDX,SAAAP,GAAA,GAAA,gBAAAC,IAAA,mBAAAC,GAAAA,EAAAD,QAAAD,QAAA,IAAA,kBAAAG,IAAAA,EAAAC,IAAAD,KAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,GAAAA,EAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,QAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAS,IAAAA,CAAA,KAAAV,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAO,IAAAA,EAAAX,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAC,EAAAzB,EAAAD,GCAA0B,EAAA,mCACAA,EAAA,kCACAA,EAAA,+BACAA,EAAA,sBACAA,EAAA,8BACAzB,EAAAD,QAAA0B,EAAA,oBAAAC,MFIGC,mBAAmB,GAAGC,qBAAqB,GAAGC,kCAAkC,GAAGC,iCAAiC,GAAGC,6BAA6B,GAAGC,8BAA8B,KAAKC,GAAG,SAASR,EAAQzB,EAAOD,GGTxN0B,EAAA,mCACAA,EAAA,kCACAA,EAAA,+BACAA,EAAA,0BACAzB,EAAAD,QAAA0B,EAAA,oBAAAS,UHWGP,mBAAmB,GAAGE,kCAAkC,GAAGM,yBAAyB,GAAGL,iCAAiC,GAAGE,8BAA8B,KAAKI,GAAG,SAASX,EAAQzB,EAAOD,GIf5L0B,EAAA,mCACAA,EAAA,kCACAA,EAAA,+BACAA,EAAA,sBACAA,EAAA,8BACAzB,EAAAD,QAAA0B,EAAA,oBAAAY,MJiBGV,mBAAmB,GAAGE,kCAAkC,GAAGS,qBAAqB,GAAGR,iCAAiC,GAAGS,6BAA6B,GAAGP,8BAA8B,KAAKQ,GAAG,SAASf,EAAQzB,EAAOD,GKtBxN,GAAA0C,GAAAC,MACA1C,GAAAD,SACA4C,OAAAF,EAAAE,OACAC,SAAAH,EAAAI,eACAC,UAAAC,qBACAC,QAAAP,EAAAQ,yBACAC,QAAAT,EAAAU,eACAC,SAAAX,EAAAY,iBACAC,QAAAb,EAAAc,KACAC,SAAAf,EAAAgB,oBACAC,WAAAjB,EAAAkB,sBACAC,QAAAC,cLyBMC,GAAG,SAASrC,EAAQzB,EAAOD,GMpCjCC,EAAAD,QAAA,SAAAgE,GACA,GAAA,kBAAAA,GAAA,KAAAC,WAAAD,EAAA,sBACA,OAAAA,SNuCME,GAAG,SAASxC,EAAQzB,EAAOD,GOzCjCC,EAAAD,QAAA,kBP2CMmE,GAAG,SAASzC,EAAQzB,EAAOD,GQ3CjCC,EAAAD,QAAA,SAAAgE,EAAAI,EAAAC,EAAAC,GACA,KAAAN,YAAAI,KAAAG,SAAAD,GAAAA,IAAAN,GACA,KAAAC,WAAAI,EAAA,0BACA,OAAAL,SR8CMQ,GAAG,SAAS9C,EAAQzB,EAAOD,GSjDjC,GAAAyE,GAAA/C,EAAA,eACAzB,GAAAD,QAAA,SAAAgE,GACA,IAAAS,EAAAT,GAAA,KAAAC,WAAAD,EAAA,qBACA,OAAAA,MToDGU,eAAe,KAAKC,GAAG,SAASjD,EAAQzB,EAAOD,GUvDlD,GAAA4E,GAAAlD,EAAA,YAEAzB,GAAAD,QAAA,SAAA6E,EAAAC,GACA,GAAAC,KAEA,OADAH,GAAAC,GAAA,EAAAE,EAAAC,KAAAD,EAAAD,GACAC,KV2DGE,YAAY,KAAKC,IAAI,SAASxD,EAAQzB,EAAOD,GW/DhD,GAAAmF,GAAAzD,EAAA,UACA0D,EAAA1D,EAAA,UAAA,eAEA2D,EAAA,aAAAF,EAAA,WAAA,MAAAG,cAEArF,GAAAD,QAAA,SAAAgE,GACA,GAAAuB,GAAAC,EAAAC,CACA,OAAAlB,UAAAP,EAAA,YAAA,OAAAA,EAAA,OAEA,iBAAAwB,GAAAD,EAAA5C,OAAAqB,IAAAoB,IAAAI,EAEAH,EAAAF,EAAAI,GAEA,WAAAE,EAAAN,EAAAI,KAAA,kBAAAA,GAAAG,OAAA,YAAAD,KXmEGE,SAAS,GAAGC,SAAS,KAAKC,IAAI,SAASnE,EAAQzB,EAAOD,GYjFzD,GAAA8F,MAAAA,QAEA7F,GAAAD,QAAA,SAAAgE,GACA,MAAA8B,GAAAvE,KAAAyC,GAAA+B,MAAA,EAAA,UZoFMC,IAAI,SAAStE,EAAQzB,EAAOD,GavFlC,YACA,IAAAiG,GAAAvE,EAAA,OAEAwE,GADAxE,EAAA,WACAA,EAAA,oBACAyE,EAAAzE,EAAA,UACA0E,EAAA1E,EAAA,kBACA2E,EAAA3E,EAAA,cACAkD,EAAAlD,EAAA,aACA4E,EAAA5E,EAAA,kBACA6E,EAAA7E,EAAA,gBACA8E,EAAA9E,EAAA,kBACA+E,EAAA/E,EAAA,kBACAgF,EAAAhF,EAAA,WAAAgF,QACAC,EAAAF,EAAA,KAAA,OAEAG,EAAA,SAAAC,EAAAC,GAEA,GAAAC,GAAAC,EAAAN,EAAAI,EACA,IAAA,MAAAE,EAAA,MAAAH,GAAAI,GAAAD,EAEA,KAAAD,EAAAF,EAAAK,GAAAH,EAAAA,EAAAA,EAAAnG,EACA,GAAAmG,EAAAI,GAAAL,EAAA,MAAAC,GAIA9G,GAAAD,SACAoH,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAA,SAAAR,EAAAa,GACAtB,EAAAS,EAAAY,EAAAH,EAAA,MACAT,EAAAI,GAAAhB,EAAArD,OAAA,MACAiE,EAAAK,GAAA3C,OACAsC,EAAAc,GAAApD,OACAsC,EAAAF,GAAA,EACApC,QAAAmD,GAAA9C,EAAA8C,EAAAH,EAAAV,EAAAW,GAAAX,IAsDA,OApDAX,GAAAuB,EAAAG,WAGAC,MAAA,WACA,IAAA,GAAAhB,GAAArG,KAAAsH,EAAAjB,EAAAI,GAAAF,EAAAF,EAAAK,GAAAH,EAAAA,EAAAA,EAAAnG,EACAmG,EAAAlG,GAAA,EACAkG,EAAAgB,IAAAhB,EAAAgB,EAAAhB,EAAAgB,EAAAnH,EAAA2D,cACAuD,GAAAf,EAAA5F,EAEA0F,GAAAK,GAAAL,EAAAc,GAAApD,OACAsC,EAAAF,GAAA,GAIAqB,SAAA,SAAAlB,GACA,GAAAD,GAAArG,KACAuG,EAAAH,EAAAC,EAAAC,EACA,IAAAC,EAAA,CACA,GAAAkB,GAAAlB,EAAAnG,EACAsH,EAAAnB,EAAAgB,QACAlB,GAAAI,GAAAF,EAAA5F,GACA4F,EAAAlG,GAAA,EACAqH,IAAAA,EAAAtH,EAAAqH,GACAA,IAAAA,EAAAF,EAAAG,GACArB,EAAAK,IAAAH,IAAAF,EAAAK,GAAAe,GACApB,EAAAc,IAAAZ,IAAAF,EAAAc,GAAAO,GACArB,EAAAF,KACA,QAAAI,GAIAjD,QAAA,SAAAqE,GACA/B,EAAA5F,KAAAiH,EAAA,UAGA,KAFA,GACAV,GADAhH,EAAAoG,EAAAgC,EAAA7C,UAAA9D,OAAA,EAAA8D,UAAA,GAAAf,OAAA,GAEAwC,EAAAA,EAAAA,EAAAnG,EAAAJ,KAAA0G,IAGA,IAFAnH,EAAAgH,EAAAqB,EAAArB,EAAAI,EAAA3G,MAEAuG,GAAAA,EAAAlG,GAAAkG,EAAAA,EAAAgB,GAKAM,IAAA,SAAAvB,GACA,QAAAF,EAAApG,KAAAsG,MAGAL,GAAAR,EAAA9C,QAAAsE,EAAAG,UAAA,QACAU,IAAA,WACA,MAAAjC,GAAA7F,KAAAmG,OAGAc,GAEAc,IAAA,SAAA1B,EAAAC,EAAA0B,GACA,GACAN,GAAAlB,EADAD,EAAAH,EAAAC,EAAAC,EAoBA,OAjBAC,GACAA,EAAAqB,EAAAI,GAGA3B,EAAAc,GAAAZ,GACA5F,EAAA6F,EAAAN,EAAAI,GAAA,GACAK,EAAAL,EACAsB,EAAAI,EACAT,EAAAG,EAAArB,EAAAc,GACA/G,EAAA2D,OACA1D,GAAA,GAEAgG,EAAAK,KAAAL,EAAAK,GAAAH,GACAmB,IAAAA,EAAAtH,EAAAmG,GACAF,EAAAF,KAEA,MAAAK,IAAAH,EAAAI,GAAAD,GAAAD,IACAF,GAEAD,SAAAA,EACA6B,UAAA,SAAAhB,EAAAH,EAAAC,GAGAjB,EAAAmB,EAAAH,EAAA,SAAAoB,EAAAC,GACAnI,KAAAoI,GAAAF,EACAlI,KAAAqI,GAAAF,EACAnI,KAAAmH,GAAApD,QACA,WAKA,IAJA,GAAAsC,GAAArG,KACAmI,EAAA9B,EAAAgC,GACA9B,EAAAF,EAAAc,GAEAZ,GAAAA,EAAAlG,GAAAkG,EAAAA,EAAAgB,CAEA,OAAAlB,GAAA+B,KAAA/B,EAAAc,GAAAZ,EAAAA,EAAAA,EAAAnG,EAAAiG,EAAA+B,GAAA1B,IAMA,QAAAyB,EAAApC,EAAA,EAAAQ,EAAAI,GACA,UAAAwB,EAAApC,EAAA,EAAAQ,EAAAqB,GACA7B,EAAA,GAAAQ,EAAAI,EAAAJ,EAAAqB,KANAvB,EAAA+B,GAAArE,OACAgC,EAAA,KAMAgB,EAAA,UAAA,UAAAA,GAAA,GAGAf,EAAAc,Ob2FGwB,MAAM,EAAEC,iBAAiB,EAAEC,SAAS,GAAGC,aAAa,GAAGC,iBAAiB,GAAGjE,YAAY,GAAGkE,UAAU,GAAGC,iBAAiB,GAAGC,eAAe,GAAGC,UAAU,GAAGC,kBAAkB,GAAGC,iBAAiB,KAAKC,IAAI,SAAS/H,EAAQzB,EAAOD,GcrOpO,GAAA0J,GAAAhI,EAAA,cACAiI,EAAAjI,EAAA,yBACAzB,GAAAD,QAAA,SAAAsH,GACA,MAAA,YACA,GAAAoC,EAAAlJ,OAAA8G,EAAA,KAAArD,WAAAqD,EAAA,wBACA,OAAAqC,GAAAnJ,Ud0OGoJ,yBAAyB,EAAEC,aAAa,KAAKC,IAAI,SAASpI,EAAQzB,EAAOD,GehP5E,YACA,IAAAiG,GAAAvE,EAAA,OACApB,EAAAoB,EAAA,aACAqI,EAAArI,EAAA,aACAsI,EAAAtI,EAAA,WACAuI,EAAAvI,EAAA,YACAwI,EAAAxI,EAAA,WACAwE,EAAAxE,EAAA,mBACAkD,EAAAlD,EAAA,aACA0E,EAAA1E,EAAA,kBACA+C,EAAA/C,EAAA,gBACAyI,EAAAzI,EAAA,wBACA+E,EAAA/E,EAAA,iBAEAzB,GAAAD,QAAA,SAAAsH,EAAAD,EAAA+C,EAAAC,EAAA9C,EAAA+C,GACA,GAAAC,GAAAjK,EAAAgH,GACAG,EAAA8C,EACA/C,EAAAD,EAAA,MAAA,MACAiD,EAAA/C,GAAAA,EAAAG,UACArC,IAqCA,OApCAkB,IAAA,kBAAAgB,KAAA6C,GAAAE,EAAA1G,UAAAmG,EAAA,YACA,GAAAxC,IAAAgD,UAAAxC,WAOAR,EAAAJ,EAAA,SAAAqD,EAAAhD,GACAtB,EAAAsE,EAAAjD,EAAAH,EAAA,MACAoD,EAAAC,GAAA,GAAAJ,GACAhG,QAAAmD,GAAA9C,EAAA8C,EAAAH,EAAAmD,EAAAlD,GAAAkD,KAEAzE,EAAApC,KAAAtC,KAAA,kEAAAqJ,MAAA,KAAA,SAAAC,GACA,GAAAC,GAAA,OAAAD,GAAA,OAAAA,CACAA,KAAAL,MAAAF,GAAA,SAAAO,IAAAX,EAAAzC,EAAAG,UAAAiD,EAAA,SAAA5J,EAAA8J,GAEA,GADA3E,EAAA5F,KAAAiH,EAAAoD,IACAC,GAAAR,IAAA7F,EAAAxD,GAAA,MAAA,OAAA4J,EAAAtG,QAAA,CACA,IAAAQ,GAAAvE,KAAAmK,GAAAE,GAAA,IAAA5J,EAAA,EAAAA,EAAA8J,EACA,OAAAD,GAAAtK,KAAAuE,MAGA,QAAAyF,IAAAvE,EAAA9C,QAAAsE,EAAAG,UAAA,QACAU,IAAA,WACA,MAAA9H,MAAAmK,GAAAK,UApBAvD,EAAA4C,EAAAjD,eAAAC,EAAAC,EAAAC,EAAAC,GACAtB,EAAAuB,EAAAG,UAAAwC,GACAJ,EAAAiB,MAAA,GAuBAd,EAAA1C,EAAAH,GAEA/B,EAAA+B,GAAAG,EACAsC,EAAAA,EAAAmB,EAAAnB,EAAAoB,EAAApB,EAAAqB,EAAA7F,GAEA+E,GAAAD,EAAA5B,UAAAhB,EAAAH,EAAAC,GAEAE,KfmPGqB,MAAM,EAAEC,iBAAiB,EAAEG,iBAAiB,GAAGmC,YAAY,GAAGC,WAAW,GAAGrG,YAAY,GAAGsG,YAAY,GAAGpC,UAAU,GAAGzE,eAAe,GAAG4E,UAAU,GAAGC,kBAAkB,GAAGiC,uBAAuB,KAAKC,IAAI,SAAS/J,EAAQzB,EAAOD,GgB3StO,GAAA0L,GAAAzL,EAAAD,SAAA2L,QAAA,QACA,iBAAAC,OAAAA,IAAAF,QhB6SMG,IAAI,SAASnK,EAAQzB,EAAOD,GiB7SlC,GAAA8L,GAAApK,EAAA,gBACAzB,GAAAD,QAAA,SAAA+L,EAAAlF,EAAArF,GAEA,GADAsK,EAAAC,GACAxH,SAAAsC,EAAA,MAAAkF,EACA,QAAAvK,GACA,IAAA,GAAA,MAAA,UAAAP,GACA,MAAA8K,GAAAxK,KAAAsF,EAAA5F,GAEA,KAAA,GAAA,MAAA,UAAAA,EAAA8J,GACA,MAAAgB,GAAAxK,KAAAsF,EAAA5F,EAAA8J,GAEA,KAAA,GAAA,MAAA,UAAA9J,EAAA8J,EAAAiB,GACA,MAAAD,GAAAxK,KAAAsF,EAAA5F,EAAA8J,EAAAiB,IAGA,MAAA,YACA,MAAAD,GAAAE,MAAApF,EAAAvB,ejBkTG4G,gBAAgB,IAAIC,IAAI,SAASzK,EAAQzB,EAAOD,GkBlUnDC,EAAAD,QAAA,SAAAgE,GACA,GAAAO,QAAAP,EAAA,KAAAC,WAAA,yBAAAD,EACA,OAAAA,SlBsUMoI,IAAI,SAAS1K,EAAQzB,EAAOD,GmBxUlCC,EAAAD,SAAA0B,EAAA,YAAA,WACA,MAAA,IAAAiB,OAAAS,kBAAA,KAAAkF,IAAA,WAAA,MAAA,MAAArH,MnB4UGqK,WAAW,KAAKe,IAAI,SAAS3K,EAAQzB,EAAOD,GoB9U/C,GAAAyE,GAAA/C,EAAA,gBACA4K,EAAA5K,EAAA,aAAA4K,SAEAC,EAAA9H,EAAA6H,IAAA7H,EAAA6H,EAAAE,cACAvM,GAAAD,QAAA,SAAAgE,GACA,MAAAuI,GAAAD,EAAAE,cAAAxI,SpBiVGuH,YAAY,GAAG7G,eAAe,KAAK+H,IAAI,SAAS/K,EAAQzB,EAAOD,GqBtVlE,GAAAM,GAAAoB,EAAA,aACAgK,EAAAhK,EAAA,WACAyE,EAAAzE,EAAA,UACAwI,EAAAxI,EAAA,WACAgL,EAAA,YAEA3C,EAAA,SAAA4C,EAAAtI,EAAAuI,GACA,GASA9F,GAAA+F,EAAAC,EATAC,EAAAJ,EAAA5C,EAAAqB,EACA4B,EAAAL,EAAA5C,EAAAmB,EACA+B,EAAAN,EAAA5C,EAAAmD,EACAC,EAAAR,EAAA5C,EAAAqD,EACAC,EAAAV,EAAA5C,EAAAtE,EACA6H,EAAAX,EAAA5C,EAAAoB,EACAnL,EAAAgN,EAAAtB,EAAAA,EAAArH,KAAAqH,EAAArH,OACAkJ,EAAAvN,EAAA0M,GACAhC,EAAAsC,EAAA1M,EAAA2M,EAAA3M,EAAA+D,IAAA/D,EAAA+D,QAAAqI,EAEAM,KAAAJ,EAAAvI,EACA,KAAAyC,IAAA8F,GAEAC,GAAAE,GAAArC,GAAAnG,SAAAmG,EAAA5D,GACA+F,GAAA/F,IAAA9G,KAEA8M,EAAAD,EAAAnC,EAAA5D,GAAA8F,EAAA9F,GAEA9G,EAAA8G,GAAAkG,GAAA,kBAAAtC,GAAA5D,GAAA8F,EAAA9F,GAEAuG,GAAAR,EAAA1G,EAAA2G,EAAAxM,GAEAgN,GAAA5C,EAAA5D,IAAAgG,EAAA,SAAArF,GACA,GAAA2D,GAAA,SAAAnK,EAAA8J,EAAAiB,GACA,GAAAxL,eAAAiH,GAAA,CACA,OAAAnC,UAAA9D,QACA,IAAA,GAAA,MAAA,IAAAiG,EACA,KAAA,GAAA,MAAA,IAAAA,GAAAxG,EACA,KAAA,GAAA,MAAA,IAAAwG,GAAAxG,EAAA8J,GACA,MAAA,IAAAtD,GAAAxG,EAAA8J,EAAAiB,GACA,MAAAvE,GAAAwE,MAAAzL,KAAA8E,WAGA,OADA8F,GAAAsB,GAAAjF,EAAAiF,GACAtB,GAEA0B,GAAAK,GAAA,kBAAAL,GAAA3G,EAAAqH,SAAAjM,KAAAuL,GAAAA,EAEAK,KACAnN,EAAAyN,UAAAzN,EAAAyN,aAAA3G,GAAAgG,EAEAH,EAAA5C,EAAA2D,GAAAH,IAAAA,EAAAzG,IAAAoD,EAAAqD,EAAAzG,EAAAgG,KAKA/C,GAAAqB,EAAA,EACArB,EAAAmB,EAAA,EACAnB,EAAAmD,EAAA,EACAnD,EAAAqD,EAAA,EACArD,EAAAtE,EAAA,GACAsE,EAAAoB,EAAA,GACApB,EAAA4D,EAAA,GACA5D,EAAA2D,EAAA,IACAzN,EAAAD,QAAA+J,IrBwVG6D,UAAU,GAAG5E,SAAS,GAAGuC,YAAY,GAAGpC,UAAU,KAAK0E,IAAI,SAASnM,EAAQzB,EAAOD,GsBpZtFC,EAAAD,QAAA,SAAA8N,GACA,IACA,QAAAA,IACA,MAAApN,GACA,OAAA,StBwZMqN,IAAI,SAASrM,EAAQzB,EAAOD,GuB5ZlC,GAAAmG,GAAAzE,EAAA,UACAH,EAAAG,EAAA,gBACAsM,EAAAtM,EAAA,oBACAuM,EAAAvM,EAAA,gBACAwM,EAAAxM,EAAA,gBACAyM,EAAAzM,EAAA,6BACAzB,GAAAD,QAAA,SAAA0H,EAAA+C,EAAAsB,EAAAlF,EAAA/B,GACA,GAGAtD,GAAA+E,EAAA6H,EAHAC,EAAAvJ,EAAA,WAAA,MAAA4C,IAAAyG,EAAAzG,GACA3H,EAAAoG,EAAA4F,EAAAlF,EAAA4D,EAAA,EAAA,GACAzD,EAAA,CAEA,IAAA,kBAAAqH,GAAA,KAAApK,WAAAyD,EAAA,oBAEA,IAAAsG,EAAAK,GAAA,IAAA7M,EAAA0M,EAAAxG,EAAAlG,QAAAA,EAAAwF,EAAAA,IACAyD,EAAA1K,EAAAkO,EAAA1H,EAAAmB,EAAAV,IAAA,GAAAT,EAAA,IAAAxG,EAAA2H,EAAAV,QACA,KAAAoH,EAAAC,EAAA9M,KAAAmG,KAAAnB,EAAA6H,EAAAnG,QAAAqG,MACA/M,EAAA6M,EAAArO,EAAAwG,EAAAiC,MAAAiC,MvBgaG8D,eAAe,EAAEvF,SAAS,GAAGwF,mBAAmB,GAAGC,eAAe,GAAGC,eAAe,GAAGC,6BAA6B,KAAKC,IAAI,SAASlN,EAAQzB,EAAOD,GwB/axJ,GAAAM,GAAAL,EAAAD,QAAA,mBAAAK,SAAAA,OAAAwO,MAAAA,KACAxO,OAAA,mBAAAE,OAAAA,KAAAsO,MAAAA,KAAAtO,KAAAiN,SAAA,gBACA,iBAAAsB,OAAAA,IAAAxO,QxBkbMyO,IAAI,SAASrN,EAAQzB,EAAOD,GyBrblC,GAAAgP,MAAAA,cACA/O,GAAAD,QAAA,SAAAgE,EAAA8C,GACA,MAAAkI,GAAAzN,KAAAyC,EAAA8C,SzBwbMmI,IAAI,SAASvN,EAAQzB,EAAOD,G0B1blC,GAAAiG,GAAAvE,EAAA,OACAwN,EAAAxN,EAAA,mBACAzB,GAAAD,QAAA0B,EAAA,kBAAA,SAAAyN,EAAArI,EAAA0B,GACA,MAAAvC,GAAA9C,QAAAgM,EAAArI,EAAAoI,EAAA,EAAA1G,KACA,SAAA2G,EAAArI,EAAA0B,GAEA,MADA2G,GAAArI,GAAA0B,EACA2G,K1B6bGrG,MAAM,EAAEI,iBAAiB,GAAGkG,mBAAmB,KAAKC,IAAI,SAAS3N,EAAQzB,EAAOD,G2BncnFC,EAAAD,QAAA0B,EAAA,aAAA4K,UAAAA,SAAAgD,kB3BqcG/D,YAAY,KAAKgE,IAAI,SAAS7N,EAAQzB,EAAOD,G4BpchDC,EAAAD,QAAA,SAAA+L,EAAAyD,EAAA3I,GACA,GAAA4I,GAAAlL,SAAAsC,CACA,QAAA2I,EAAAhO,QACA,IAAA,GAAA,MAAAiO,GAAA1D,IACAA,EAAAxK,KAAAsF,EACA,KAAA,GAAA,MAAA4I,GAAA1D,EAAAyD,EAAA,IACAzD,EAAAxK,KAAAsF,EAAA2I,EAAA,GACA,KAAA,GAAA,MAAAC,GAAA1D,EAAAyD,EAAA,GAAAA,EAAA,IACAzD,EAAAxK,KAAAsF,EAAA2I,EAAA,GAAAA,EAAA,GACA,KAAA,GAAA,MAAAC,GAAA1D,EAAAyD,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAzD,EAAAxK,KAAAsF,EAAA2I,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,KAAA,GAAA,MAAAC,GAAA1D,EAAAyD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAzD,EAAAxK,KAAAsF,EAAA2I,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MAAAzD,GAAAE,MAAApF,EAAA2I,S5BwcME,IAAI,SAAShO,EAAQzB,EAAOD,G6BrdlC,GAAAmF,GAAAzD,EAAA,SACAzB,GAAAD,QAAA2C,OAAA,KAAAK,qBAAA,GAAAL,OAAA,SAAAqB,GACA,MAAA,UAAAmB,EAAAnB,GAAAA,EAAA4G,MAAA,IAAAjI,OAAAqB,M7BydG2B,SAAS,KAAKgK,IAAI,SAASjO,EAAQzB,EAAOD,G8B3d7C,GAAA4P,GAAAlO,EAAA,gBACAoD,EAAApD,EAAA,UAAA,YACAmO,EAAAC,MAAAlI,SAEA3H,GAAAD,QAAA,SAAAgE,GACA,MAAAO,UAAAP,IAAA4L,EAAAE,QAAA9L,GAAA6L,EAAA/K,KAAAd,M9B+dG+L,eAAe,GAAGnK,SAAS,KAAKoK,IAAI,SAAStO,EAAQzB,EAAOD,G+Bre/DC,EAAAD,QAAA,SAAAgE,GACA,MAAA,gBAAAA,GAAA,OAAAA,EAAA,kBAAAA,S/BweMiM,IAAI,SAASvO,EAAQzB,EAAOD,GgCxelC,GAAAiO,GAAAvM,EAAA,eACAzB,GAAAD,QAAA,SAAAoO,EAAArC,EAAAvD,EAAAiC,GACA,IACA,MAAAA,GAAAsB,EAAAkC,EAAAzF,GAAA,GAAAA,EAAA,IAAAuD,EAAAvD,GAEA,MAAA9H,GACA,GAAAwP,GAAA9B,EAAA,SAEA,MADA7J,UAAA2L,GAAAjC,EAAAiC,EAAA3O,KAAA6M,IACA1N,MhC6eG6N,eAAe,IAAI4B,IAAI,SAASzO,EAAQzB,EAAOD,GiCtflD,YACA,IAAAiG,GAAAvE,EAAA,OACA0O,EAAA1O,EAAA,oBACAyI,EAAAzI,EAAA,wBACA2O,IAGA3O,GAAA,WAAA2O,EAAA3O,EAAA,UAAA,YAAA,WAAA,MAAAlB,QAEAP,EAAAD,QAAA,SAAAoE,EAAAkD,EAAAW,GACA7D,EAAAwD,UAAA3B,EAAArD,OAAAyN,GAAApI,KAAAmI,EAAA,EAAAnI,KACAkC,EAAA/F,EAAAkD,EAAA,gBjCyfGwB,MAAM,EAAEK,UAAU,GAAGiG,mBAAmB,GAAG5D,uBAAuB,GAAG5F,SAAS,KAAK0K,IAAI,SAAS5O,EAAQzB,EAAOD,GkCpgBlH,YACA,IAAAuQ,GAAA7O,EAAA,cACAqI,EAAArI,EAAA,aACA8O,EAAA9O,EAAA,eACAwI,EAAAxI,EAAA,WACA2G,EAAA3G,EAAA,UACAkO,EAAAlO,EAAA,gBACA+O,EAAA/O,EAAA,kBACAyI,EAAAzI,EAAA,wBACAmB,EAAAnB,EAAA,OAAAmB,SACAiC,EAAApD,EAAA,UAAA,YACAgP,OAAAlN,MAAA,WAAAA,QACAmN,EAAA,aACAC,EAAA,OACAC,EAAA,SAEAC,EAAA,WAAA,MAAAtQ,MAEAP,GAAAD,QAAA,SAAAuK,EAAAjD,EAAAlD,EAAA6D,EAAA8I,EAAAC,EAAAC,GACAR,EAAArM,EAAAkD,EAAAW,EACA,IAeAmC,GAAAtD,EAAAuJ,EAfAa,EAAA,SAAAvI,GACA,IAAA+H,GAAA/H,IAAA6B,GAAA,MAAAA,GAAA7B,EACA,QAAAA,GACA,IAAAiI,GAAA,MAAA,YAAA,MAAA,IAAAxM,GAAA5D,KAAAmI,GACA,KAAAkI,GAAA,MAAA,YAAA,MAAA,IAAAzM,GAAA5D,KAAAmI,IACA,MAAA,YAAA,MAAA,IAAAvE,GAAA5D,KAAAmI,KAEAvD,EAAAkC,EAAA,YACA6J,EAAAJ,GAAAF,EACAO,GAAA,EACA5G,EAAAD,EAAA3C,UACAyJ,EAAA7G,EAAA1F,IAAA0F,EAAAmG,IAAAI,GAAAvG,EAAAuG,GACAO,EAAAD,GAAAH,EAAAH,GACAQ,EAAAR,EAAAI,EAAAD,EAAA,WAAAI,EAAA/M,OACAiN,EAAA,SAAAlK,EAAAkD,EAAAC,SAAA4G,EAAAA,CAwBA,IArBAG,IACAnB,EAAAxN,EAAA2O,EAAAjQ,KAAA,GAAAgJ,KACA8F,IAAA1N,OAAAiF,YAEAuC,EAAAkG,EAAAjL,GAAA,GAEAmL,GAAAlI,EAAAgI,EAAAvL,IAAAoF,EAAAmG,EAAAvL,EAAAgM,KAIAK,GAAAE,GAAAA,EAAAhN,OAAAwM,IACAO,GAAA,EACAE,EAAA,WAAA,MAAAD,GAAA9P,KAAAf,QAGA+P,IAAAU,IAAAP,IAAAU,GAAA5G,EAAA1F,IACAoF,EAAAM,EAAA1F,EAAAwM,GAGA1B,EAAAtI,GAAAgK,EACA1B,EAAAxK,GAAA0L,EACAC,EAMA,GALA3G,GACAqH,OAAAN,EAAAG,EAAAJ,EAAAL,GACArN,KAAAwN,EAAAM,EAAAJ,EAAAN,GACAnG,QAAA8G,GAEAN,EAAA,IAAAnK,IAAAsD,GACAtD,IAAA0D,IAAAgG,EAAAhG,EAAA1D,EAAAsD,EAAAtD,QACAiD,GAAAA,EAAAqD,EAAArD,EAAAqB,GAAAsF,GAAAU,GAAA9J,EAAA8C,EAEA,OAAAA,MlCugBGtB,MAAM,EAAEuC,YAAY,GAAGqG,SAAS,GAAGvI,UAAU,GAAGwI,iBAAiB,GAAG5B,eAAe,GAAG6B,aAAa,GAAGC,cAAc,GAAGrG,uBAAuB,GAAG5F,SAAS,KAAKkM,IAAI,SAASpQ,EAAQzB,EAAOD,GmC3kB9L,GAAA8E,GAAApD,EAAA,UAAA,YACAqQ,GAAA,CAEA,KACA,GAAAC,IAAA,GAAAlN,IACAkN,GAAA,UAAA,WAAAD,GAAA,GACAjC,MAAAnG,KAAAqI,EAAA,WAAA,KAAA,KACA,MAAAtR,IAEAT,EAAAD,QAAA,SAAA8N,EAAAmE,GACA,IAAAA,IAAAF,EAAA,OAAA,CACA,IAAAG,IAAA,CACA,KACA,GAAAC,IAAA,GACAtN,EAAAsN,EAAArN,IACAD,GAAAoD,KAAA,WAAAiK,GAAA,GACAC,EAAArN,GAAA,WAAA,MAAAD,IACAiJ,EAAAqE,GACA,MAAAzR,IACA,MAAAwR,MnC8kBGtM,SAAS,KAAKwM,IAAI,SAAS1Q,EAAQzB,EAAOD,GoCjmB7CC,EAAAD,QAAA,SAAAsO,EAAA9F,GACA,OAAAA,MAAAA,EAAA8F,OAAAA,SpComBM+D,IAAI,SAAS3Q,EAAQzB,EAAOD,GqCrmBlCC,EAAAD,gBrCumBMsS,IAAI,SAAS5Q,EAAQzB,EAAOD,GsCvmBlCC,EAAAD,SAAA,OtCymBMuS,IAAI,SAAS7Q,EAAQzB,EAAOD,GuCzmBlC,GAAAwS,GAAA9Q,EAAA,UAAA,QACA+C,EAAA/C,EAAA,gBACA2G,EAAA3G,EAAA,UACAyB,EAAAzB,EAAA,OAAAyB,QACAsP,EAAA,EACAC,EAAA/P,OAAA+P,cAAA,WACA,OAAA,GAEAC,GAAAjR,EAAA,YAAA,WACA,MAAAgR,GAAA/P,OAAAiQ,yBAEAC,EAAA,SAAA7O,GACAb,EAAAa,EAAAwO,GAAAhK,OACArH,EAAA,OAAAsR,EACAK,SAGApM,EAAA,SAAA1C,EAAApB,GAEA,IAAA6B,EAAAT,GAAA,MAAA,gBAAAA,GAAAA,GAAA,gBAAAA,GAAA,IAAA,KAAAA,CACA,KAAAqE,EAAArE,EAAAwO,GAAA,CAEA,IAAAE,EAAA1O,GAAA,MAAA,GAEA,KAAApB,EAAA,MAAA,GAEAiQ,GAAA7O,GAEA,MAAAA,GAAAwO,GAAArR,GAEA4R,EAAA,SAAA/O,EAAApB,GACA,IAAAyF,EAAArE,EAAAwO,GAAA,CAEA,IAAAE,EAAA1O,GAAA,OAAA,CAEA,KAAApB,EAAA,OAAA,CAEAiQ,GAAA7O,GAEA,MAAAA,GAAAwO,GAAAM,GAGAE,EAAA,SAAAhP,GAEA,MADA2O,IAAA3I,EAAAiB,MAAAyH,EAAA1O,KAAAqE,EAAArE,EAAAwO,IAAAK,EAAA7O,GACAA,GAEAgG,EAAA/J,EAAAD,SACA6K,IAAA2H,EACAvH,MAAA,EACAvE,QAAAA,EACAqM,QAAAA,EACAC,SAAAA,KvC4mBGlK,MAAM,EAAEwC,WAAW,GAAGoG,SAAS,GAAGhN,eAAe,GAAGuO,SAAS,KAAKC,IAAI,SAASxR,EAAQzB,EAAOD,GwC/pBjG,GAMAmT,GAAAC,EAAAC,EANA/S,EAAAoB,EAAA,aACA4R,EAAA5R,EAAA,WAAA6R,IACAC,EAAAlT,EAAAmT,kBAAAnT,EAAAoT,uBACAC,EAAArT,EAAAqT,QACAxR,EAAA7B,EAAA6B,QACAyR,EAAA,WAAAlS,EAAA,UAAAiS,GAGAE,EAAA,WACA,GAAAC,GAAAC,EAAAhI,CAKA,KAJA6H,IAAAE,EAAAH,EAAAI,UACAJ,EAAAI,OAAA,KACAD,EAAAE,QAEAb,GACAY,EAAAZ,EAAAY,OACAhI,EAAAoH,EAAApH,GACAgI,GAAAA,EAAAE,QACAlI,IACAgI,GAAAA,EAAAC,OACAb,EAAAA,EAAAlL,IACAmL,GAAA7O,OACAuP,GAAAA,EAAAG,QAIA,IAAAL,EACAP,EAAA,WACAM,EAAAO,SAAAL,QAGA,IAAAL,EAAA,CACA,GAAAW,GAAA,EACAC,EAAA9H,SAAA+H,eAAA,GACA,IAAAb,GAAAK,GAAAS,QAAAF,GAAAG,eAAA,IACAlB,EAAA,WACAe,EAAAtM,KAAAqM,GAAAA,OAIAd,GADAlR,GAAAA,EAAAqS,QACA,WACArS,EAAAqS,UAAAC,KAAAZ,IASA,WAEAP,EAAA/R,KAAAjB,EAAAuT,GAIA5T,GAAAD,QAAA,SAAA+L,GACA,GAAA2I,IAAA3I,GAAAA,EAAA9D,KAAA1D,OAAAwP,OAAAH,GAAAD,EAAAI,OACAX,KAAAA,EAAAnL,KAAAyM,GACAvB,IACAA,EAAAuB,EACArB,KACAD,EAAAsB,KxCkqBG/O,SAAS,GAAG4F,YAAY,GAAGoJ,UAAU,KAAKC,IAAI,SAASlT,EAAQzB,EAAOD,GyChuBzEC,EAAAD,QAAA,SAAA6U,EAAArM,GACA,OACAsM,aAAA,EAAAD,GACAE,eAAA,EAAAF,GACAG,WAAA,EAAAH,GACArM,MAAAA,SzCouBMyM,IAAI,SAASvT,EAAQzB,EAAOD,G0CzuBlC,GAAAkK,GAAAxI,EAAA,UACAzB,GAAAD,QAAA,SAAA0K,EAAAwK,EAAAhD,GACA,IAAA,GAAApL,KAAAoO,GACAhD,GAAAxH,EAAA5D,GAAA4D,EAAA5D,GAAAoO,EAAApO,GACAoD,EAAAQ,EAAA5D,EAAAoO,EAAApO,GACA,OAAA4D,M1C4uBGvB,UAAU,KAAKgM,IAAI,SAASzT,EAAQzB,EAAOD,G2CjvB9CC,EAAAD,QAAA0B,EAAA,a3CmvBGyH,UAAU,KAAKiM,IAAI,SAAS1T,EAAQzB,EAAOD,G4CjvB9C,GAAAiD,GAAAvB,EAAA,OAAAuB,QACAwB,EAAA/C,EAAA,gBACAuM,EAAAvM,EAAA,gBACA2T,EAAA,SAAA9P,EAAAiF,GAEA,GADAyD,EAAA1I,IACAd,EAAA+F,IAAA,OAAAA,EAAA,KAAAvG,WAAAuG,EAAA,6BAEAvK,GAAAD,SACAuT,IAAA5Q,OAAA2S,iBAAA,gBACA,SAAAC,EAAAC,EAAAjC,GACA,IACAA,EAAA7R,EAAA,UAAA8L,SAAAjM,KAAA0B,EAAAN,OAAAiF,UAAA,aAAA2L,IAAA,GACAA,EAAAgC,MACAC,IAAAD,YAAAzF,QACA,MAAApP,GAAA8U,GAAA,EACA,MAAA,UAAAjQ,EAAAiF,GAIA,MAHA6K,GAAA9P,EAAAiF,GACAgL,EAAAjQ,EAAAkQ,UAAAjL,EACA+I,EAAAhO,EAAAiF,GACAjF,QAEA,GAAAhB,QACA8Q,MAAAA,K5CsvBGvM,MAAM,EAAEyF,eAAe,EAAEvF,SAAS,GAAGtE,eAAe,KAAKgR,IAAI,SAAShU,EAAQzB,EAAOD,G6C9wBxF,YACA,IAAA0L,GAAAhK,EAAA,WACAuE,EAAAvE,EAAA,OACA+E,EAAA/E,EAAA,kBACAiU,EAAAjU,EAAA,UAAA,UAEAzB,GAAAD,QAAA,SAAA6K,GACA,GAAApD,GAAAiE,EAAAb,EACApE,IAAAgB,IAAAA,EAAAkO,IAAA1P,EAAA9C,QAAAsE,EAAAkO,GACAZ,cAAA,EACAzM,IAAA,WAAA,MAAA9H,Y7CkxBGsI,MAAM,EAAE8E,UAAU,GAAG1E,iBAAiB,GAAGtD,SAAS,KAAKgQ,IAAI,SAASlU,EAAQzB,EAAOD,G8C5xBtF,GAAAuI,GAAA7G,EAAA,OAAAyB,QACAkF,EAAA3G,EAAA,UACA0D,EAAA1D,EAAA,UAAA,cAEAzB,GAAAD,QAAA,SAAAgE,EAAA6R,EAAAC,GACA9R,IAAAqE,EAAArE,EAAA8R,EAAA9R,EAAAA,EAAA4D,UAAAxC,IAAAmD,EAAAvE,EAAAoB,GAAA2P,cAAA,EAAAvM,MAAAqN,O9C+xBG/M,MAAM,EAAE4I,SAAS,GAAG9L,SAAS,KAAKmQ,IAAI,SAASrU,EAAQzB,EAAOD,G+CpyBjE,GAAAM,GAAAoB,EAAA,aACAsU,EAAA,qBACAC,EAAA3V,EAAA0V,KAAA1V,EAAA0V,MACA/V,GAAAD,QAAA,SAAA8G,GACA,MAAAmP,GAAAnP,KAAAmP,EAAAnP,U/CuyBGyE,YAAY,KAAK2K,IAAI,SAASxU,EAAQzB,EAAOD,GgD1yBhD,GAAAiO,GAAAvM,EAAA,gBACAoK,EAAApK,EAAA,iBACAiU,EAAAjU,EAAA,UAAA,UACAzB,GAAAD,QAAA,SAAAuF,EAAA4Q,GACA,GAAAjJ,GAAAzF,EAAAwG,EAAA1I,GAAA6Q,WACA,OAAA7R,UAAAkD,GAAAlD,SAAA2I,EAAAe,EAAAxG,GAAAkO,IAAAQ,EAAArK,EAAAoB,MhD8yBGhB,gBAAgB,EAAEqC,eAAe,EAAE3I,SAAS,KAAKyQ,IAAI,SAAS3U,EAAQzB,EAAOD,GiDpzBhF,GAAAsW,GAAA5U,EAAA,iBACA2E,EAAA3E,EAAA,aAGAzB,GAAAD,QAAA,SAAAuW,GACA,MAAA,UAAA1P,EAAA2P,GACA,GAGAvV,GAAA8J,EAHAjK,EAAA2V,OAAApQ,EAAAQ,IACA1F,EAAAmV,EAAAE,GACAlV,EAAAR,EAAAU,MAEA,OAAA,GAAAL,GAAAA,GAAAG,EAAAiV,EAAA,GAAAhS,QACAtD,EAAAH,EAAA4V,WAAAvV,GACA,MAAAF,GAAAA,EAAA,OAAAE,EAAA,IAAAG,IAAAyJ,EAAAjK,EAAA4V,WAAAvV,EAAA,IAAA,OAAA4J,EAAA,MACAwL,EAAAzV,EAAA6V,OAAAxV,GAAAF,EACAsV,EAAAzV,EAAAiF,MAAA5E,EAAAA,EAAA,IAAAF,EAAA,OAAA,KAAA8J,EAAA,OAAA,WjDwzBG9B,aAAa,GAAG2N,gBAAgB,KAAKC,IAAI,SAASnV,EAAQzB,EAAOD,GkDt0BpE,GAYA8W,GAAAC,EAAAC,EAZA7Q,EAAAzE,EAAA,UACAuV,EAAAvV,EAAA,aACAwV,EAAAxV,EAAA,WACAyV,EAAAzV,EAAA,iBACApB,EAAAoB,EAAA,aACAiS,EAAArT,EAAAqT,QACAyD,EAAA9W,EAAA+W,aACAC,EAAAhX,EAAAiX,eACAC,EAAAlX,EAAAkX,eACAC,EAAA,EACAC,KACAC,EAAA,qBAEAC,EAAA,WACA,GAAAnF,IAAAjS,IACA,IAAAkX,EAAA1I,eAAAyD,GAAA,CACA,GAAA1G,GAAA2L,EAAAjF,SACAiF,GAAAjF,GACA1G,MAGA8L,EAAA,SAAAC,GACAF,EAAArW,KAAAuW,EAAAhQ,MAGAsP,IAAAE,IACAF,EAAA,SAAArL,GAEA,IADA,GAAAyD,MAAArO,EAAA,EACAmE,UAAA9D,OAAAL,GAAAqO,EAAAxK,KAAAM,UAAAnE,KAKA,OAJAuW,KAAAD,GAAA,WACAR,EAAA,kBAAAlL,GAAAA,EAAAyB,SAAAzB,GAAAyD,IAEAsH,EAAAW,GACAA,GAEAH,EAAA,SAAA7E,SACAiF,GAAAjF,IAGA,WAAA/Q,EAAA,UAAAiS,GACAmD,EAAA,SAAArE,GACAkB,EAAAO,SAAA/N,EAAAyR,EAAAnF,EAAA,KAGA+E,GACAT,EAAA,GAAAS,GACAR,EAAAD,EAAAgB,MACAhB,EAAAiB,MAAAC,UAAAJ,EACAf,EAAA3Q,EAAA6Q,EAAAkB,YAAAlB,EAAA,IAGA1W,EAAA6X,kBAAA,kBAAAD,eAAA5X,EAAA8X,eACAtB,EAAA,SAAArE,GACAnS,EAAA4X,YAAAzF,EAAA,GAAA,MAEAnS,EAAA6X,iBAAA,UAAAN,GAAA,IAGAf,EADAa,IAAAR,GAAA,UACA,SAAA1E,GACAyE,EAAAmB,YAAAlB,EAAA,WAAAQ,GAAA,WACAT,EAAAoB,YAAA9X,MACAoX,EAAArW,KAAAkR,KAKA,SAAAA,GACA8F,WAAApS,EAAAyR,EAAAnF,EAAA,GAAA,KAIAxS,EAAAD,SACAuT,IAAA6D,EACAvP,MAAAyP,KlDy0BG3R,SAAS,GAAGqD,SAAS,GAAGwP,gBAAgB,GAAGjN,YAAY,GAAGkN,UAAU,GAAGC,YAAY,KAAKC,IAAI,SAASjX,EAAQzB,EAAOD,GmDj5BvH,GAAA4Y,GAAA/J,KAAA+J,KACAC,EAAAhK,KAAAgK,KACA5Y,GAAAD,QAAA,SAAAgE,GACA,MAAA8U,OAAA9U,GAAAA,GAAA,GAAAA,EAAA,EAAA6U,EAAAD,GAAA5U,SnDq5BM+U,IAAI,SAASrX,EAAQzB,EAAOD,GoDx5BlC,GAAAgZ,GAAAtX,EAAA,cACA2E,EAAA3E,EAAA,aACAzB,GAAAD,QAAA,SAAAgE,GACA,MAAAgV,GAAA3S,EAAArC,OpD45BGiF,aAAa,GAAGgQ,aAAa,KAAKC,IAAI,SAASxX,EAAQzB,EAAOD,GqD/5BjE,GAAAsW,GAAA5U,EAAA,iBACAyX,EAAAtK,KAAAsK,GACAlZ,GAAAD,QAAA,SAAAgE,GACA,MAAAA,GAAA,EAAAmV,EAAA7C,EAAAtS,GAAA,kBAAA,KrDm6BG4S,gBAAgB,KAAKwC,IAAI,SAAS1X,EAAQzB,EAAOD,GsDv6BpD,GAAAyS,GAAA,EACA4G,EAAAxK,KAAAyK,QACArZ,GAAAD,QAAA,SAAA8G,GACA,MAAA,UAAAyS,OAAAhV,SAAAuC,EAAA,GAAAA,EAAA,QAAA2L,EAAA4G,GAAAvT,SAAA,WtD06BM0T,IAAI,SAAS9X,EAAQzB,EAAOD,GuD76BlC,GAAAiW,GAAAvU,EAAA,aAAA,OACA+X,EAAA/X,EAAA,UACAgY,EAAAhY,EAAA,aAAAgY,OACAC,EAAA,kBAAAD,EACAzZ,GAAAD,QAAA,SAAAqE,GACA,MAAA4R,GAAA5R,KAAA4R,EAAA5R,GACAsV,GAAAD,EAAArV,KAAAsV,EAAAD,EAAAD,GAAA,UAAApV,OvDg7BGkH,YAAY,GAAGqO,YAAY,GAAG3G,SAAS,KAAK4G,IAAI,SAASnY,EAAQzB,EAAOD,GwDt7B3E,GAAA0J,GAAAhI,EAAA,cACAoD,EAAApD,EAAA,UAAA,YACAkO,EAAAlO,EAAA,eACAzB,GAAAD,QAAA0B,EAAA,WAAAoY,kBAAA,SAAA9V,GACA,MAAAO,SAAAP,EAAAA,EAAAc,IACAd,EAAA,eACA4L,EAAAlG,EAAA1F,IAFA,UxD27BG6F,aAAa,GAAG+D,UAAU,GAAGmC,eAAe,GAAGnK,SAAS,KAAKmU,IAAI,SAASrY,EAAQzB,EAAOD,GyD/7B5F,YACA,IAAAga,GAAAtY,EAAA,yBACA6E,EAAA7E,EAAA,gBACAkO,EAAAlO,EAAA,gBACAuY,EAAAvY,EAAA,gBAMAzB,GAAAD,QAAA0B,EAAA,kBAAAoO,MAAA,QAAA,SAAApH,EAAAC,GACAnI,KAAAoI,GAAAqR,EAAAvR,GACAlI,KAAAyG,GAAA,EACAzG,KAAAqI,GAAAF,GAEA,WACA,GAAApD,GAAA/E,KAAAoI,GACAD,EAAAnI,KAAAqI,GACA7B,EAAAxG,KAAAyG,IACA,QAAA1B,GAAAyB,GAAAzB,EAAA/D,QACAhB,KAAAoI,GAAArE,OACAgC,EAAA,IAEA,QAAAoC,EAAApC,EAAA,EAAAS,GACA,UAAA2B,EAAApC,EAAA,EAAAhB,EAAAyB,IACAT,EAAA,GAAAS,EAAAzB,EAAAyB,MACA,UAGA4I,EAAAsK,UAAAtK,EAAAE,MAEAkK,EAAA,QACAA,EAAA,UACAA,EAAA,azDi8BGG,wBAAwB,EAAE/Q,iBAAiB,GAAGC,eAAe,GAAG0G,eAAe,GAAGqK,gBAAgB,KAAKC,IAAI,SAAS3Y,EAAQzB,EAAOD,G0Dl+BtI,YACA,IAAAsa,GAAA5Y,EAAA,uBAGAzB,GAAAD,QAAA0B,EAAA,iBAAA,MAAA,SAAA4G,GACA,MAAA,YAAA,MAAAA,GAAA9H,KAAA8E,UAAA9D,OAAA,EAAA8D,UAAA,GAAAf,WAGA+D,IAAA,SAAAxB,GACA,GAAAC,GAAAuT,EAAA1T,SAAApG,KAAAsG,EACA,OAAAC,IAAAA,EAAAqB,GAGAmL,IAAA,SAAAzM,EAAA0B,GACA,MAAA8R,GAAA/R,IAAA/H,KAAA,IAAAsG,EAAA,EAAAA,EAAA0B,KAEA8R,GAAA,K1Do+BGC,gBAAgB,GAAGC,uBAAuB,KAAKC,IAAI,SAAS/Y,EAAQzB,EAAOD,SAExE0a,IAAI,SAAShZ,EAAQzB,EAAOD,G2Dt/BlC,YACA,IAsBA2a,GAAAC,EAAAC,EAtBA5U,EAAAvE,EAAA,OACA6O,EAAA7O,EAAA,cACApB,EAAAoB,EAAA,aACAyE,EAAAzE,EAAA,UACAgI,EAAAhI,EAAA,cACAqI,EAAArI,EAAA,aACA+C,EAAA/C,EAAA,gBAEAoK,GADApK,EAAA,gBACAA,EAAA,kBACA0E,EAAA1E,EAAA,kBACAkD,EAAAlD,EAAA,aACAiI,EAAAjI,EAAA,0BACAoZ,EAAApZ,EAAA,gBAAA6R,IACAwH,EAAArZ,EAAA,0BACAgT,EAAAhT,EAAA,WAAA6R,IACAyH,EAAAtZ,EAAA,gBACAuZ,EAAA,UACAhX,EAAA3D,EAAA2D,UACA0P,EAAArT,EAAAqT,QACAuH,EAAA5a,EAAA2a,GACArH,EAAA,WAAAlK,EAAAiK,GACAwH,EAAA,aAGAC,EAAA,SAAAC,GACA,GAAAC,GAAA/F,EAAA,GAAA2F,GAAAC,EAKA,OAJAE,KAAA9F,EAAAa,YAAA,SAAAtI,GACAA,EAAAqN,EAAAA,MAEAG,EAAAJ,EAAA1G,QAAAe,IAAA,SAAA4F,GACAG,IAAA/F,GAGAgG,EAAA,WACA,GAAAC,IAAA,EACAC,EAAA,SAAAC,GACA,GAAAnb,GAAA,GAAA2a,GAAAQ,EAEA,OADAZ,GAAAva,EAAAkb,EAAA7T,WACArH,EAEA,KASA,GARAib,EAAAN,GAAAA,EAAA1G,SAAA4G,IACAN,EAAAW,EAAAP,GACAO,EAAA7T,UAAA3B,EAAArD,OAAAsY,EAAAtT,WAAAwO,aAAA5N,MAAAiT,KAEAA,EAAAjH,QAAA,GAAAC,KAAA0G,YAAAM,KACAD,GAAA,GAGAA,GAAA9Z,EAAA,kBAAA,CACA,GAAAia,IAAA,CACAT,GAAA1G,QAAAvO,EAAA9C,WAAA,QACAmF,IAAA,WAAAqT,GAAA,MAEAH,EAAAG,GAEA,MAAAjb,GAAA8a,GAAA,EACA,QAAAA,KAIAI,EAAA,SAAA3a,EAAA8J,GAEA,MAAA9J,KAAA8J,GAAA9J,IAAAia,GAAAnQ,IAAA8P,GAEAgB,EAAA,SAAA7X,GACA,GAAAyQ,EACA,OAAAhQ,GAAAT,IAAA,mBAAAyQ,EAAAzQ,EAAAyQ,MAAAA,GAAA,GAEAqH,EAAA,SAAArU,GACA,MAAAmU,GAAAV,EAAAzT,GACA,GAAAsU,GAAAtU,GACA,GAAAmT,GAAAnT,IAEAsU,EAAAnB,EAAA,SAAAnT,GACA,GAAA+M,GAAAwH,CACAxb,MAAA8a,QAAA,GAAA7T,GAAA,SAAAwU,EAAAC,GACA,GAAA3X,SAAAiQ,GAAAjQ,SAAAyX,EAAA,KAAA/X,GAAA,0BACAuQ,GAAAyH,EACAD,EAAAE,IAEA1b,KAAAgU,QAAA1I,EAAA0I,GACAhU,KAAAwb,OAAAlQ,EAAAkQ,IAEAG,EAAA,SAAArO,GACA,IACAA,IACA,MAAApN,GACA,OAAA0b,MAAA1b,KAGA2S,EAAA,SAAAiI,EAAAe,GACA,IAAAf,EAAAgB,GAAA,CACAhB,EAAAgB,IAAA,CACA,IAAAC,GAAAjB,EAAA3Q,EACAqQ,GAAA,WA0BA,IAzBA,GAAAxS,GAAA8S,EAAAkB,GACAC,EAAA,GAAAnB,EAAAoB,GACAvb,EAAA,EACAyW,EAAA,SAAA+E,GACA,GAGA5X,GAAA0P,EAHAmI,EAAAH,EAAAE,EAAAF,GAAAE,EAAAE,KACArI,EAAAmI,EAAAnI,QACAwH,EAAAW,EAAAX,MAEA,KACAY,GACAH,IACA,GAAAnB,EAAAwB,IAAAC,EAAAzB,GACAA,EAAAwB,GAAA,GAEA/X,EAAA6X,KAAA,EAAApU,EAAAoU,EAAApU,GACAzD,IAAA4X,EAAArB,QACAU,EAAA/X,EAAA,yBACAwQ,EAAAoH,EAAA9W,IACA0P,EAAAlT,KAAAwD,EAAAyP,EAAAwH,GACAxH,EAAAzP,IACAiX,EAAAxT,GACA,MAAA9H,GACAsb,EAAAtb,KAGA6b,EAAA/a,OAAAL,GAAAyW,EAAA2E,EAAApb,KACAma,GAAA3Q,MACA2Q,EAAAgB,IAAA,EACAD,IAAAf,EAAAwB,IAAAE,EAAA1B,OAGA0B,EAAA,SAAA1B,GACA5G,EAAAnT,KAAAjB,EAAA,WACA,GAAA2c,EAAA3B,GAAA,CACA,GACAsB,GAAAM,EADA1U,EAAA8S,EAAAkB,EAEA5I,GACAD,EAAAwJ,KAAA,qBAAA3U,EAAA8S,IACAsB,EAAAtc,EAAA8c,sBACAR,GAAAtB,QAAAA,EAAA+B,OAAA7U,KACA0U,EAAA5c,EAAA4c,UAAAA,EAAAd,OACAc,EAAAd,MAAA,8BAAA5T,GACA8S,EAAAwB,GAAA,EACAxB,EAAAgC,GAAA/Y,UAGA0Y,EAAA,SAAA3B,GACA,GAEAqB,GAFAJ,EAAAjB,EAAAgC,IAAAhC,EAAA3Q,GACAxJ,EAAA,CAEA,IAAA,GAAAma,EAAAwB,GAAA,OAAA,CACA,MAAAP,EAAA/a,OAAAL,GAEA,GADAwb,EAAAJ,EAAApb,KACAwb,EAAAE,OAAAI,EAAAN,EAAArB,SAAA,OAAA,CACA,QAAA,GAEAyB,EAAA,SAAAzB,GACA5G,EAAAnT,KAAAjB,EAAA,WACA,GAAAsc,EACAhJ,GACAD,EAAAwJ,KAAA,mBAAA7B,IACAsB,EAAAtc,EAAAid,qBACAX,GAAAtB,QAAAA,EAAA+B,OAAA/B,EAAAkB,QAIAgB,EAAA,SAAAhV,GACA,GAAA8S,GAAA9a,IACA8a,GAAAmC,KACAnC,EAAAmC,IAAA,EACAnC,EAAAA,EAAAoC,IAAApC,EACAA,EAAAkB,GAAAhU,EACA8S,EAAAoB,GAAA,EACApB,EAAAgC,KAAAhC,EAAAgC,GAAAhC,EAAA3Q,GAAA5E,SACAsN,EAAAiI,GAAA,KAEAqC,EAAA,SAAAnV,GACA,GACAiM,GADA6G,EAAA9a,IAEA,KAAA8a,EAAAmC,GAAA,CACAnC,EAAAmC,IAAA,EACAnC,EAAAA,EAAAoC,IAAApC,CACA,KACA,GAAAA,IAAA9S,EAAA,KAAAvE,GAAA,qCACAwQ,EAAAoH,EAAArT,IACAwS,EAAA,WACA,GAAA3T,IAAAqW,GAAApC,EAAAmC,IAAA,EACA,KACAhJ,EAAAlT,KAAAiH,EAAArC,EAAAwX,EAAAtW,EAAA,GAAAlB,EAAAqX,EAAAnW,EAAA,IACA,MAAA3G,GACA8c,EAAAjc,KAAA8F,EAAA3G,OAIA4a,EAAAkB,GAAAhU,EACA8S,EAAAoB,GAAA,EACArJ,EAAAiI,GAAA,IAEA,MAAA5a,GACA8c,EAAAjc,MAAAmc,GAAApC,EAAAmC,IAAA,GAAA/c,KAKA6a,KAEAL,EAAA,SAAA0C,GACAxX,EAAA5F,KAAA0a,EAAAD,EAAA,MACAnP,EAAA8R,GACAjD,EAAApZ,KAAAf,KACA,KACAod,EAAAzX,EAAAwX,EAAAnd,KAAA,GAAA2F,EAAAqX,EAAAhd,KAAA,IACA,MAAAqd,GACAL,EAAAjc,KAAAf,KAAAqd,KAGAlD,EAAA,SAAAiD,GACApd,KAAAmK,MACAnK,KAAA8c,GAAA/Y,OACA/D,KAAAkc,GAAA,EACAlc,KAAAid,IAAA,EACAjd,KAAAgc,GAAAjY,OACA/D,KAAAsc,GAAA,EACAtc,KAAA8b,IAAA,GAEA3B,EAAA/S,UAAAlG,EAAA,mBAAAwZ,EAAAtT,WAEA6M,KAAA,SAAAqJ,EAAAC,GACA,GAAApB,GAAAb,EAAAf,EAAAva,KAAA0a,GAMA,OALAyB,GAAAF,GAAA,kBAAAqB,GAAAA,GAAA,EACAnB,EAAAE,KAAA,kBAAAkB,IAAAA,EACAvd,KAAAmK,GAAA3F,KAAA2X,GACAnc,KAAA8c,IAAA9c,KAAA8c,GAAAtY,KAAA2X,GACAnc,KAAAkc,IAAArJ,EAAA7S,MAAA,GACAmc,EAAArB,SAGA0C,QAAA,SAAAD,GACA,MAAAvd,MAAAiU,KAAAlQ,OAAAwZ,MAGAhC,EAAA,WACA,GAAAT,GAAA,GAAAX,EACAna,MAAA8a,QAAAA,EACA9a,KAAAgU,QAAArO,EAAAwX,EAAArC,EAAA,GACA9a,KAAAwb,OAAA7V,EAAAqX,EAAAlC,EAAA,KAIAvR,EAAAA,EAAAmB,EAAAnB,EAAAoB,EAAApB,EAAAqB,GAAAmQ,GAAApZ,QAAA+Y,IACAxZ,EAAA,wBAAAwZ,EAAAD,GACAvZ,EAAA,kBAAAuZ,GACAJ,EAAAnZ,EAAA,WAAAuZ,GAGAlR,EAAAA,EAAAmD,EAAAnD,EAAAqB,GAAAmQ,EAAAN,GAEAe,OAAA,SAAAnb,GACA,GAAAod,GAAAnC,EAAAtb,MACA0b,EAAA+B,EAAAjC,MAEA,OADAE,GAAArb,GACAod,EAAA3C,WAGAvR,EAAAA,EAAAmD,EAAAnD,EAAAqB,GAAAmF,IAAAgL,GAAAH,GAAA,IAAAH,GAEAzG,QAAA,SAAAkH,GAEA,GAAAA,YAAAR,IAAAU,EAAAF,EAAAtF,YAAA5V,MAAA,MAAAkb,EACA,IAAAuC,GAAAnC,EAAAtb,MACAyb,EAAAgC,EAAAzJ,OAEA,OADAyH,GAAAP,GACAuC,EAAA3C,WAGAvR,EAAAA,EAAAmD,EAAAnD,EAAAqB,IAAAmQ,GAAA7Z,EAAA,kBAAA,SAAAmD,GACAqW,EAAAgD,IAAArZ,GAAA,SAAAsW,MACAF,GAEAiD,IAAA,SAAAxW,GACA,GAAAD,GAAAjH,KACAyd,EAAAnC,EAAArU,GACA+M,EAAAyJ,EAAAzJ,QACAwH,EAAAiC,EAAAjC,OACAmC,EAAAhC,EAAA,WACA,GAAA1K,GAAA9H,EAAAjC,GACA0W,EAAA3M,EAAAjQ,OACA6c,EAAAvO,MAAAsO,EACAA,GAAAnY,EAAApC,KAAAtC,KAAAkQ,EAAA,SAAA6J,EAAAtU,GACA,GAAAsX,IAAA,CACA7W,GAAA+M,QAAA8G,GAAA7G,KAAA,SAAAjM,GACA8V,IACAA,GAAA,EACAD,EAAArX,GAAAwB,IACA4V,GAAA5J,EAAA6J,KACArC,KAEAxH,EAAA6J,IAGA,OADAF,IAAAnC,EAAAmC,EAAA/B,OACA6B,EAAA3C,SAGAiD,KAAA,SAAA7W,GACA,GAAAD,GAAAjH,KACAyd,EAAAnC,EAAArU,GACAuU,EAAAiC,EAAAjC,OACAmC,EAAAhC,EAAA,WACAvX,EAAA8C,GAAA,EAAA,SAAA4T,GACA7T,EAAA+M,QAAA8G,GAAA7G,KAAAwJ,EAAAzJ,QAAAwH,MAIA,OADAmC,IAAAnC,EAAAmC,EAAA/B,OACA6B,EAAA3C,a3D0/BGxS,MAAM,EAAEoD,gBAAgB,EAAEnD,iBAAiB,EAAEwF,eAAe,EAAE3E,yBAAyB,EAAEC,aAAa,GAAG+D,UAAU,GAAG5E,SAAS,GAAGE,iBAAiB,GAAGmC,YAAY,GAAGpG,YAAY,GAAGsG,YAAY,GAAG7G,eAAe,GAAG8Z,iBAAiB,GAAG5M,aAAa,GAAG6M,eAAe,GAAGlV,kBAAkB,GAAGmV,eAAe,GAAGlV,iBAAiB,GAAGgC,uBAAuB,GAAGmT,yBAAyB,GAAGhK,UAAU,KAAKiK,IAAI,SAASld,EAAQzB,EAAOD,G4DhzC1a,YACA,IAAAsa,GAAA5Y,EAAA,uBAGAzB,GAAAD,QAAA0B,EAAA,iBAAA,MAAA,SAAA4G,GACA,MAAA,YAAA,MAAAA,GAAA9H,KAAA8E,UAAA9D,OAAA,EAAA8D,UAAA,GAAAf,WAGAsa,IAAA,SAAArW,GACA,MAAA8R,GAAA/R,IAAA/H,KAAAgI,EAAA,IAAAA,EAAA,EAAAA,EAAAA,KAEA8R,K5DkzCGC,gBAAgB,GAAGC,uBAAuB,KAAKsE,IAAI,SAASpd,EAAQzB,EAAOD,G6D7zC9E,YACA,IAAA+e,GAAArd,EAAA,iBAAA,EAGAA,GAAA,kBAAA+U,OAAA,SAAA,SAAA/N,GACAlI,KAAAoI,GAAA6N,OAAA/N,GACAlI,KAAAyG,GAAA,GAEA,WACA,GAEA+X,GAFAzZ,EAAA/E,KAAAoI,GACA5B,EAAAxG,KAAAyG,EAEA,OAAAD,IAAAzB,EAAA/D,QAAAgH,MAAAjE,OAAA+J,MAAA,IACA0Q,EAAAD,EAAAxZ,EAAAyB,GACAxG,KAAAyG,IAAA+X,EAAAxd,QACAgH,MAAAwW,EAAA1Q,MAAA,Q7Dg0CGlF,iBAAiB,GAAG6V,eAAe,KAAKC,IAAI,SAASxd,EAAQzB,EAAOD,G8D90CvE,GAAA+J,GAAArI,EAAA,YAEAqI,GAAAA,EAAAqD,EAAArD,EAAA2D,EAAA,OAAAyR,OAAAzd,EAAA,yBAAA,W9Di1CG0d,wBAAwB,GAAG/T,YAAY,KAAKgU,IAAI,SAAS3d,EAAQzB,EAAOD,G+Dn1C3E,GAAA+J,GAAArI,EAAA,YAEAqI,GAAAA,EAAAqD,EAAArD,EAAA2D,EAAA,OAAAyR,OAAAzd,EAAA,yBAAA,W/Ds1CG0d,wBAAwB,GAAG/T,YAAY,KAAKiU,IAAI,SAAS5d,EAAQzB,EAAOD,GgEz1C3E0B,EAAA,uBACA,IAAApB,GAAAoB,EAAA,aACAwI,EAAAxI,EAAA,WACAkO,EAAAlO,EAAA,gBACA6d,EAAA7d,EAAA,UAAA,eACA8d,EAAA5P,EAAAE,KAEApO,GAAA,OAAAmC,KAAAtC,MAAA,WAAA,eAAA,YAAA,iBAAA,eAAA,SAAA+F,GACA,GAAAmY,GAAAnf,EAAAgH,GACAkD,EAAAiV,GAAAA,EAAA7X,SACA4C,KAAAA,EAAA+U,IAAArV,EAAAM,EAAA+U,EAAAjY,GACAsI,EAAAtI,GAAAkY,MhE41CG1W,MAAM,EAAEyC,YAAY,GAAGpC,UAAU,GAAG4G,eAAe,GAAGnK,SAAS,GAAG8Z,uBAAuB,KAAKC,IAAI,SAASje,EAAQzB,EAAOD,GiEv2C7H,GAAA4f,IACA,SAAAA,GACA,GAAAC,GAAA,WACA,QAAAA,MAOA,MALAA,GAAAC,mBAAA,YACAD,EAAAE,eAAA,QACAF,EAAAG,WAAA,YACAH,EAAAI,MAAA,QACAJ,EAAAza,IAAA,MACAya,IAEAD,GAAAC,UAAAA,GACAD,IAAAA,MACA,IAAAA,IACA,SAAAA,GACA,GAAAM,GAAA,WACA,QAAAA,KACA1f,KAAAiS,GAAA,uBAEA,MAAAyN,KAEAN,GAAAM,QAAAA,GACAN,IAAAA,MACA,IAAAA,IACA,SAAAA,GACA,GAAAO,GAAA,WACA,QAAAA,MAuCA,MAnCAA,GAAA3X,MAAA,WACA,MAAA,SAGA2X,EAAAC,MAAA,WACA,MAAA,SAGAD,EAAAE,QAAA,WACA,MAAA,WAGAF,EAAAG,UAAA,WACA,MAAA,aAGAH,EAAAI,QAAA,WACA,MAAA,WAGAJ,EAAAK,QAAA,WACA,MAAA,WAGAL,EAAAM,MAAA,WACA,MAAA,SAGAN,EAAAO,WAAA,WACA,MAAA,eAGAP,EAAAQ,UAAA,WACA,MAAA,cAEAR,IAEAP,GAAAO,IAAAA,GACAP,IAAAA,MAGA,IAMAA,GANAgB,EAAApgB,MAAAA,KAAAogB,WAAA,SAAAC,EAAA9V,GAEA,QAAA+V,KAAAtgB,KAAA4V,YAAAyK,EADA,IAAA,GAAA9Y,KAAAgD,GAAAA,EAAAiE,eAAAjH,KAAA8Y,EAAA9Y,GAAAgD,EAAAhD,GAEA+Y,GAAAlZ,UAAAmD,EAAAnD,UACAiZ,EAAAjZ,UAAA,GAAAkZ,KAGA,SAAAlB,GACA,GAAAmB,GAAA,SAAAC,GAEA,QAAAD,GAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxL,GACA,SAAAA,IAAAA,EAAA+J,EAAAO,IAAA3X,SACAwY,EAAAzf,KAAAf,MACAA,KAAAygB,KAAAA,EACAzgB,KAAA0gB,YAAAA,EACA1gB,KAAA2gB,aAAAA,EACA3gB,KAAA4gB,SAAAA,EACA5gB,KAAA6gB,UAAAA,EACA7gB,KAAAqV,IAAAA,EACArV,KAAAiS,GAAA,mBACAjS,KAAA8gB,UAAA,yDAEA,MAbAV,GAAAG,EAAAC,GAaAD,GACAnB,EAAAM,QACAN,GAAAmB,6BAAAA,GACAnB,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA2B,GAAA,SAAAP,GAEA,QAAAO,GAAAL,EAAAM,EAAAhZ,GACAwY,EAAAzf,KAAAf,MACAA,KAAA0gB,YAAAA,EACA1gB,KAAAghB,aAAAA,EACAhhB,KAAAgI,MAAAA,EACAhI,KAAAiS,GAAA,2BACAjS,KAAA8gB,UAAA,4DAEA,MATAV,GAAAW,EAAAP,GASAO,GACA3B,EAAAM,QACAN,GAAA2B,gCAAAA,GACA3B,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA6B,GAAA,SAAAT,GAEA,QAAAS,GAAAP,GACAF,EAAAzf,KAAAf,MACAA,KAAA0gB,YAAAA,EACA1gB,KAAAiS,GAAA,mBACAjS,KAAA8gB,UAAA,oDAEA,MAPAV,GAAAa,EAAAT,GAOAS,GACA7B,EAAAM,QACAN,GAAA6B,wBAAAA,GACA7B,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA8B,GAAA,SAAAV,GAEA,QAAAU,GAAAC,GACAX,EAAAzf,KAAAf,MACAA,KAAAmhB,WAAAA,EACAnhB,KAAAiS,GAAA,kBACAjS,KAAA8gB,UAAA,mDAEA,MAPAV,GAAAc,EAAAV,GAOAU,GACA9B,EAAAM,QACAN,GAAA8B,uBAAAA,GACA9B,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAgC,GAAA,SAAAZ,GAEA,QAAAY,GAAAV,EAAAM,EAAAhZ,GACAwY,EAAAzf,KAAAf,MACAA,KAAA0gB,YAAAA,EACA1gB,KAAAghB,aAAAA,EACAhhB,KAAAgI,MAAAA,EACAhI,KAAAiS,GAAA,0BACAjS,KAAA8gB,UAAA,2DAEA,MATAV,GAAAgB,EAAAZ,GASAY,GACAhC,EAAAM,QACAN,GAAAgC,+BAAAA,GACAhC,IAAAA,MACA,IAAAA,IACA,SAAAA,GACA,GAAAiC,GAAA,WACA,QAAAA,KACArhB,KAAAshB,iBAQA,MANAD,GAAAja,UAAAma,QAAA,SAAAC,GACAxhB,KAAAshB,cAAA9c,KAAAgd,IAEAH,EAAAja,UAAAqa,QAAA,SAAAnK,GACAtX,KAAAshB,cAAAhe,QAAA,SAAAoe,GAAA,MAAAA,GAAApK,MAEA+J,IAEAjC,GAAAiC,SAAAA,GACAjC,IAAAA,MAIA,IAAAA,IACA,SAAAA,GACA,GAAAuC,GAAA,EACAC,EAAA,WACA,QAAAA,GAAA3P,EAAA4P,GACA7hB,KAAAiS,GAAAA,EACAjS,KAAA6hB,sBAAAA,EACA7hB,KAAA8hB,cACA9hB,KAAA+hB,gBAAA,EACA/hB,KAAAgiB,OAAA,EACA,mBAAA/P,IAAA,MAAAA,EACAjS,KAAAiS,GAAAA,EAGAjS,KAAAiS,IAAA0P,KAAArc,WAEAtF,KAAAiiB,WAAA,GAAA7C,GAAAiC,SACArhB,KAAAkiB,oBAAA,GAAA9C,GAAAiC,SAiJA,MA7IAO,GAAAxa,UAAA+a,KAAA,WACA,GAAA5d,GAAA,GAAAqd,GAAA,KAAA5hB,KAAA6hB,sBAMA,OALAtd,GAAAwd,gBAAA,EACA/hB,KAAAoiB,gBAAA9e,QAAA,SAAA+e,GACA,GAAAC,GAAAD,EAAAF,MACA5d,GAAAge,aAAAD,KAEA/d,GAGAqd,EAAAxa,UAAAob,cAAA,SAAAV,GACA,GAAAW,GAAAziB,MACA8hB,GAAAA,EAAA9gB,OAAA,GAEA8gB,EAAAxe,QAAA,SAAAof,GACAD,EAAAF,aAAAG,MAGAd,EAAAxa,UAAAmb,aAAA,SAAAF,GACA,GAAAI,GAAAziB,IACA,IAAAqiB,KAAAriB,KAAA8hB,WAAAa,QAAAN,GAAA,IAAA,CAGA,GAAAriB,KAAA4iB,kCAAAP,EAAA1B,aAAA0B,EAAAhN,KACA,KAAA,IAAAzU,OAAA,qDAAAyhB,EAAA1B,aACA,aAAA0B,EAAAhN,IAAA,mCAAArV,KAAAiS,GAEA,IAAAoQ,EAAAQ,gBAAA7iB,KAAA8iB,yBAAAT,EAAAQ,gBACA,KAAA,IAAAjiB,OAAA,iDAAAyhB,EAAAQ,eACA,mCAAA7iB,KAAAiS,GAEAoQ,GAAAU,qBAAA/iB,MACAA,KAAA8hB,WAAAtd,KAAA6d,GACAA,EAAAhN,KAAA+J,EAAAO,IAAA3X,SACAhI,KAAAgjB,cAEAX,EAAAY,cAAA,SAAAC,GACAT,EAAAR,WAAAR,SAAArV,OAAAqW,QAGAb,EAAAxa,UAAA4b,YAAA,WACA,IAAA,GAAAriB,GAAA,EAAAA,EAAAX,KAAA8hB,WAAA9gB,OAAAL,IACA,GAAAX,KAAA8hB,WAAAnhB,GAAAwiB,UAEA,WADAnjB,MAAAojB,UAAA,EAKApjB,MAAAojB,UAAA,IAEAxB,EAAAxa,UAAAic,yBAAA,WACA,IAAA,GAAA1iB,GAAA,EAAAA,EAAAX,KAAA8hB,WAAA9gB,OAAAL,IACAX,KAAA8hB,WAAAnhB,GAAAqiB,eAGApB,EAAAxa,UAAA+b,QAAA,WACA,MAAAnjB,MAAAgiB,OAEAJ,EAAAxa,UAAAgc,SAAA,SAAApB,GACA,GAAAsB,GAAAtjB,KAAAgiB,KACAhiB,MAAAgiB,MAAAA,EACAhiB,KAAAkiB,oBAAAT,SAAA8B,SAAAD,EAAA1C,SAAA5gB,KAAAgiB,SAEAJ,EAAAxa,UAAAoc,MAAA,WACAxjB,KAAA8hB,WAAAxe,QAAA,SAAA+e,GACAA,EAAAmB,WAGA5B,EAAAxa,UAAAqc,OAAA,WACAzjB,KAAA8hB,WAAAxe,QAAA,SAAA+e,GACAA,EAAAoB,YAGA7B,EAAAxa,UAAAsc,QAAA,SAAAlC,GACAxhB,KAAAkiB,oBAAAX,QAAAC,IAEAI,EAAAxa,UAAAuc,cAAA,SAAAC,GACA5jB,KAAAiiB,WAAAV,QAAAqC,IAGAhC,EAAAxa,UAAAgb,cAAA,WACA,MAAApiB,MAAA8hB,WAAAvc,MAAA,IAEAqc,EAAAxa,UAAAyc,MAAA,SAAAlD,EAAAtL,GAEA,MADA,UAAAA,IAAAA,EAAA+J,EAAAO,IAAA3X,SACAhI,KAAA4iB,kCAAAjC,EAAAtL,IAEAuM,EAAAxa,UAAA0c,4BAAA,SAAAnD,GACA,MAAA3gB,MAAA4iB,kCAAAjC,EAAAvB,EAAAO,IAAA3X,UAEA4Z,EAAAxa,UAAA2c,gCAAA,SAAApD,GACA,GAAApc,KACA,OAAAoc,IAEA3gB,KAAA8hB,WAAAxe,QAAA,SAAA+e,GACAA,EAAA1B,cAAAA,GACApc,EAAAC,KAAA6d,KAGA9d,GANA,MAQAqd,EAAAxa,UAAAwb,kCAAA,SAAAjC,EAAAtL,GACA,IAAAsL,IAAAtL,EACA,MAAA,KACA,KAAA,GAAA1U,GAAA,EAAAA,EAAAX,KAAA8hB,WAAA9gB,OAAAL,IACA,GAAAX,KAAA8hB,WAAAnhB,GAAAggB,cAAAA,GAAA3gB,KAAA8hB,WAAAnhB,GAAA0U,KAAAA,EACA,MAAArV,MAAA8hB,WAAAnhB,EAGA,OAAA,OAEAihB,EAAAxa,UAAA0b,yBAAA,SAAAjC,GACA,IAAAA,EACA,MAAA,KACA,KAAA,GAAAlgB,GAAA,EAAAA,EAAAX,KAAA8hB,WAAA9gB,OAAAL,IACA,GAAAX,KAAA8hB,WAAAnhB,GAAAkiB,gBAAAhC,EACA,MAAA7gB,MAAA8hB,WAAAnhB,EAIA,OAAA,OAEAihB,EAAAxa,UAAA4c,kBAAA,SAAA/R,GACA,IAAAA,EACA,MAAA,KACA,KAAA,GAAAtR,GAAA,EAAAA,EAAAX,KAAA8hB,WAAA9gB,OAAAL,IACA,GAAAX,KAAA8hB,WAAAnhB,GAAAsR,IAAAA,EACA,MAAAjS,MAAA8hB,WAAAnhB,EAIA,OAAA,OAEAihB,EAAAxa,UAAA6c,SAAA,SAAAC,GACAlkB,KAAA8hB,WAAAxe,QAAA,SAAA6gB,GACA,GAAAC,GAAAF,EAAAL,MAAAM,EAAAxD,aAAAwD,EAAA9O,IACA+O,IACAD,EAAAF,SAAAG,MAIAxC,IAEAxC,GAAAwC,wBAAAA,GACAxC,IAAAA,MAIA,IAAAA,IACA,SAAAA,GACA,GAAAiF,GAAA,WACA,QAAAA,GAAA1D,EAAAE,EAAA7Y,EAAAqN,GACA,SAAAA,IAAAA,EAAA+J,EAAAO,IAAA3X,SACAhI,KAAA2gB,aAAAA,EACA3gB,KAAAqV,IAAAA,EACArV,KAAAgiB,OAAA,EACAhiB,KAAAiS,GAAA,GAAAoS,EAAAC,gCAAA,IACAtkB,KAAAukB,eAAA,GAAAnF,GAAAiC,SACArhB,KAAAwkB,mBAAA,GAAApF,GAAAiC,SACArhB,KAAAkiB,oBAAA,GAAA9C,GAAAiC,SACArhB,KAAAykB,mBAAA,GAAArF,GAAAiC,SACArhB,KAAA0kB,SAAA1c,GACAhI,KAAA2kB,aAAA3c,GACAhI,KAAA4kB,aAAA/D,GA0HA,MAvHAwD,GAAAjd,UAAA+a,KAAA,WACA,GAAA5d,GAAA,GAAA8f,GAAArkB,KAAA2gB,aAAA3gB,KAAA6iB,eAAA7iB,KAAA6kB,WAAA7kB,KAAAqV,IAEA,OADA9Q,GAAAogB,aAAA3kB,KAAA8kB,gBACAvgB,GAEA8f,EAAAjd,UAAA+b,QAAA,WACA,MAAAnjB,MAAAgiB,OAEAqC,EAAAjd,UAAA0d,aAAA,WACA,MAAA9kB,MAAA+kB,WAEAV,EAAAjd,UAAA2b,qBAAA,SAAAiC,GACAhlB,KAAAglB,mBACAC,MAAA,gFAEAjlB,KAAAglB,kBAAAA,GAEAX,EAAAjd,UAAA8d,qBAAA,WACA,MAAAllB,MAAAglB,mBAEAX,EAAAjd,UAAAyd,SAAA,WACA,MAAA7kB,MAAAgI,OAEAqc,EAAAjd,UAAAsd,SAAA,SAAA9D,GACA,GAAAuE,GAAAd,EAAAe,WAAAxE,EACA,IAAA5gB,KAAAgI,OAAAmd,EAAA,CAEA,GAAA5B,GAAAvjB,KAAAgI,KACAhI,MAAAgI,MAAAmd,EACAnlB,KAAAojB,SAAApjB,KAAAqlB,eAAArlB,KAAA+kB,UAAAI,IACAnlB,KAAAukB,eAAA9C,SAAA8B,SAAAA,EAAA3C,SAAAuE,MAEAd,EAAAjd,UAAAie,eAAA,SAAAN,EAAA/c,GACA,MAAA,OAAA+c,EACA,MAAA/c,EAGA+c,GAAA/c,GAGAqc,EAAAjd,UAAA4b,YAAA,WACAhjB,KAAAojB,SAAApjB,KAAAqlB,eAAArlB,KAAA+kB,UAAA/kB,KAAAgI;EAEAqc,EAAAjd,UAAAgc,SAAA,SAAApB,GACA,GAAAsB,GAAAtjB,KAAAgiB,KACAhiB,MAAAgiB,MAAAA,EACAhiB,KAAAkiB,oBAAAT,SAAA8B,SAAAD,EAAA1C,SAAA5gB,KAAAgiB,QACAhiB,KAAAglB,mBACAhlB,KAAAglB,kBAAAhC,eAEAqB,EAAAjd,UAAAwd,aAAA,SAAAU,GACA,GAAAtlB,KAAA6gB,WAAAyE,EAAA,CAEA,GAAAC,GAAAvlB,KAAA6gB,SACA7gB,MAAA6gB,UAAAyE,EACAtlB,KAAAwkB,mBAAA/C,SAAA8B,SAAAgC,EAAA3E,SAAA0E,MAEAjB,EAAAjd,UAAAyb,aAAA,WACA,MAAA7iB,MAAA6gB,WAEAwD,EAAAjd,UAAAud,aAAA,SAAAI,GACA,GAAA/kB,KAAA+kB,WAAAA,EAAA,CAEA,GAAAS,GAAAxlB,KAAA+kB,SACA/kB,MAAA+kB,UAAAA,EACA/kB,KAAAojB,SAAApjB,KAAAqlB,eAAAN,EAAA/kB,KAAAgI,QACAhI,KAAAykB,mBAAAhD,SAAA8B,SAAAiC,EAAA5E,SAAAmE,MAEAV,EAAAjd,UAAAqc,OAAA,WACAzjB,KAAA2kB,aAAA3kB,KAAAgI,OACAhI,KAAAojB,UAAA,IAEAiB,EAAAjd,UAAAoc,MAAA,WACAxjB,KAAA0kB,SAAA1kB,KAAA+kB,WACA/kB,KAAAojB,UAAA,IAEAiB,EAAAe,WAAA,SAAApd,GACA,GAAA,MAAAA,GAAAjE,QAAAiE,EACA,MAAA,KAEA,IAAAzD,GAAAyD,GACAzD,YAAA0R,SAAA1R,YAAAkhB,UAAAlhB,YAAAmhB,WACAnhB,EAAAyD,EAAA2d,WAEAphB,YAAA8f,KACA3H,QAAAkJ,IAAA,mGACArhB,EAAAvE,KAAAolB,WAAApd,EAAAA,OAEA,IAAAiU,IAAA,CAIA,KAHAjc,KAAA6lB,sBAAAlD,cAAApe,IAAA,IAAAA,YAAAuhB,SACA7J,GAAA,IAEAA,EACA,KAAA,IAAArb,OAAA,wDAAAoH,GAEA,OAAAzD,IAEA8f,EAAAjd,UAAA6b,cAAA,SAAAzB,GACAxhB,KAAAukB,eAAAhD,QAAAC,GACAA,GAAA+B,SAAAvjB,KAAAgI,MAAA4Y,SAAA5gB,KAAAgI,SAEAqc,EAAAjd,UAAA2e,kBAAA,SAAAvE,GACAxhB,KAAAwkB,mBAAAjD,QAAAC,IAEA6C,EAAAjd,UAAAsc,QAAA,SAAAlC,GACAxhB,KAAAkiB,oBAAAX,QAAAC,IAEA6C,EAAAjd,UAAA4e,kBAAA,SAAAxE,GACAxhB,KAAAykB,mBAAAlD,QAAAC,IAEA6C,EAAAjd,UAAA6c,SAAA,SAAAG,GACAA,IACApkB,KAAA4kB,aAAAR,EAAAvB,gBACA7iB,KAAA2kB,aAAAP,EAAAU,gBACA9kB,KAAA0kB,SAAAN,EAAApc,SAGAqc,EAAAwB,uBAAA,SAAA,SAAA,WACAxB,EAAAC,6BAAA,EACAD,IAEAjF,GAAAiF,gBAAAA,GACAjF,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA6G,GAAA,SAAAzF,GAEA,QAAAyF,GAAAvF,EAAA6C,EAAA3C,GACAJ,EAAAzf,KAAAf,MACAA,KAAA0gB,YAAAA,EACA1gB,KAAAujB,SAAAA,EACAvjB,KAAA4gB,SAAAA,EACA5gB,KAAAiS,GAAA,eACAjS,KAAA8gB,UAAA,gDAEA,MATAV,GAAA6F,EAAAzF,GASAyF,GACA7G,EAAAM,QACAN,GAAA6G,oBAAAA,GACA7G,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA8G,GAAA,SAAA1F,GAEA,QAAA0F,GAAAriB,GACA2c,EAAAzf,KAAAf,MACAA,KAAAiS,GAAApO,EACA7D,KAAA8gB,UAAA,yCAEA,MANAV,GAAA8F,EAAA1F,GAMA0F,GACA9G,EAAAM,QACAN,GAAA8G,aAAAA,GACA9G,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA+G,GAAA,SAAA3F,GAEA,QAAA2F,KACA3F,EAAAzf,KAAAf,MACAA,KAAAiS,GAAA,QACAjS,KAAA8gB,UAAA,8CAEA,MANAV,GAAA+F,EAAA3F,GAMA2F,GACA/G,EAAAM,QACAN,GAAA+G,kBAAAA,GACA/G,IAAAA,MAMA,IAAAA,IACA,SAAAA,GAEA,GAAAgH,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAAhf,UAAAif,MAAA,SAAAnP,GACA,OAAAA,EAAAoP,UAEAF,IAEAhH,GAAAgH,iBAAAA,CAEA,IAAAG,GAAA,WAEA,QAAAA,GAAAC,EAAAC,GACA,SAAAD,IAAAA,GAAA,GACA,SAAAC,IAAAA,EAAA,IACAzmB,KAAAwmB,QAAAA,EACAxmB,KAAAymB,aAAAA,EAwCA,MAtCAF,GAAAnf,UAAAif,MAAA,SAAAnP,GACA,GAAA3S,KAEA,OADAvE,MAAA0mB,YAAA1mB,KAAAymB,aAAAvP,EAAA3S,GACAA,GAGAgiB,EAAAnf,UAAAsf,YAAA,SAAAD,EAAAvP,EAAAmP,GACA,KAAAnP,EAAAlW,OAAA,GAAA,EAAAylB,GAAA,CAEA,GAAAE,GAAAzP,EAAAoP,OACA,IAAAtmB,KAAAwmB,SAAAG,EAAAC,kBAAAxH,GAAA6G,sBAAAU,EAAAvK,QAAA,CAGA,IAAA,GAFAyK,GAAA,KACAC,EAAAH,EAAAC,QACAjmB,EAAA,EAAAA,EAAA0lB,EAAArlB,QAAA,MAAA6lB,EAAAlmB,IACA,GAAA0lB,EAAA1lB,GAAAimB,kBAAAxH,GAAA6G,oBAAA,CACA,GAAAc,GAAAV,EAAA1lB,GAAAimB,OACAE,GAAApG,aAAAqG,EAAArG,aAAAqG,EAAAnG,UAAAkG,EAAAvD,WACAsD,EAAAE,GAIAF,EACAA,EAAAjG,SAAAkG,EAAAlG,SAGAyF,EAAA7hB,KAAAmiB,OAIAN,GAAA7hB,KAAAmiB,EAEAA,GAAAvK,SACA,0CAAAuK,EAAAC,QAAA,WACA,+CAAAD,EAAAC,QAAA,WAEA5mB,KAAA0mB,YAAAD,EAAA,EAAAvP,EAAAmP,KAGAE,IAEAnH,GAAAmH,oBAAAA,GACAnH,IAAAA,MACA,IAAAA,IACA,SAAAA,GACA,GAAA4H,GAAA,WACA,QAAAA,MAaA,MAXAA,GAAA5f,UAAA6f,OAAA,SAAAC,GACA,MAAAC,MAAAC,UAAAF,IAEAF,EAAA5f,UAAAigB,OAAA,SAAAC,GACA,MAAA,gBAAAA,GACAH,KAAAI,MAAAD,GAGAA,GAGAN,IAEA5H,GAAA4H,MAAAA,GACA5H,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAoI,GAAA,SAAAhH,GAEA,QAAAgH,GAAA3jB,GACA2c,EAAAzf,KAAAf,MACAA,KAAAiS,GAAApO,EACA7D,KAAA8gB,UAAA,0CAEA,MANAV,GAAAoH,EAAAhH,GAMAgH,GACApI,EAAAM,QACAN,GAAAoI,cAAAA,GACApI,IAAAA,MAIA,IAAAA,IACA,SAAAA,GACA,GAAAqI,GAAA,SAAAjH,GAEA,QAAAiH,GAAAzC,GACAxE,EAAAzf,KAAAf,MACAA,KAAA8hB,cACA9hB,KAAA+hB,gBAAA,EACA/hB,KAAAiS,GAAA,0BACAjS,KAAA8gB,UAAA,2DACA9gB,KAAAygB,KAAAuE,EAAA/S,GACAjS,KAAA0nB,OAAA1C,EAAAnD,qBACA,IAAA8F,GAAA3nB,KAAA8hB,UACAkD,GAAA5C,gBAAA9e,QAAA,SAAAof,GACAiF,EAAAnjB,MACAmc,aAAA+B,EAAA/B,aACA1O,GAAAyQ,EAAAzQ,GACA4O,UAAA6B,EAAAG,eACA7a,MAAA0a,EAAAmC,WACAxP,IAAAqN,EAAArN,QAIA,MApBA+K,GAAAqH,EAAAjH,GAoBAiH,GACArI,EAAAM,QACAN,GAAAqI,+BAAAA,GACArI,IAAAA,MACA,IAAAA,IACA,SAAAA,GACA,GAAAje,GAAA,WACA,QAAAA,KACAnB,KAAAgD,QACAhD,KAAAsH,QA2CA,MAzCAnG,GAAAiG,UAAAwgB,IAAA,SAAAthB,EAAA0B,GACAhI,KAAA6nB,YAAAvhB,IACAtG,KAAAgD,KAAAwB,KAAA8B,GAEAtG,KAAAsH,KAAAtH,KAAAgD,KAAA2f,QAAArc,IAAA0B,GAEA7G,EAAAiG,UAAAU,IAAA,SAAAxB,GACA,MAAAtG,MAAAsH,KAAAtH,KAAAgD,KAAA2f,QAAArc,KAEAnF,EAAAiG,UAAA0gB,OAAA,SAAAxhB,GACA,GAAAtG,KAAA6nB,YAAAvhB,GAAA,CACA,GAAAE,GAAAxG,KAAAgD,KAAA2f,QAAArc,EAGA,OAFAtG,MAAAgD,KAAA+kB,OAAAvhB,EAAA,GACAxG,KAAAsH,KAAAygB,OAAAvhB,EAAA,IACA,EAEA,OAAA,GAEArF,EAAAiG,UAAA4gB,QAAA,WACA,MAAA,IAAAhoB,KAAAgD,KAAAhC,QAEAG,EAAAiG,UAAApG,OAAA,WACA,MAAAhB,MAAAgD,KAAAhC,QAEAG,EAAAiG,UAAA9D,QAAA,SAAA8Y,GACA,IAAA,GAAAzb,GAAA,EAAAA,EAAAX,KAAAgD,KAAAhC,OAAAL,IACAyb,EAAApc,KAAAgD,KAAArC,GAAAX,KAAAsH,KAAA3G,KAGAQ,EAAAiG,UAAAygB,YAAA,SAAAvhB,GACA,MAAAtG,MAAAgD,KAAA2f,QAAArc,GAAA,IAEAnF,EAAAiG,UAAA6gB,cAAA,SAAAjgB,GACA,MAAAhI,MAAAsH,KAAAqb,QAAA3a,GAAA,IAEA7G,EAAAiG,UAAA6J,OAAA,WACA,MAAAjR,MAAAsH,KAAA/B,MAAA,IAEApE,EAAAiG,UAAA8gB,OAAA,WACA,MAAAloB,MAAAgD,KAAAuC,MAAA,IAEApE,IAEAie,GAAAje,IAAAA,GACAie,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA+I,GAAA,SAAA3H,GAEA,QAAA2H,GAAAT,GACAlH,EAAAzf,KAAAf,MACAA,KAAA0nB,OAAAA,EACA1nB,KAAAiS,GAAA,qCACAjS,KAAA8gB,UAAA,2EAEA,MAPAV,GAAA+H,EAAA3H,GAOA2H,GACA/I,EAAAM,QACAN,GAAA+I,+CAAAA,GACA/I,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAgJ,GAAA,SAAA5H,GAEA,QAAA4H,GAAA3H,GACAD,EAAAzf,KAAAf,MACAA,KAAAygB,KAAAA,EACAzgB,KAAAiS,GAAA,2BACAjS,KAAA8gB,UAAA,iEAEA,MAPAV,GAAAgI,EAAA5H,GAOA4H,GACAhJ,EAAAM,QACAN,GAAAgJ,qCAAAA,GACAhJ,IAAAA,MAeA,IAAAA,IACA,SAAAA,IACA,SAAAiJ,GACAA,EAAAA,EAAA,MAAA,SAAA,QACAA,EAAAA,EAAA,QAAA,WAAA,WACAjJ,EAAAiJ,OAAAjJ,EAAAiJ,SACA,IAAAA,GAAAjJ,EAAAiJ,KACAC,EAAA,WACA,QAAAA,GAAAC,GACAvoB,KAAAuoB,cAAAA,EACAvoB,KAAAwoB,mBAAA,GAAApJ,GAAAje,IACAnB,KAAAyoB,0BAAA,GAAArJ,GAAAje,IACAnB,KAAA0oB,gBAAA,GAAAtJ,GAAAje,IACAnB,KAAA2oB,uBAAA,GAAAvJ,GAAAje,IACAnB,KAAA4oB,oBAAA,GAAAxJ,GAAAiC,SAwOA,MAtOAiH,GAAAlhB,UAAAyhB,iBAAA,WACA,MAAA7oB,MAAAuoB,eAEAD,EAAAlhB,UAAA0hB,cAAA,SAAAC,GACA,GAAAtG,GAAAziB,IACA,KAAA+oB,EAAAhH,eAAA,CAGA,GAAAiH,GAAAhpB,KAAAuoB,cAAAU,qBACAC,EAAA,GAAA9J,GAAAqI,+BAAAsB,EACAC,GAAAG,KAAAD,EAAA,MACAH,EAAA3G,gBAAA9e,QAAA,SAAA+e,GACAI,EAAA2G,kBAAA/G,OAGAiG,EAAAlhB,UAAAgiB,kBAAA,SAAA/G,GACA,GAAAI,GAAAziB,IACAA,MAAAqpB,iBAAAhH,GACAA,EAAAQ,gBACA7iB,KAAAspB,wBAAAjH,GAIAA,EAAAY,cAAA,SAAAC,GACA,GAAAqG,GAAA,GAAAnK,GAAA6G,oBAAA5D,EAAApQ,GAAAiR,EAAAK,SAAAL,EAAAtC,SAEA,IADA6B,EAAA8F,cAAAU,qBAAAE,KAAAI,EAAA,MACAlH,EAAAQ,eAAA,CACA,GAAA8E,GAAAlF,EAAA+G,uBAAA,SAAA9G,GACA,MAAAA,KAAAL,GAAAK,EAAAG,gBAAAR,EAAAQ,gBAEA8E,GAAArkB,QAAA,SAAAof,GACAA,EAAAgC,SAAArC,EAAAwC,iBAKAxC,EAAA2D,kBAAA,SAAA9C,GACA,GAAAuG,GAAA,GAAArK,GAAA6B,wBAAAoB,EAAApQ,GAEA,IADAwQ,EAAA8F,cAAAU,qBAAAE,KAAAM,EAAA,MACApH,EAAAQ,eAAA,CACA,GAAA8E,GAAAlF,EAAA+G,uBAAA,SAAA9G,GACA,MAAAA,KAAAL,GAAAK,EAAAG,gBAAAR,EAAAQ,gBAEA8E,GAAArkB,QAAA,SAAAof,GACAA,EAAAiC,aAAAtC,EAAAyC,qBAIAzC,EAAA0D,kBAAA,SAAA7C,GACA,GAAAwG,GAAA,GAAAtK,GAAAgC,+BAAAiB,EAAApQ,GAAAmN,EAAAC,UAAAC,mBAAA4D,EAAAtC,SACA6B,GAAA8F,cAAAU,qBAAAE,KAAAO,EAAA,SAGApB,EAAAlhB,UAAAiX,IAAA,SAAA0K,GACA,IAAAA,EACA,OAAA,CAEA/oB,MAAAwoB,mBAAAX,YAAAkB,EAAA9W,KACAyK,QAAAkJ,IAAA,iCAAAmD,EAAA9W,GAEA,IAAA0X,IAAA,CAQA,OAPA3pB,MAAAwoB,mBAAAP,cAAAc,KACA/oB,KAAAwoB,mBAAAZ,IAAAmB,EAAA9W,GAAA8W,GACA/oB,KAAA4pB,2BAAAb,GACA/oB,KAAA8oB,cAAAC,GACA/oB,KAAA4oB,oBAAAnH,SAAAoI,UAAAxB,EAAAyB,MAAAC,wBAAAhB,IACAY,GAAA,GAEAA,GAEArB,EAAAlhB,UAAA0gB,OAAA,SAAAiB,GACA,GAAAtG,GAAAziB,IACA,KAAA+oB,EACA,OAAA,CAEA,IAAAiB,IAAA,CAaA,OAZAhqB,MAAAwoB,mBAAAP,cAAAc,KACA/oB,KAAAiqB,8BAAAlB,GACA/oB,KAAAwoB,mBAAAV,OAAAiB,EAAA9W,IACA8W,EAAA3G,gBAAA9e,QAAA,SAAA+e,GACAI,EAAAyH,oBAAA7H,GACAA,EAAAQ,gBACAJ,EAAA0H,2BAAA9H,KAGAriB,KAAA4oB,oBAAAnH,SAAAoI,UAAAxB,EAAA+B,QAAAL,wBAAAhB,IACAiB,GAAA,GAEAA,GAEA1B,EAAAlhB,UAAAoiB,uBAAA,SAAAa,GACA,GAAAC,KAQA,OAPAtqB,MAAAwoB,mBAAAllB,QAAA,SAAAgD,EAAAyiB,GACAA,EAAA3G,gBAAA9e,QAAA,SAAAof,GACA2H,EAAA3H,IACA4H,EAAA9lB,KAAAke,OAIA4H,GAEAhC,EAAAlhB,UAAAwiB,2BAAA,SAAAb,GACA,GAAAA,EAAA,CAGA,GAAA5c,GAAA4c,EAAAlH,qBACA,IAAA1V,EAAA,CAGA,GAAAqc,GAAAxoB,KAAAyoB,0BAAA3gB,IAAAqE,EACAqc,KACAA,KACAxoB,KAAAyoB,0BAAAb,IAAAzb,EAAAqc,IAEAA,EAAA7F,QAAAoG,GAAA,IACAP,EAAAhkB,KAAAukB,MAGAT,EAAAlhB,UAAA6iB,8BAAA,SAAAlB,GACA,GAAAA,GAAAA,EAAA,sBAAA,CAGA,GAAAP,GAAAxoB,KAAAyoB,0BAAA3gB,IAAAihB,EAAAlH,sBACA2G,KAGAA,EAAAxnB,OAAA,IACAwnB,EAAAT,OAAAS,EAAA7F,QAAAoG,GAAA,GAEA,IAAAP,EAAAxnB,QACAhB,KAAAyoB,0BAAAX,OAAAiB,EAAAlH,0BAGAyG,EAAAlhB,UAAAmjB,yBAAA,WACA,MAAAvqB,MAAAwoB,mBAAAN,SAAA3iB,MAAA,IAEA+iB,EAAAlhB,UAAAojB,uBAAA,WACA,MAAAxqB,MAAAwoB,mBAAAvX,UAEAqX,EAAAlhB,UAAAqjB,0BAAA,SAAAxY,GACA,MAAAjS,MAAAwoB,mBAAA1gB,IAAAmK,IAEAqW,EAAAlhB,UAAAsjB,+BAAA,SAAAve,GACA,MAAAA,IAAAnM,KAAAyoB,0BAAAZ,YAAA1b,GAGAnM,KAAAyoB,0BAAA3gB,IAAAqE,GAAA5G,MAAA,OAEA+iB,EAAAlhB,UAAAujB,iCAAA,SAAA9I,GACA,GAAAY,GAAAziB,KACAwoB,EAAAxoB,KAAA0qB,+BAAA7I,EACA2G,GAAAllB,QAAA,SAAAsnB,GACAnI,EAAAoI,wBAAAD,GAAA,KAEA5qB,KAAAuoB,cAAAU,qBAAAE,KAAA,GAAA/J,GAAA+I,+CAAAtG,GAAA9d,SAEAukB,EAAAlhB,UAAAyjB,wBAAA,SAAA9B,EAAAlW,GACA,GAAAkW,GAGA/oB,KAAA8qB,0BAAA/B,EAAA9W,IAAA,CAEA,GADAjS,KAAA8nB,OAAAiB,IACAlW,GAAAkW,EAAAhH,eACA,MAEA/hB,MAAAuoB,cAAAU,qBAAAE,KAAA,GAAA/J,GAAAgJ,qCAAAW,EAAA9W,IAAA,QAGAqW,EAAAlhB,UAAA0jB,0BAAA,SAAA7Y,GACA,MAAAjS,MAAAwoB,mBAAAX,YAAA5V,IAEAqW,EAAAlhB,UAAAiiB,iBAAA,SAAAhH,GACAA,IAAAriB,KAAA0oB,gBAAAb,YAAAxF,EAAApQ,KAGAjS,KAAA0oB,gBAAAd,IAAAvF,EAAApQ,GAAAoQ,IAEAiG,EAAAlhB,UAAA8iB,oBAAA,SAAA7H,GACAA,GAAAriB,KAAA0oB,gBAAAb,YAAAxF,EAAApQ,KAGAjS,KAAA0oB,gBAAAZ,OAAAzF,EAAApQ,KAEAqW,EAAAlhB,UAAA4c,kBAAA,SAAA/R,GACA,MAAAjS,MAAA0oB,gBAAA5gB,IAAAmK,IAEAqW,EAAAlhB,UAAAkiB,wBAAA,SAAAjH,GACA,GAAAA,GAAAA,EAAAQ,eAAA,CAGA,GAAAf,GAAA9hB,KAAA2oB,uBAAA7gB,IAAAua,EAAAQ,eACAf,KACAA,KACA9hB,KAAA2oB,uBAAAf,IAAAvF,EAAAQ,eAAAf,IAEAA,EAAAa,QAAAN,GAAA,IACAP,EAAAtd,KAAA6d,KAGAiG,EAAAlhB,UAAA+iB,2BAAA,SAAA9H,GACA,GAAAA,GAAAA,EAAAQ,eAAA,CAGA,GAAAf,GAAA9hB,KAAA2oB,uBAAA7gB,IAAAua,EAAAQ,eACAf,KAGAA,EAAA9gB,OAAA,IACA8gB,EAAAiG,OAAAjG,EAAAa,QAAAN,GAAA,GAEA,IAAAP,EAAA9gB,QACAhB,KAAA2oB,uBAAAb,OAAAzF,EAAAQ,mBAGAyF,EAAAlhB,UAAA2jB,6BAAA,SAAAlK,GACA,MAAAA,IAAA7gB,KAAA2oB,uBAAAd,YAAAhH,GAGA7gB,KAAA2oB,uBAAA7gB,IAAA+Y,GAAAtb,MAAA,OAEA+iB,EAAAlhB,UAAA4jB,mBAAA,SAAAxJ,GACAxhB,KAAA4oB,oBAAArH,QAAAC,IAEA8G,EAAAlhB,UAAA6jB,0BAAA,SAAApJ,EAAAL,GACAxhB,KAAA4oB,oBAAArH,QAAA,SAAA2J,GACAA,EAAAnB,wBAAAlI,uBAAAA,GACAL,EAAA0J,MAIA5C,IAEAlJ,GAAAkJ,iBAAAA,GACAlJ,IAAAA,MASA,IAAAA,IACA,SAAAA,GACA,GAAA+L,GAAA,WACA,QAAAA,MAmGA,MAjGAA,GAAA/jB,UAAAgkB,mBAAA,SAAAC,GACArrB,KAAAqrB,gBAAAA,GAEAF,EAAA/jB,UAAA6hB,mBAAA,WACA,MAAAjpB,MAAAqrB,iBAEAF,EAAA/jB,UAAA+hB,KAAA,SAAAmC,EAAAC,GACAvrB,KAAAqrB,gBAAAlC,KAAA,GAAA/J,GAAA8G,aAAAoF,GAAAC,IAEAJ,EAAA/jB,UAAAokB,UAAA,SAAAD,GACAvrB,KAAAqrB,gBAAAlC,KAAA,GAAA/J,GAAA+G,kBAAAoF,IAGAJ,EAAA/jB,UAAAib,UAAA,SAAA1B,EAAAE,EAAA7Y,EAAAqN,GACA,MAAA,IAAA+J,GAAAiF,gBAAA1D,EAAAE,EAAA7Y,EAAAqN,IAGA8V,EAAA/jB,UAAA4d,kBAAA,SAAA/S,EAAA9F,GAEA,IAAA,GADA2V,MACArb,EAAA,EAAAA,EAAA3B,UAAA9D,OAAAyF,IACAqb,EAAArb,EAAA,GAAA3B,UAAA2B,EAEA,IAAAsiB,GAAA,GAAA3J,GAAAwC,wBAAA3P,EAAA9F,EAOA,OANA2V,IAAAA,EAAA9gB,OAAA,GACA8gB,EAAAxe,QAAA,SAAA+e,GACA0G,EAAAxG,aAAAF,KAGAriB,KAAAyrB,sBAAApN,IAAA0K,GACAA,GAEAoC,EAAA/jB,UAAAskB,oBAAA,SAAAC,GACA3rB,KAAA2rB,iBAAAA,GAEAR,EAAA/jB,UAAAqkB,oBAAA,WACA,MAAAzrB,MAAA2rB,kBAEAR,EAAA/jB,UAAAmjB,yBAAA,WACA,MAAAvqB,MAAAyrB,sBAAAlB,4BAEAY,EAAA/jB,UAAAojB,uBAAA,WACA,MAAAxqB,MAAAyrB,sBAAAjB,0BAEAW,EAAA/jB,UAAAsjB,+BAAA,SAAA7I,GACA,MAAA7hB,MAAAyrB,sBAAAf,+BAAA7I,IAEAsJ,EAAA/jB,UAAAyc,MAAA,SAAA5R,GACA,MAAAjS,MAAAyqB,0BAAAxY,IAEAkZ,EAAA/jB,UAAAqjB,0BAAA,SAAAxY,GACA,MAAAjS,MAAAyrB,sBAAAhB,0BAAAxY,IAEAkZ,EAAA/jB,UAAAyjB,wBAAA,SAAAe,GACA5rB,KAAAyrB,sBAAAZ,wBAAAe,GAAA,IAEAT,EAAA/jB,UAAAujB,iCAAA,SAAA9I,GACA7hB,KAAAyrB,sBAAAd,iCAAA9I,IAEAsJ,EAAA/jB,UAAAykB,iCAAA,SAAA7G,GACA,GAAAvC,GAAAziB,IACAglB,GAAA5C,gBAAA9e,QAAA,SAAA8gB,GACA3B,EAAAqJ,yBAAA1H,MAGA+G,EAAA/jB,UAAA0kB,yBAAA,SAAA1H,GACA,GAAAA,EAAAvB,eAAA,CAEA,GAAAf,GAAA9hB,KAAAyrB,sBAAAV,6BAAA3G,EAAAvB,eACAf,GAAAxe,QAAA,SAAA6gB,GACAA,EAAA9O,KAAA+O,EAAA/O,MAEA8O,EAAAO,SAAAN,EAAAS,YACAV,EAAAQ,aAAAP,EAAAU,qBAGAqG,EAAA/jB,UAAAiO,IAAA,SAAA2P,EAAArE,EAAA3Y,EAAAqN,GACA,GAAA0W,GAAA,GAAA3M,GAAAiF,gBAAA1D,EAAA,KAAA3Y,EAAAqN,EAEA,OADArV,MAAAgsB,oBAAAhH,EAAA+G,GACAA,GAEAZ,EAAA/jB,UAAA4kB,oBAAA,SAAAhH,EAAA+G,GACA/G,EAAAzC,aAAAwJ,GACA/rB,KAAAyrB,sBAAArC,kBAAA2C,GACA/G,EAAAjD,gBACA/hB,KAAAqrB,gBAAAlC,KAAA,GAAA/J,GAAAmB,6BAAAyE,EAAA/S,GAAA8Z,EAAA9Z,GAAA8Z,EAAApL,aAAAoL,EAAAlH,WAAAkH,EAAAlJ,eAAAkJ,EAAA1W,KAAA,OAIA8V,EAAA/jB,UAAA6kB,mBAAA,SAAAC,EAAAC,GACAnsB,KAAAqrB,gBAAAe,gBAAA,GAAAhN,GAAA8G,aAAAgG,IACAlsB,KAAAqrB,gBAAAgB,kBAAA,GAAAjN,GAAAoI,cAAA2E,IACAnsB,KAAAqrB,gBAAAiB,gBAAA,GACAtsB,KAAAqrB,gBAAAkB,UAEApB,EAAA/jB,UAAAolB,kBAAA,WACAxsB,KAAAqrB,gBAAAiB,gBAAA,IAEAnB,IAEA/L,GAAA+L,cAAAA,GACA/L,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAqN,GAAA,SAAAjM,GAEA,QAAAiM,GAAAhM,GACAD,EAAAzf,KAAAf,MACAA,KAAAygB,KAAAA,EACAzgB,KAAAiS,GAAA,2BACAjS,KAAA8gB,UAAA,4DAEA,MAPAV,GAAAqM,EAAAjM,GAOAiM,GACArN,EAAAM,QACAN,GAAAqN,gCAAAA,GACArN,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAsN,GAAA,SAAAlM,GAEA,QAAAkM,GAAAjM,GACAD,EAAAzf,KAAAf,MACAA,KAAAygB,KAAAA,EACAzgB,KAAAiS,GAAA,yBACAjS,KAAA8gB,UAAA,+DAEA,MAPAV,GAAAsM,EAAAlM,GAOAkM,GACAtN,EAAAM,QACAN,GAAAsN,mCAAAA,GACAtN,IAAAA,MAKA,IAAAA,IACA,SAAAA,GACA,GAAAuN,GAAA,SAAAnM,GAEA,QAAAmM,GAAAlM,EAAAiH,EAAA/G,EAAAE,EAAAD,EAAAvL,GACA,SAAAA,IAAAA,EAAA+J,EAAAO,IAAA3X,SACAwY,EAAAzf,KAAAf,MACAA,KAAAygB,KAAAA,EACAzgB,KAAA0nB,OAAAA,EACA1nB,KAAA2gB,aAAAA,EACA3gB,KAAA6gB,UAAAA,EACA7gB,KAAA4gB,SAAAA,EACA5gB,KAAAqV,IAAAA,EACArV,KAAAiS,GAAA,sBACAjS,KAAA8gB,UAAA,uDAEA,MAbAV,GAAAuM,EAAAnM,GAaAmM,GACAvN,EAAAM,QACAN,GAAAuN,2BAAAA,GACAvN,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAwN,GAAA,SAAApM,GAEA,QAAAoM,GAAAnM,EAAAoM,GACArM,EAAAzf,KAAAf,MACAA,KAAAygB,KAAAA,EACAzgB,KAAA6sB,WAAAA,EACA7sB,KAAAiS,GAAA,0BACAjS,KAAA8gB,UAAA,2DAEA,MARAV,GAAAwM,EAAApM,GAQAoM,GACAxN,EAAAM,QACAN,GAAAwN,+BAAAA,GACAxN,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA0N,GAAA,SAAAtM,GAEA,QAAAsM,GAAApF,GACAlH,EAAAzf,KAAAf,MACAA,KAAA0nB,OAAAA,EACA1nB,KAAAiS,GAAA,oCACAjS,KAAA8gB,UAAA,qEAEA,MAPAV,GAAA0M,EAAAtM,GAOAsM,GACA1N,EAAAM,QACAN,GAAA0N,yCAAAA,GACA1N,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA2N,GAAA,SAAAvM,GAEA,QAAAuM,GAAAtM,GACAD,EAAAzf,KAAAf,MACAA,KAAAygB,KAAAA,EACAzgB,KAAAiS,GAAA,0BACAjS,KAAA8gB,UAAA,2DAEA,MAPAV,GAAA2M,EAAAvM,GAOAuM,GACA3N,EAAAM,QACAN,GAAA2N,+BAAAA,GACA3N,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA4N,GAAA,SAAAxM,GAEA,QAAAwM,GAAA1lB,GACAkZ,EAAAzf,KAAAf,MACAA,KAAAsH,KAAAA,EACAtH,KAAAiS,GAAA,OACAjS,KAAA8gB,UAAA,wCAEA,MAPAV,GAAA4M,EAAAxM,GAOAwM,GACA5N,EAAAM,QACAN,GAAA4N,YAAAA,GACA5N,IAAAA,MAuBA,IAAAA,IACA,SAAAA,GACA,GAAA6N,GAAA,WACA,QAAAA,GAAAC,EAAA3E,EAAA4E,EAAA1G,GACA,SAAA0G,IAAAA,EAAA,GACA,SAAA1G,IAAAA,EAAA,IACAzmB,KAAAotB,gBACAptB,KAAAqtB,kBAAA,EACArtB,KAAAstB,aAAA,EACAttB,KAAAutB,SAAA,EACAvtB,KAAAktB,YAAAA,EACAltB,KAAAuoB,cAAAA,EACAvoB,KAAAmtB,QAAAA,EACAntB,KAAAwtB,MAAA,GAAApO,GAAA4H,MACAhnB,KAAAytB,eAAA,GAAArO,GAAAmH,qBAAA,EAAAE,GA6QA,MA3QAwG,GAAA7lB,UAAAsmB,kBAAA,SAAAC,GACA3tB,KAAAytB,eAAAE,GAEAV,EAAA7lB,UAAAklB,eAAA,SAAAtM,GACAhgB,KAAAstB,YAAAtN,GAEAiN,EAAA7lB,UAAAglB,gBAAA,SAAAwB,GACA5tB,KAAA6tB,aAAAD,GAEAX,EAAA7lB,UAAAilB,kBAAA,SAAAyB,GACA9tB,KAAA+tB,eAAAD,GAEAb,EAAA7lB,UAAA+hB,KAAA,SAAAvC,EAAA2E,GAEA,MADAvrB,MAAAotB,aAAA5oB,MAAAoiB,QAAAA,EAAAxK,QAAAmP,IACAvrB,KAAAqtB,qBACArtB,MAAAguB,cAGAhuB,MAAAiuB,cAEAhB,EAAA7lB,UAAA6mB,WAAA,WACA,GAAAxL,GAAAziB,IACA,IAAAA,KAAAotB,aAAApsB,OAAA,EAAA,CACA,IAAAhB,KAAAstB,YAKA,YADAttB,KAAAqtB,kBAAA,EAHArtB,MAAAkuB,qBAOAluB,KAAAqtB,kBAAA,CACA,IAAAc,GAAAnuB,KAAAytB,eAAApH,MAAArmB,KAAAotB,cACAgB,EAAAD,EAAAA,EAAAntB,OAAA,GAAAob,QACA8K,EAAAiH,EAAAE,IAAA,SAAAC,GAAA,MAAAA,GAAA1H,SACA5mB,MAAAktB,YAAAqB,SAAArH,EAAA,SAAAsH,GAEA,GAAAC,KACAD,GAAAlrB,QAAA,SAAAsjB,GACA,GAAA8H,GAAAjM,EAAAf,OAAAkF,EACA8H,IACAD,EAAAjqB,KAAAkqB,KAEAN,GACAA,EAAA7C,WAAAkD,GAIA1W,WAAA,WAAA,MAAA0K,GAAAwL,cAAAxL,EAAA0K,YAGAF,EAAA7lB,UAAAsa,OAAA,SAAAkF,GACA,MAAA,QAAAA,EAAA3U,GACAjS,KAAA2uB,kBAAA/H,GAEA,2BAAAA,EAAA3U,GACAjS,KAAA4uB,qCAAAhI,GAEA,qCAAAA,EAAA3U,GACAjS,KAAA6uB,8CAAAjI,GAEA,2BAAAA,EAAA3U,GACAjS,KAAA8uB,qCAAAlI,GAEA,gBAAAA,EAAA3U,GACAjS,KAAA+uB,0BAAAnI,GAEA,oBAAAA,EAAA3U,GACAjS,KAAAgvB,8BAAApI,GAEA,2BAAAA,EAAA3U,GACAjS,KAAAivB,qCAAArI,GAEA,uBAAAA,EAAA3U,GACAjS,KAAAkvB,iCAAAtI,GAEA,0BAAAA,EAAA3U,GACAjS,KAAAmvB,yCAAAvI,GAEA,4BAAAA,EAAA3U,GACAjS,KAAAovB,sCAAAxI,GAEA,4BAAAA,EAAA3U,GACAjS,KAAAqvB,sCAAAzI,GAEA,mBAAAA,EAAA3U,GACAjS,KAAAsvB,6BAAA1I,IAGAlK,QAAAkJ,IAAA,kCAAAgB,GAEA,OAEAqG,EAAA7lB,UAAAunB,kBAAA,SAAAY,GACA,MAAAA,GAAAjoB,MAEA2lB,EAAA7lB,UAAAwnB,qCAAA,SAAAW,GACA,GAAAxG,GAAA/oB,KAAAuoB,cAAAkC,0BAAA8E,EAAA9O,KACA,OAAAsI,IAEA/oB,KAAAuoB,cAAAkD,sBAAAZ,wBAAA9B,GAAA,GACAA,GAFA,MAIAkE,EAAA7lB,UAAAynB,8CAAA,SAAAU,GAEA,MADAvvB,MAAAuoB,cAAAoC,iCAAA4E,EAAA7H,QACA,MAEAuF,EAAA7lB,UAAA0nB,qCAAA,SAAAS,GACA,GAAA9M,GAAAziB,IACA,IAAAA,KAAAuoB,cAAAkD,sBAAAX,0BAAAyE,EAAA9O,MACA,KAAA,IAAA7f,OAAA,iDAAA2uB,EAAA9O,KAAA,yBAEA,IAAAqB,KACAyN,GAAAzN,WAAAxe,QAAA,SAAAof,GACA,GAAAqJ,GAAAtJ,EAAA8F,cAAAlG,UAAAK,EAAA/B,aAAA+B,EAAA7B,UAAA6B,EAAA1a,MAAA0a,EAAArN,IAAAqN,EAAArN,IAAA+J,EAAAO,IAAA3X,QACA+jB,GAAApH,aAAAjC,EAAAqC,WACArC,EAAAzQ,IAAAyQ,EAAAzQ,GAAAud,MAAA,UACAzD,EAAA9Z,GAAAyQ,EAAAzQ,IAEA6P,EAAAtd,KAAAunB,IAEA,IAAA0D,GAAA,GAAArQ,GAAAwC,wBAAA2N,EAAA9O,KAAA8O,EAAA7H,OASA,OARA+H,GAAAjN,cAAAV,GACAyN,EAAAxN,iBACA0N,EAAA1N,gBAAA,GAEA/hB,KAAAuoB,cAAAkD,sBAAApN,IAAAoR,GACAzvB,KAAAuoB,cAAAsD,iCAAA4D,GACAA,EAAApM,2BACAoM,EAAAzM,cACAyM,GAEAxC,EAAA7lB,UAAA2nB,0BAAA,SAAAQ,GACA,GAAAxD,GAAA/rB,KAAAuoB,cAAAkD,sBAAAzH,kBAAAuL,EAAA7O,YACA,OAAAqL,GAIAA,EAAAlH,YAAA0K,EAAA3O,SAEA,MASAmL,EAAArH,SAAA6K,EAAA3O,UACA,OAfAlE,QAAAkJ,IAAA,qBAAA2J,EAAA7O,YAAA,uCAAA6O,EAAAhM,SAAA,iBAAAgM,EAAA3O,UACA,OAgBAqM,EAAA7lB,UAAA4nB,8BAAA,SAAAO,GACA,GAAAxD,GAAA/rB,KAAAuoB,cAAAkD,sBAAAzH,kBAAAuL,EAAA7O,YACA,OAAAqL,IAIAA,EAAAtI,SACA,OAJA/G,QAAAkJ,IAAA,qBAAA2J,EAAA7O,YAAA,sCACA,OAKAuM,EAAA7lB,UAAA6nB,qCAAA,SAAAM,GACA,GAAAG,GAAA1vB,KAAAuoB,cAAAkD,sBAAAhB,0BAAA8E,EAAA9O,KACA,KAAAiP,EAEA,MADAhT,SAAAkJ,IAAA,wBAAA2J,EAAA9O,KAAA,8BACA,IAEA,IAAAkP,GAAA3vB,KAAAuoB,cAAAkD,sBAAAhB,0BAAA8E,EAAA1C,WACA,OAAA8C,IAIAD,EAAAzL,SAAA0L,GACAD,IAJAhT,QAAAkJ,IAAA,wBAAA2J,EAAA1C,WAAA,8BACA,OAKAI,EAAA7lB,UAAA8nB,iCAAA,SAAAK,GACA,GAAAlN,GAAA,GAAAjD,GAAAiF,gBAAAkL,EAAA5O,aAAA4O,EAAA1O,UAAA0O,EAAA3O,SAAA2O,EAAAla,IACA,IAAAka,EAAA1O,UAAA,CACA,GAAA+O,GAAA5vB,KAAAuoB,cAAAkD,sBAAAV,6BAAAwE,EAAA1O,UACA,IAAA+O,EACA,GAAAL,EAAA3O,SAOAgP,EAAAtsB,QAAA,SAAAof,GACAA,EAAAgC,SAAArC,EAAAwC,kBARA,CACA,GAAAnC,GAAAkN,EAAAtJ,OACA5D,IACAL,EAAAqC,SAAAhC,EAAAmC,aAUA,GAAAG,EAUA,OATAuK,GAAA9O,OACAuE,EAAAhlB,KAAAuoB,cAAAkD,sBAAAhB,0BAAA8E,EAAA9O,OAEAuE,IACAA,EAAA,GAAA5F,GAAAwC,wBAAA2N,EAAA9O,KAAA8O,EAAA7H,QACA1nB,KAAAuoB,cAAAkD,sBAAApN,IAAA2G,IAEAhlB,KAAAuoB,cAAAyD,oBAAAhH,EAAA3C,GACAriB,KAAAuoB,cAAAsD,iCAAA7G,GACAA,GAEAiI,EAAA7lB,UAAA+nB,yCAAA,SAAAI,GACA,IAAAA,EAAA9O,KACA,MAAA,KACA,IAAAsI,GAAA/oB,KAAAuoB,cAAAkD,sBAAAhB,0BAAA8E,EAAA9O,KACA,OAAAsI,IAIAA,EAAAtF,SACAsF,IAJArM,QAAAkJ,IAAA,iBAAA2J,EAAA9O,KAAA,8BACA,OAKAwM,EAAA7lB,UAAAgoB,sCAAA,SAAAG,GACA,IAAAA,EAAA9O,KACA,MAAA,KACA,IAAAsI,GAAA/oB,KAAAuoB,cAAAkD,sBAAAhB,0BAAA8E,EAAA9O,KACA,OAAAsI,IAIAA,EAAAvF,QACAuF,IAJArM,QAAAkJ,IAAA,iBAAA2J,EAAA9O,KAAA,6BACA,OAKAwM,EAAA7lB,UAAAioB,sCAAA,SAAAE,GACA,GAAAxD,GAAA/rB,KAAAuoB,cAAAkD,sBAAAzH,kBAAAuL,EAAA7O,YACA,OAAAqL,IAEAA,EAAAwD,EAAAvO,cAAAuO,EAAAvnB,MACA,MAFA,MAIAilB,EAAA7lB,UAAAkoB,6BAAA,SAAAC,GAEA,MADAvvB,MAAAuoB,cAAAY,KAAAoG,EAAApO,WAAA,MACA,MAGA8L,EAAA7lB,UAAAmlB,OAAA,WACAvsB,KAAAstB,cAEAttB,KAAAutB,SAGAvtB,KAAAqtB,kBACArtB,KAAAiuB,eAGAhB,EAAA7lB,UAAA8mB,mBAAA,WACA,GAAA2B,GAAA7vB,IACAA,MAAAutB,SAAA,EACAvtB,KAAAotB,aAAA5oB,MACAoiB,QAAA5mB,KAAA6tB,aACAzR,SACAmP,WAAA,SAAAuE,GAAAD,EAAAtC,SAAA,GACAwC,eAAA,SAIA9C,EAAA7lB,UAAA4mB,QAAA,WACAhuB,KAAAutB,UAEAvtB,KAAAutB,SAAA,EAEAvtB,KAAAktB,YAAA8C,OAAAhwB,KAAA+tB,kBAEAd,IAEA7N,GAAA6N,gBAAAA,GACA7N,IAAAA,MAUA,IAAAA,IACA,SAAAA,GAGA,QAAAnf,GAAAgwB,EAAAzM,EAAA2J,GAEA,MADA,UAAAA,IAAAA,EAAA,KACA+C,IAAAD,IAAAA,GAAAzM,MAAAA,GAAA2J,QAAAA,GAAAgD,QAIA,QAAAD,KACA,MAAA,IAAA9Q,GAAAgR,eAHAhR,EAAAnf,QAAAA,EAKAmf,EAAA8Q,YAAAA,GACA9Q,IAAAA,MAIA,IAAAA,IACA,SAAAA,GAKA,GAAAiR,GAAA,WACA,QAAAA,MASA,MAPAA,GAAAjpB,UAAAmnB,SAAA,SAAArH,EAAAoJ,GAEAA,OAEAD,EAAAjpB,UAAA4oB,OAAA,SAAApJ,KAGAyJ,IAEAjR,GAAAiR,cAAAA,GACAjR,IAAAA,MAKA,IAAAA,IACA,SAAAA,GACA,GAAAmR,GAAA,WACA,QAAAA,GAAAN,EAAAzM,EAAAgN,EAAAC,EAAAC,GACA,SAAAlN,IAAAA,GAAA,GACA,SAAAgN,IAAAA,EAAA,SACA,SAAAC,IAAAA,EAAA,MACA,SAAAC,IAAAA,GAAA,GACA1wB,KAAAiwB,IAAAA,EACAjwB,KAAAwwB,QAAAA,EACAxwB,KAAA2wB,WACAC,SAAA,EACAC,QAAA,KAEA7wB,KAAAywB,aAAAA,EACAzwB,KAAA0wB,YAAAA,EACA1wB,KAAA8wB,KAAA,GAAAC,gBACA/wB,KAAAgxB,IAAA,GAAAD,gBACA/wB,KAAA0wB,aACA,mBAAA1wB,MAAA8wB,OACA9wB,KAAA8wB,KAAAG,iBAAA,EACAjxB,KAAAgxB,IAAAC,iBAAA,GAGAjxB,KAAAwtB,MAAA,GAAApO,GAAA4H,MACAxD,GACAxjB,KAAAkxB,aA2DA,MAxDAX,GAAAnpB,UAAAmnB,SAAA,SAAArH,EAAAoJ,GACA,GAAA7N,GAAAziB,IACAA,MAAA8wB,KAAAK,QAAA,SAAAjO,GACAT,EAAA2O,YAAA,UAAA,IACAd,OAEAtwB,KAAA8wB,KAAAO,mBAAA,SAAAnO,GACA,GAAAT,EAAAqO,KAAAQ,YAAA7O,EAAAkO,UAAAC,SACA,GAAAnO,EAAAqO,KAAAS,QAAA9O,EAAAkO,UAAAE,QAAA,CACA,GAAAW,GAAA/O,EAAAqO,KAAAU,YACA,IAAAA,EAAAC,OAAAzwB,OAAA,EACA,IACA,GAAA0wB,GAAAjP,EAAA+K,MAAAnG,OAAAmK,EACAlB,GAAAoB,GAEA,MAAArU,GACAX,QAAAkJ,IAAA,wCAAAvI,GACAX,QAAAkJ,IAAA,2BAAA4L,GACA/O,EAAA2O,YAAA,cAAA,4CAAAI,GACAlB,UAIA7N,GAAA2O,YAAA,cAAA,uCACAd,UAIA7N,GAAA2O,YAAA,cAAA,uCACAd,OAIAtwB,KAAA8wB,KAAAa,KAAA,OAAA3xB,KAAAiwB,KAAA,GACA,oBAAAjwB,MAAA8wB,MACA9wB,KAAA8wB,KAAAc,iBAAA,6BAAA5xB,KAAAwwB,SAEAxwB,KAAA8wB,KAAA3H,KAAAnpB,KAAAwtB,MAAAvG,OAAAC,KAEAqJ,EAAAnpB,UAAAgqB,YAAA,SAAAjpB,EAAA0pB,GACA,GAAAC,IAAA3pB,KAAAA,EAAA8nB,IAAAjwB,KAAAiwB,IAAA8B,WAAA/xB,KAAA8wB,KAAAS,OAAAM,QAAAA,EACA7xB,MAAAywB,aACAzwB,KAAAywB,aAAAqB,GAGApV,QAAAkJ,IAAA,mBAAAkM,IAGAvB,EAAAnpB,UAAA4oB,OAAA,SAAApJ,GACA5mB,KAAAgxB,IAAAW,KAAA,OAAA3xB,KAAAiwB,KAAA,GACAjwB,KAAAgxB,IAAA7H,KAAAnpB,KAAAwtB,MAAAvG,QAAAL,MAEA2J,EAAAnpB,UAAA8pB,WAAA,WACAlxB,KAAA8wB,KAAAa,KAAA,OAAA3xB,KAAAiwB,IAAA,eAAA,GACAjwB,KAAA8wB,KAAA3H,QAEAoH,IAEAnR,GAAAmR,gBAAAA,GACAnR,IAAAA,MAQA,IAAAA,IACA,SAAAA,GACA,GAAAgR,GAAA,WACA,QAAAA,KACApwB,KAAAgyB,QAAA,EACAhyB,KAAAiyB,SAAA,IACAjyB,KAAAkyB,cAAA,GACAlyB,KAAAmyB,cAAA,EAyCA,MAvCA/B,GAAAhpB,UAAA6oB,IAAA,SAAAA,GAEA,MADAjwB,MAAAoyB,KAAAnC,EACAjwB,MAEAowB,EAAAhpB,UAAAoc,MAAA,SAAAA,GAEA,MADAxjB,MAAAgyB,OAAAxO,EACAxjB,MAEAowB,EAAAhpB,UAAA+lB,QAAA,SAAAA,GAEA,MADAntB,MAAAiyB,SAAA9E,EACAntB,MAEAowB,EAAAhpB,UAAAqf,aAAA,SAAAA,GAEA,MADAzmB,MAAAkyB,cAAAzL,EACAzmB,MAEAowB,EAAAhpB,UAAAspB,YAAA,SAAAA,GAEA,MADA1wB,MAAAmyB,aAAAzB,EACA1wB,MAEAowB,EAAAhpB,UAAAqpB,aAAA,SAAAA,GAEA,MADAzwB,MAAAqyB,cAAA5B,EACAzwB,MAEAowB,EAAAhpB,UAAA+oB,MAAA,WACAzT,QAAAkJ,IAAA,uBACA,IACAsH,GADA3E,EAAA,GAAAnJ,GAAA+L,aAWA,OARA+B,GADA,MAAAltB,KAAAoyB,MAAApyB,KAAAoyB,KAAApxB,OAAA,EACA,GAAAoe,GAAAmR,gBAAAvwB,KAAAoyB,KAAApyB,KAAAgyB,OAAA,QAAAhyB,KAAAqyB,cAAAryB,KAAAmyB,cAGA,GAAA/S,GAAAiR,cAEA9H,EAAA6C,mBAAA,GAAAhM,GAAA6N,gBAAAC,EAAA3E,EAAAvoB,KAAAiyB,SAAAjyB,KAAAkyB,gBACA3J,EAAAmD,oBAAA,GAAAtM,GAAAkJ,iBAAAC,IACA7L,QAAAkJ,IAAA,6BACA2C,GAEA6H,IAEAhR,GAAAgR,eAAAA,GACAhR,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAkT,GAAA,SAAA9R,GAEA,QAAA8R,GAAA7R,GACAD,EAAAzf,KAAAf,MACAA,KAAAygB,KAAAA,EACAzgB,KAAAiS,GAAA,uBACAjS,KAAA8gB,UAAA,wDAEA,MAPAV,GAAAkS,EAAA9R,GAOA8R,GACAlT,EAAAM,QACAN,GAAAkT,4BAAAA,GACAlT,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAmT,GAAA,SAAA/R,GAEA,QAAA+R,GAAA9R,GACAD,EAAAzf,KAAAf,MACAA,KAAAygB,KAAAA,EACAzgB,KAAAiS,GAAA,yBACAjS,KAAA8gB,UAAA,0DAEA,MAPAV,GAAAmS,EAAA/R,GAOA+R,GACAnT,EAAAM,QACAN,GAAAmT,8BAAAA,GACAnT,IAAAA,OAEA3f,EAAAD,QAAA4f,OjEy2CMoT,IAAI,SAAStxB,EAAQzB,EAAOD,GkE9kGlC,YAUA,SAAAizB,GAAAC,GACAC,EAAA,gCACAC,EAAAF,EAAA,mBAEA1yB,KAAA0yB,gBAAAA,EACA1yB,KAAA6yB,cAAA,GAAA1xB,GACAnB,KAAA8yB,gBAAA,GAAA3xB,GACAnB,KAAA+yB,gBAAA,GAAA5xB,GACAnB,KAAAgzB,qBAAA,GAAA7xB,GACAnB,KAAAizB,oBACAjzB,KAAAkzB,sBACAlzB,KAAAmzB,sBACAnzB,KAAAozB,0BAEA,IAAArzB,GAAAC,IACAA,MAAA0yB,gBAAAW,YAAA,SAAAlnB,EAAAmnB,GACA,GAAAC,GAAAxzB,EAAA8yB,cAAA/qB,IAAAqE,EACAqnB,GAAAD,IACAA,EAAAjwB,QAAA,SAAA8Y,GACA,IACAA,EAAAkX,GACA,MAAApzB,GACAwc,QAAA+W,KAAA,sEAAAtnB,EAAAjM,MAIAH,EAAAkzB,iBAAA3vB,QAAA,SAAA8Y,GACA,IACAA,EAAAkX,GACA,MAAApzB,GACAwc,QAAA+W,KAAA,oEAAAvzB,QAIAF,KAAA0yB,gBAAAgB,cAAA,SAAAvnB,EAAAmnB,GACA,GAAAC,GAAAxzB,EAAA+yB,gBAAAhrB,IAAAqE,EACAqnB,GAAAD,IACAA,EAAAjwB,QAAA,SAAA8Y,GACA,IACAA,EAAAkX,GACA,MAAApzB,GACAwc,QAAA+W,KAAA,wEAAAtnB,EAAAjM,MAIAH,EAAAmzB,mBAAA5vB,QAAA,SAAA8Y,GACA,IACAA,EAAAkX,GACA,MAAApzB,GACAwc,QAAA+W,KAAA,sEAAAvzB,QAIAF,KAAA0yB,gBAAAiB,aAAA,SAAAxnB,EAAAmnB,EAAA3S,EAAAC,EAAA2C,GACA,GAAAgQ,GAAAxzB,EAAAgzB,gBAAAjrB,IAAAqE,EACAqnB,GAAAD,IACAA,EAAAjwB,QAAA,SAAA8Y,GACA,IACAA,EAAAkX,EAAA3S,EAAAC,EAAA2C,GACA,MAAArjB,GACAwc,QAAA+W,KAAA,uEAAAtnB,EAAAjM,MAIAH,EAAAozB,mBAAA7vB,QAAA,SAAA8Y,GACA,IACAA,EAAAkX,EAAA3S,EAAAC,EAAA2C,GACA,MAAArjB,GACAwc,QAAA+W,KAAA,qEAAAvzB,QAIAF,KAAA0yB,gBAAAkB,cAAA,SAAAznB,EAAAmnB,EAAA3S,EAAAna,EAAAqtB,EAAAC,GACA,GAAAP,GAAAxzB,EAAAizB,qBAAAlrB,IAAAqE,EACAqnB,GAAAD,IACAA,EAAAjwB,QAAA,SAAA8Y,GACA,IACAA,EAAAkX,EAAA3S,EAAAna,EAAAqtB,EAAAC,GACA,MAAA5zB,GACAwc,QAAA+W,KAAA,wEAAAtnB,EAAAjM,MAIAH,EAAAqzB,wBAAA9vB,QAAA,SAAA8Y,GACA,IACAA,EAAAkX,EAAA3S,EAAAna,EAAAqtB,EAAAC,GACA,MAAA5zB,GACAwc,QAAA+W,KAAA,sEAAAvzB,QA/FAgB,EAAA,iBACA,IAAAC,GAAAD,EAAA,8CACA6yB,EAAA7yB,EAAA,cACAsyB,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,UAkGAH,GAAArrB,UAAA4sB,iBAAA,SAAAV,EAAA3S,EAAAC,GAKA,MAJA+R,GAAA,8DACAC,EAAAU,EAAA,QACAV,EAAAjS,EAAA,gBAEA3gB,KAAA0yB,gBAAAsB,iBAAAV,EAAA3S,EAAAC,IAIA6R,EAAArrB,UAAA6sB,kBAAA,SAAAX,EAAA3S,EAAAna,EAAAqtB,EAAAK,GACAvB,EAAA,oFACAC,EAAAU,EAAA,QACAV,EAAAjS,EAAA,gBACAiS,EAAApsB,EAAA,SACAosB,EAAAiB,EAAA,SACAjB,EAAAsB,EAAA,mBAEAl0B,KAAA0yB,gBAAAuB,kBAAAX,EAAA3S,EAAAna,EAAAqtB,EAAAK,IAIAzB,EAAArrB,UAAA+sB,UAAA,SAAAb,GAKA,KAJAX,GAAA,+BACAC,EAAAU,EAAA,QAGA,GAAA1yB,OAAA,wBAIA6xB,EAAArrB,UAAAhF,OAAA,SAAA+J,GAKA,KAJAwmB,GAAA,4BACAC,EAAAzmB,EAAA,QAGA,GAAAvL,OAAA,wBAIA6xB,EAAArrB,UAAAiX,IAAA,SAAAlS,EAAAmnB,GAMA,KALAX,GAAA,+BACAC,EAAAzmB,EAAA,QACAymB,EAAAU,EAAA,QAGA,GAAA1yB,OAAA,wBAIA6xB,EAAArrB,UAAAgtB,OAAA,SAAAjoB,EAAAkoB,GAMA,KALA1B,GAAA,wCACAC,EAAAzmB,EAAA,QACAymB,EAAAyB,EAAA,cAGA,GAAAzzB,OAAA,wBAIA6xB,EAAArrB,UAAA0gB,OAAA,SAAAwL,GAKA,KAJAX,GAAA,4BACAC,EAAAU,EAAA,QAGA,GAAA1yB,OAAA,wBAIA6xB,EAAArrB,UAAAktB,UAAA,SAAAD,GAKA,KAJA1B,GAAA,qCACAC,EAAAyB,EAAA,cAGA,GAAAzzB,OAAA,wBAIA6xB,EAAArrB,UAAAmtB,SAAA,SAAAC,GAKA,KAJA7B,GAAA,mCACAC,EAAA4B,EAAA,aAGA,GAAA5zB,OAAA,wBAIA6xB,EAAArrB,UAAAqtB,QAAA,SAAAtoB,EAAAqV,GACA,GAAAzhB,GAAAC,IACA,IAAAwzB,EAAAhS,GAaA,CACAmR,EAAA,2CACAC,EAAAzmB,EAAA,QACAymB,EAAApR,EAAA,eAEA,IAAA+R,GAAAxzB,EAAA8yB,cAAA/qB,IAAAqE,EAKA,OAJAqnB,GAAAD,KACAA,MAEAxzB,EAAA8yB,cAAA9f,IAAA5G,EAAAonB,EAAAxa,OAAAyI,KAEAkT,YAAA,WACA,GAAAnB,GAAAxzB,EAAA8yB,cAAA/qB,IAAAqE,EACAqnB,GAAAD,IACAxzB,EAAA8yB,cAAA9f,IAAA5G,EAAAonB,EAAAlJ,OAAA,SAAAriB,GACA,MAAAA,KAAAwZ,OAtBA,MALAA,GAAArV,EACAwmB,EAAA,qCACAC,EAAApR,EAAA,gBAEAzhB,EAAAkzB,iBAAAlzB,EAAAkzB,iBAAAla,OAAAyI,IAEAkT,YAAA,WACA30B,EAAAkzB,iBAAAlzB,EAAAkzB,iBAAA5I,OAAA,SAAAriB,GACA,MAAAA,KAAAwZ,OA4BAiR,EAAArrB,UAAAutB,UAAA,SAAAxoB,EAAAqV,GACA,GAAAzhB,GAAAC,IACA,IAAAwzB,EAAAhS,GAaA,CACAmR,EAAA,6CACAC,EAAAzmB,EAAA,QACAymB,EAAApR,EAAA,eAEA,IAAA+R,GAAAxzB,EAAA+yB,gBAAAhrB,IAAAqE,EAKA,OAJAqnB,GAAAD,KACAA,MAEAxzB,EAAA+yB,gBAAA/f,IAAA5G,EAAAonB,EAAAxa,OAAAyI,KAEAkT,YAAA,WACA,GAAAnB,GAAAxzB,EAAA+yB,gBAAAhrB,IAAAqE,EACAqnB,GAAAD,IACAxzB,EAAA+yB,gBAAA/f,IAAA5G,EAAAonB,EAAAlJ,OAAA,SAAAriB,GACA,MAAAA,KAAAwZ,OAtBA,MALAA,GAAArV,EACAwmB,EAAA,uCACAC,EAAApR,EAAA,gBAEAzhB,EAAAmzB,mBAAAnzB,EAAAmzB,mBAAAna,OAAAyI,IAEAkT,YAAA,WACA30B,EAAAmzB,mBAAAnzB,EAAAmzB,mBAAA7I,OAAA,SAAAriB,GACA,MAAAA,KAAAwZ,OA4BAiR,EAAArrB,UAAAusB,aAAA,SAAAxnB,EAAAqV,GACA,GAAAzhB,GAAAC,IACA,IAAAwzB,EAAAhS,GAaA,CACAmR,EAAA,gDACAC,EAAAzmB,EAAA,QACAymB,EAAApR,EAAA,eAEA,IAAA+R,GAAAxzB,EAAAgzB,gBAAAjrB,IAAAqE,EAKA,OAJAqnB,GAAAD,KACAA,MAEAxzB,EAAAgzB,gBAAAhgB,IAAA5G,EAAAonB,EAAAxa,OAAAyI,KAEAkT,YAAA,WACA,GAAAnB,GAAAxzB,EAAAgzB,gBAAAjrB,IAAAqE,EACAqnB,GAAAD,IACAxzB,EAAAgzB,gBAAAhgB,IAAA5G,EAAAonB,EAAAlJ,OAAA,SAAAriB,GACA,MAAAA,KAAAwZ,OAtBA,MALAA,GAAArV,EACAwmB,EAAA,0CACAC,EAAApR,EAAA,gBAEAzhB,EAAAozB,mBAAApzB,EAAAozB,mBAAApa,OAAAyI,IAEAkT,YAAA,WACA30B,EAAAozB,mBAAApzB,EAAAozB,mBAAA9I,OAAA,SAAAriB,GACA,MAAAA,KAAAwZ,OA4BAiR,EAAArrB,UAAAwsB,cAAA,SAAAznB,EAAAqV,GACA,GAAAzhB,GAAAC,IACA,IAAAwzB,EAAAhS,GAaA,CACAmR,EAAA,iDACAC,EAAAzmB,EAAA,QACAymB,EAAApR,EAAA,eAEA,IAAA+R,GAAAxzB,EAAAizB,qBAAAlrB,IAAAqE,EAKA,OAJAqnB,GAAAD,KACAA,MAEAxzB,EAAAizB,qBAAAjgB,IAAA5G,EAAAonB,EAAAxa,OAAAyI,KAEAkT,YAAA,WACA,GAAAnB,GAAAxzB,EAAAizB,qBAAAlrB,IAAAqE,EACAqnB,GAAAD,IACAxzB,EAAAizB,qBAAAjgB,IAAA5G,EAAAonB,EAAAlJ,OAAA,SAAAriB,GACA,MAAAA,KAAAwZ,OAtBA,MALAA,GAAArV,EACAwmB,EAAA,2CACAC,EAAApR,EAAA,gBAEAzhB,EAAAqzB,wBAAArzB,EAAAqzB,wBAAAra,OAAAyI,IAEAkT,YAAA,WACA30B,EAAAqzB,wBAAArzB,EAAAqzB,wBAAA/I,OAAA,SAAAriB,GACA,MAAAA,KAAAwZ,OA6BAhiB,EAAAizB,YAAAA,IlEimGGmC,6CAA6C,EAAEC,iBAAiB,GAAGC,aAAa,KAAKC,IAAI,SAAS7zB,EAAQzB,EAAOD,GmE77GpH,YAiBA,SAAAw1B,GAAAtC,EAAAvmB,EAAAnE,GACA,MAAAwrB,GAAAxrB,GACAmE,IAAA8oB,EAAAvC,EAAAwC,gBAAAptB,IAAAE,GAAAA,EADA,KAIA,QAAAmtB,GAAAzC,EAAA1qB,GACA,MAAA,gBAAAA,IAAA,OAAAA,EAAA0qB,EAAA0C,cAAAttB,IAAAE,GAAAA,EAGA,QAAAqtB,GAAAp1B,EAAAq1B,EAAA3U,EAAA3K,EAAAuf,GACA,GAAAzT,IACA7hB,EAAAoiB,UAAA,wBAAA,KAAA,UACApiB,EAAAoiB,UAAA,SAAA,KAAAiT,GACAr1B,EAAAoiB,UAAA,YAAA,KAAA1B,GACA1gB,EAAAoiB,UAAA,MAAA,KAAArM,GACA/V,EAAAoiB,UAAA,UAAA,KAAAkT,GAEAt1B,GAAA+kB,kBAAAvZ,MAAAxL,GAAA,KAAA,oBAAA8Y,OAAA+I,IAGA,QAAA0T,GAAAv1B,EAAAq1B,EAAA3U,EAAAxX,EAAAssB,GACA,GAAA3T,IACA7hB,EAAAoiB,UAAA,wBAAA,KAAA,UACApiB,EAAAoiB,UAAA,SAAA,KAAAiT,GACAr1B,EAAAoiB,UAAA,YAAA,KAAA1B,GACA1gB,EAAAoiB,UAAA,OAAA,KAAAlZ,GACAlJ,EAAAoiB,UAAA,KAAA,KAAAoT,GAEAx1B,GAAA+kB,kBAAAvZ,MAAAxL,GAAA,KAAA,oBAAA8Y,OAAA+I,IAGA,QAAA4T,GAAAhD,EAAAvmB,EAAAmnB,EAAA3S;AACA,GAAAgV,GAAArC,EAAA3S,EACA6S,GAAAmC,IACAjD,EAAAkD,uBAAAtyB,QAAA,SAAA8Y,GACA,IACAA,EAAAjQ,EAAAmnB,EAAA3S,KAAA5c,QACA,MAAA7D,GACAwc,QAAA+W,KAAA,8DAAAvzB,MAMA,QAAA21B,GAAAvC,EAAA3S,GACA,GAAA6S,EAAAsC,GACA,KAAA,IAAAl1B,OAAA,sDAEAk1B,IACAxC,KAAAA,EACA3S,aAAAA,GAIA,QAAAoV,GAAAzC,EAAA3S,GACA,MAAA6S,GAAAsC,IAAAA,EAAAxC,OAAAA,GAAAwC,EAAAnV,eAAAA,EAGA,QAAAqV,KACAF,EAAA,KAIA,QAAAG,GAAAh2B,GACA0yB,EAAA,4BACAC,EAAA3yB,EAAA,WAEAD,KAAAC,QAAAA,EACAD,KAAAk2B,QAAA,GAAA/0B,GACAnB,KAAAk1B,gBAAA,GAAA/zB,GACAnB,KAAAo1B,cAAA,GAAAj0B,GACAnB,KAAAm2B,WAAA,GAAAh1B,GACAnB,KAAAo2B,qBACAp2B,KAAAq2B,uBACAr2B,KAAA41B,0BACA51B,KAAAs2B,uBA1FAp1B,EAAA,iBACA,IAAAC,GAAAD,EAAA,8CACAke,EAAAle,EAAA,4BAEA6yB,EAAA7yB,EAAA,cACAsyB,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,WAEA2D,EAAA,EACAC,EAAA,EACAvB,EAAA,EAEAa,EAAA,IAiFAG,GAAA7uB,UAAA4sB,iBAAA,SAAAV,EAAA3S,EAAAC,GACA+R,EAAA,kEACAC,EAAAU,EAAA,QACAV,EAAAjS,EAAA,eAEA,IAAA2U,GAAAt1B,KAAAo1B,cAAAttB,IAAAwrB,EACA,IAAAE,EAAA8B,GAAA,CACA,GAAAvM,GAAA/oB,KAAAC,QAAAwqB,0BAAA6K,EACA,IAAA9B,EAAAzK,GAAA,CACA,GAAA0N,GAAAz2B,KAAAk2B,QAAApuB,IAAAihB,EAAAlH,uBACA1V,EAAAsqB,EAAA9V,GACA0B,EAAA0G,EAAAjF,4BAAAnD,EACA,IAAA6S,EAAArnB,IAAAqnB,EAAAnR,GAAA,CACA,GAAAkB,GAAAlB,EAAAwC,UAEA,OADAxC,GAAAqC,SAAAyQ,EAAAn1B,KAAA4gB,IACAoU,EAAAh1B,KAAAmM,EAAAoX,OAOA0S,EAAA7uB,UAAA6sB,kBAAA,SAAAX,EAAA3S,EAAAna,EAAAqtB,EAAAK,GAQA,GAPAvB,EAAA,wFACAC,EAAAU,EAAA,QACAV,EAAAjS,EAAA,gBACAiS,EAAApsB,EAAA,SACAosB,EAAAiB,EAAA,SACAjB,EAAAsB,EAAA,oBAEA6B,EAAAzC,EAAA3S,GAAA,CAGA,GAAA2U,GAAAt1B,KAAAo1B,cAAAttB,IAAAwrB,GACAoD,EAAApD,EAAA3S,EACA,IAAA6S,EAAA8B,IAAA9B,EAAAkD,GAAA,CACApnB,MAAAqnB,QAAAzC,IAAAA,EAAAlzB,OAAA,GACAw0B,EAAAx1B,KAAAC,QAAAq1B,EAAA3U,EAAAna,EAAAA,EAAA0tB,EAAAlzB,OAEA,KAAA,GAAAL,GAAA6F,EAAAA,EAAAqtB,EAAAlzB,EAAAA,IACA00B,EAAAr1B,KAAAC,QAAAq1B,EAAA3U,EAAAhgB,EAAAw0B,EAAAn1B,KAAA02B,EAAA/1B,QAMAs1B,EAAA7uB,UAAAisB,YAAA,SAAAjX,GACAuW,EAAA,wCACAC,EAAAxW,EAAA,WACApc,KAAAo2B,kBAAA5xB,KAAA4X,IAIA6Z,EAAA7uB,UAAAssB,cAAA,SAAAtX,GACAuW,EAAA,0CACAC,EAAAxW,EAAA,WACApc,KAAAq2B,oBAAA7xB,KAAA4X,IAIA6Z,EAAA7uB,UAAAusB,aAAA,SAAAvX,GACAuW,EAAA,yCACAC,EAAAxW,EAAA,WACApc,KAAA41B,uBAAApxB,KAAA4X,IAIA6Z,EAAA7uB,UAAAwsB,cAAA,SAAAxX,GACAuW,EAAA,0CACAC,EAAAxW,EAAA,WACApc,KAAAs2B,oBAAA9xB,KAAA4X,IAIA6Z,EAAA7uB,UAAAwvB,cAAA,SAAA7N,GAIA,GAHA4J,EAAA,wCACAC,EAAA7J,EAAA,UAEA/oB,KAAAk2B,QAAAruB,IAAAkhB,EAAA9W,IAAA,CAIA,GAAAwkB,KACA1N,GAAAjH,WAAAuI,OAAA,SAAAhI,GACA,MAAAA,GAAA1B,aAAAkW,OAAA,SAAA,IACAvzB,QAAA,SAAA+e,GACAoU,EAAApU,EAAA1B,cAAA4V,EAEAlU,EAAAY,cAAA,SAAA3L,GACAmf,EAAApU,EAAA1B,cAAArJ,EAAAsJ,aAGA5gB,KAAAk2B,QAAAnjB,IAAAgW,EAAA9W,GAAAwkB,KAIAR,EAAA7uB,UAAA0vB,gBAAA,SAAA/N,GACA4J,EAAA,0CACAC,EAAA7J,EAAA,SAEA/oB,KAAAk2B,QAAA,UAAAnN,EAAA9W,KAIAgkB,EAAA7uB,UAAA2vB,KAAA,SAAAhO,GACA4J,EAAA,+BACAC,EAAA7J,EAAA,QAEA,IAAAhpB,GAAAC,KACAy2B,EAAAz2B,KAAAk2B,QAAApuB,IAAAihB,EAAAlH,uBACAyR,IA6BA,OA5BAvK,GAAAjH,WAAAuI,OAAA,SAAAhI,GACA,MAAAA,GAAAhN,MAAA+J,EAAAO,IAAA3X,SAAAqa,EAAA1B,aAAAkW,OAAA,SAAA,IACAvzB,QAAA,SAAA+e,GACAiR,EAAAjR,EAAA1B,cAAA,KACA0B,EAAAY,cAAA,SAAA3L,GACA,GAAAA,EAAAiM,WAAAjM,EAAAsJ,SAAA,CACA,GAAA2C,GAAAyR,EAAAj1B,EAAA02B,EAAApU,EAAA1B,cAAArJ,EAAAiM,UACA3C,EAAAoU,EAAAj1B,EAAA02B,EAAApU,EAAA1B,cAAArJ,EAAAsJ,SACA7gB,GAAA61B,uBAAAtyB,QAAA,SAAA8Y,GACA,IACAA,EAAA2M,EAAAlH,sBAAAyR,EAAAjR,EAAA1B,aAAAC,EAAA2C,GACA,MAAArjB,GACAwc,QAAA+W,KAAA,8DAAAvzB,WAMAF,KAAAk1B,gBAAAniB,IAAAgW,EAAA9W,GAAAqhB,GACAtzB,KAAAo1B,cAAAriB,IAAAugB,EAAAvK,EAAA9W,IACAjS,KAAAm2B,WAAApjB,IAAAgW,EAAA9W,GAAAwkB,GACAz2B,KAAAo2B,kBAAA9yB,QAAA,SAAA8Y,GACA,IACAA,EAAA2M,EAAAlH,sBAAAyR,GACA,MAAApzB,GACAwc,QAAA+W,KAAA,6DAAAvzB,MAGAozB,GAIA2C,EAAA7uB,UAAA4vB,OAAA,SAAAjO,GACA4J,EAAA,iCACAC,EAAA7J,EAAA,QAEA,IAAAuK,GAAAtzB,KAAAk1B,gBAAAptB,IAAAihB,EAAA9W,GAaA,OAZAjS,MAAAk1B,gBAAA,UAAAnM,EAAA9W,IACAjS,KAAAo1B,cAAA,UAAA9B,GACAtzB,KAAAm2B,WAAA,UAAApN,EAAA9W,IACAuhB,EAAAF,IACAtzB,KAAAq2B,oBAAA/yB,QAAA,SAAA8Y,GACA,IACAA,EAAA2M,EAAAlH,sBAAAyR,GACA,MAAApzB,GACAwc,QAAA+W,KAAA,+DAAAvzB,MAIAozB,GAIA2C,EAAA7uB,UAAA6vB,aAAA,SAAAlO,GACA4J,EAAA,uCACAC,EAAA7J,EAAA,QAEA,IAAA3c,GAAA2c,EAAAjF,4BAAA,UACAzB,EAAA0G,EAAAjF,4BAAA,aACA9N,EAAA+S,EAAAjF,4BAAA,OACAyR,EAAAxM,EAAAjF,4BAAA,UAEA,MAAA0P,EAAApnB,IAAAonB,EAAAnR,IAAAmR,EAAAxd,IAAAwd,EAAA+B,IAuBA,KAAA,IAAA30B,OAAA,4CAtBA,IAAA61B,GAAAz2B,KAAAm2B,WAAAruB,IAAAsE,EAAApE,OACAsrB,EAAAtzB,KAAAk1B,gBAAAptB,IAAAsE,EAAApE,MACA,KAAAwrB,EAAAF,KAAAE,EAAAiD,GAiBA,KAAA,IAAA71B,OAAA,kEAhBA,IAAAuL,GAAA4c,EAAAlH,sBACAtb,EAAAyuB,EAAAh1B,KAAAy2B,EAAApU,EAAAra,OAAAutB,EAAAvtB,MACA0tB,GAAA11B,KAAAmM,EAAAmnB,EAAAjR,EAAAra,MACA,KACA6tB,EAAAvC,EAAAjR,EAAAra,OACAhI,KAAAs2B,oBAAAhzB,QAAA,SAAA8Y,GACA,IACAA,EAAAjQ,EAAAmnB,EAAAjR,EAAAra,MAAAgO,EAAAhO,MAAA,EAAAzB,GACA,MAAArG,GACAwc,QAAA+W,KAAA,+DAAAvzB,MAGA,QACA81B,MAWAC,EAAA7uB,UAAA8vB,aAAA,SAAAnO,GACA4J,EAAA,uCACAC,EAAA7J,EAAA,QAEA,IAAA3c,GAAA2c,EAAAjF,4BAAA,UACAzB,EAAA0G,EAAAjF,4BAAA,aACA3a,EAAA4f,EAAAjF,4BAAA,QACA2R,EAAA1M,EAAAjF,4BAAA,KAEA,MAAA0P,EAAApnB,IAAAonB,EAAAnR,IAAAmR,EAAArqB,IAAAqqB,EAAAiC,IAqBA,KAAA,IAAA70B,OAAA,4CApBA,IAAA0yB,GAAAtzB,KAAAk1B,gBAAAptB,IAAAsE,EAAApE,MACA,KAAAwrB,EAAAF,GAgBA,KAAA,IAAA1yB,OAAA,kEAfA,IAAAuL,GAAA4c,EAAAlH,qBACA6T,GAAA11B,KAAAmM,EAAAmnB,EAAAjR,EAAAra,MACA,KACA6tB,EAAAvC,EAAAjR,EAAAra,OACAhI,KAAAs2B,oBAAAhzB,QAAA,SAAA8Y,GACA,IACAA,EAAAjQ,EAAAmnB,EAAAjR,EAAAra,MAAAmB,EAAAnB,MAAAytB,EAAAztB,MAAAmB,EAAAnB,OACA,MAAA9H,GACAwc,QAAA+W,KAAA,+DAAAvzB,MAGA,QACA81B,MAWAC,EAAA7uB,UAAA+vB,aAAA,SAAApO,GACA4J,EAAA,uCACAC,EAAA7J,EAAA,QAEA,IAAA3c,GAAA2c,EAAAjF,4BAAA,UACAzB,EAAA0G,EAAAjF,4BAAA,aACA9N,EAAA+S,EAAAjF,4BAAA,OACAyR,EAAAxM,EAAAjF,4BAAA,UAEA,MAAA0P,EAAApnB,IAAAonB,EAAAnR,IAAAmR,EAAAxd,IAAAwd,EAAA+B,IAuBA,KAAA,IAAA30B,OAAA,4CAtBA,IAAA61B,GAAAz2B,KAAAm2B,WAAAruB,IAAAsE,EAAApE,OACAsrB,EAAAtzB,KAAAk1B,gBAAAptB,IAAAsE,EAAApE,MACA,KAAAwrB,EAAAF,KAAAE,EAAAiD,GAiBA,KAAA,IAAA71B,OAAA,kEAhBA,IAAAuL,GAAA4c,EAAAlH,sBACAtb,EAAAyuB,EAAAh1B,KAAAy2B,EAAApU,EAAAra,OAAAutB,EAAAvtB,MACA0tB,GAAA11B,KAAAmM,EAAAmnB,EAAAjR,EAAAra,MACA,KACA6tB,EAAAvC,EAAAjR,EAAAra,OACAhI,KAAAs2B,oBAAAhzB,QAAA,SAAA8Y,GACA,IACAA,EAAAjQ,EAAAmnB,EAAAjR,EAAAra,MAAAgO,EAAAhO,MAAA,EAAAzB,GACA,MAAArG,GACAwc,QAAA+W,KAAA,+DAAAvzB,MAGA,QACA81B,MAWAC,EAAA7uB,UAAAgwB,kBAAA,SAAAC,GACA,IAAA7D,EAAA6D,GACA,OAAArvB,MAAAqvB,EAAAlrB,KAAAoqB,EAEA,IAAApqB,SAAAkrB,EACA,IAAA,WAAAlrB,EAAA,CACA,GAAAnE,GAAAhI,KAAAo1B,cAAAttB,IAAAuvB,EACA,IAAA7D,EAAAxrB,GACA,OAAAA,MAAAA,EAAAmE,KAAA8oB,EAEA,MAAA,IAAAxxB,WAAA,0CAEA,GAAA,WAAA0I,GAAA,WAAAA,GAAA,YAAAA,EACA,OAAAnE,MAAAqvB,EAAAlrB,KAAAqqB,EAEA,MAAA,IAAA/yB,WAAA,+DAIAwyB,EAAA7uB,UAAAkwB,iBAAA,SAAAtvB,EAAAmE,GACA,MAAA6oB,GAAAh1B,KAAAmM,EAAAnE,IAKAxI,EAAAy2B,gBAAAA,EACAz2B,EAAA+2B,QAAAA,EACA/2B,EAAAg3B,WAAAA,EACAh3B,EAAAy1B,aAAAA,InEi9GGL,6CAA6C,EAAE2C,2BAA2B,GAAG1C,iBAAiB,GAAGC,aAAa,KAAK0C,IAAI,SAASt2B,EAAQzB,EAAOD,GoE91HlJ,YAWA,SAAAi4B,GAAAx3B,EAAAy3B,EAAAC,EAAA3O,GACA2J,EAAA,qEACAC,EAAA3yB,EAAA,WACA2yB,EAAA8E,EAAA,eACA9E,EAAA+E,EAAA,qBACA/E,EAAA5J,EAAA,aAEAhpB,KAAAC,QAAAA,EACAD,KAAA03B,YAAAA,EACA13B,KAAA43B,mBAAAD,EACA33B,KAAA63B,WAAA7O,EAEAhpB,KAAA63B,WAAAphB,OAAAqhB,GArBA52B,EAAA,iBACA,IAAA6yB,GAAA7yB,EAAA,cACAyxB,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,WAEAmF,EAAA,2BACAD,EAAAC,EAAA,oBACAC,EAAAD,EAAA,yBAkBAN,GAAArwB,UAAA6wB,iBAAA,SAAAp0B,GAIA,MAHA8uB,GAAA,wCACAC,EAAA/uB,EAAA,QAEA7D,KAAA43B,mBAAAK,iBAAAp0B,IAIA4zB,EAAArwB,UAAA8wB,WAAA,WAEA,GAAAn4B,GAAAC,IACAA,MAAAC,QAAAusB,oBACAxsB,KAAA43B,mBAAAO,UAAAlkB,KAAA,WACAlU,EAAA83B,WAAAphB,OAAAuhB,GACAj4B,EAAAE,QAAA,KACAF,EAAA23B,YAAA,KACA33B,EAAA63B,mBAAA,KACA73B,EAAA83B,WAAA,QAKAr4B,EAAAi4B,cAAAA,IpEi3HG5C,iBAAiB,GAAGC,aAAa,KAAKsD,IAAI,SAASl3B,EAAQzB,EAAOD,GqEl6HrE,YA6BA,SAAA64B,GAAApI,EAAAhwB,EAAAyyB,EAAA4F,GACA3F,EAAA,oDACAC,EAAA3C,EAAA,OACA2C,EAAA3yB,EAAA,WACA2yB,EAAAF,EAAA,kBAEA,IAAA3yB,GAAAC,IACAA,MAAAC,QAAAA,EACAD,KAAA0yB,gBAAAA,EACA1yB,KAAAu4B,qBAAA,aACAv4B,KAAAw4B,oBAAA,GAAA72B,GAAA,SAAAqS,GACAjU,EAAAw4B,qBAAAvkB,IAGA/T,EAAAwrB,sBAAAT,mBAAA,SAAA1T,GACA,GAAAyR,GAAAzR,EAAAyS,wBACA0O,EAAA1P,EAAAjF,4BAAA4U,EACAlF,GAAAiF,IAAAA,EAAAzwB,QAAA2wB,IACArhB,EAAAuS,YAAAzK,EAAAiJ,KAAAyB,MACA/pB,EAAA64B,aAAA7P,GACAzR,EAAAuS,YAAAzK,EAAAiJ,KAAA+B,SACArqB,EAAA84B,eAAA9P,MAKAyK,EAAA8E,IAAA9E,EAAA8E,EAAAQ,aAAAR,EAAAQ,cAAA,GACA/gB,WAAA,WACA9X,EAAAgsB,mBAAA8M,EAAAC,IACA,KAGAC,EAAA,GAAAt3B,GAAA,SAAAqS,EAAAwH,GACA,GAAA0d,GAAA,GAAAnI,eACAmI,GAAAjI,iBAAA,EAEAiI,EAAAC,OAAA,WACA,MAAAD,EAAA3H,OACAvd,IAGAwH,EAAA5a,MAAAs4B,EAAAE,cAIAF,EAAA/H,QAAA,WACA3V,EAAA5a,MAAA,mBAGAs4B,EAAAvH,KAAA,OAAA1B,EAAA,eACAiJ,EAAA/P,SA7EAjoB,EAAA,iBACA,IAwBA+3B,GAxBAt3B,EAAAT,EAAA,kDACAke,EAAAle,EAAA,4BACA6yB,EAAA7yB,EAAA,cACAsyB,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,WAGAmF,EAAA,2BACAgB,EAAAhB,EAAA,WACAiB,EAAAjB,EAAA,UAEA9C,EAAA,uBACAoE,EAAA,sCACAC,EAAA,0BACAC,EAAA,mBACAC,EAAA,mBACAC,EAAA,mBACAf,EAAA,wBACAgB,EAAA,SACAf,EAAA,QA6DAN,GAAAjxB,UAAAwxB,aAAA,SAAA7P,GACA4J,EAAA,iCACAC,EAAA7J,EAAA,QAEA,IAAA5c,GAAA4c,EAAAlH,qBACA,QAAA1V,GACA,IAAAktB,GAEA,KACA,KAAApE,GACAj1B,KAAA0yB,gBAAAkE,cAAA7N,EACA,MACA,KAAAuQ,GACAt5B,KAAAu4B,qBAAAxP,EACA,MACA,KAAAwQ,GACAv5B,KAAA0yB,gBAAAuE,aAAAlO,GACA/oB,KAAAC,QAAA4qB,wBAAA9B,EACA,MACA,KAAAyQ,GACAx5B,KAAA0yB,gBAAAwE,aAAAnO,GACA/oB,KAAAC,QAAA4qB,wBAAA9B,EACA,MACA,KAAA0Q,GACAz5B,KAAA0yB,gBAAAyE,aAAApO,GACA/oB,KAAAC,QAAA4qB,wBAAA9B,EACA,MACA,SACA/oB,KAAA0yB,gBAAAqE,KAAAhO,KAMAsP,EAAAjxB,UAAAyxB,eAAA,SAAA9P,GACA4J,EAAA,mCACAC,EAAA7J,EAAA,QAEA,IAAA5c,GAAA4c,EAAAlH,qBACA,QAAA1V,GACA,IAAA8oB,GACAj1B,KAAA0yB,gBAAAoE,gBAAA/N,EACA,MACA,KAAAwQ,GACA,IAAAC,GACA,IAAAC,GAEA,KACA,SACAz5B,KAAA0yB,gBAAAsE,OAAAjO,KAMAsP,EAAAjxB,UAAAqP,OAAA,SAAAmQ,GACA+L,EAAA,6BACAC,EAAAhM,EAAA,UAEA,IAAA3mB,GAAAD,KAAAC,OACA,OAAA,IAAA0B,GAAA,SAAAqS,GAEA/T,EAAAkpB,KAAAvC,GACA2E,WAAA,WACAvX,UAQAqkB,EAAAjxB,UAAAuyB,gBAAA,WACA,MAAA35B,MAAAw4B,qBAKAh5B,EAAA64B,UAAAA,EACA74B,EAAAk5B,cAAAA,EACAl5B,EAAAk6B,qBAAAA,EACAl6B,EAAAm5B,qBAAAA,EACAn5B,EAAA65B,iBAAAA,IrEs7HGO,iDAAiD,EAAErC,2BAA2B,GAAG1C,iBAAiB,GAAGC,aAAa,KAAK+E,IAAI,SAAS34B,EAAQzB,EAAOD,GsE5lItJ,YA+BA,SAAAs6B,GAAA75B,EAAAyyB,EAAA1J,GACA2J,EAAA,0DACAC,EAAA3yB,EAAA,WACA2yB,EAAAF,EAAA,mBACAE,EAAA5J,EAAA,aAEAhpB,KAAAC,QAAAA,EACAD,KAAA0yB,gBAAAA,EACA1yB,KAAAgpB,UAAAA,EACAhpB,KAAA+5B,YAAA,GAAAj4B,GAtCAZ,EAAA,iBACA,IAAAS,GAAAT,EAAA,kDACAY,EAAAZ,EAAA,8CACA6yB,EAAA7yB,EAAA,cACAsyB,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,WAEAoH,EAAA94B,EAAA,wBAAA84B,gBAEAC,EAAA/4B,EAAA,kBAAA+zB,aAEAyD,EAAAx3B,EAAA,kBAAAw3B,cACAgB,EAAAx4B,EAAA,kBAAAw4B,qBACAL,EAAAn4B,EAAA,kBAAAm4B,iBAEAtB,EAAA,2BACAmC,EAAAnC,EAAA,qBACAoC,EAAApC,EAAA,uBACAqC,EAAArC,EAAA,oBAEAsC,EAAA,iBACAC,EAAA,eACAC,EAAA,QACAC,EAAA,aACAC,EAAA,YACAC,EAAA,GAgBAZ,GAAA1yB,UAAA6wB,iBAAA,SAAAp0B,GACA8uB,EAAA,4CACAC,EAAA/uB,EAAA,OAEA,IACA82B,GAAArF,EAAAvM,EAAA6R,EADA76B,EAAAC,IAEA,OAAA,IAAA2B,GAAA,SAAAqS,GACAjU,EAAAipB,UAAA2Q,kBAAA1lB,KAAA,SAAA4mB,GACAA,EAAA/W,4BAAAuW,GAAA3V,SAAA7gB,GACA9D,EAAAipB,UAAAvS,OAAAyjB,GAAAjmB,KAAA,WACA0mB,EAAAE,EAAA/W,4BAAAwW,GAAAzV,WACAyQ,EAAAuF,EAAA/W,4BAAAyW,GAAA1V,WACAkE,EAAAhpB,EAAA2yB,gBAAA4E,iBAAAhC,EAAA2E,GACAW,EAAA,GAAAZ,GAAAW,EAAA5R,EAAAhpB,GACAA,EAAAg6B,YAAA1b,IAAAuc,GACA5mB,EAAA4mB,UAOAd,EAAA1yB,UAAA0zB,aAAA,SAAAH,EAAAxZ,EAAA4Z,GACApI,EAAA,oEACAC,EAAA+H,EAAA,gBACA/H,EAAAzR,EAAA,aAEA,IAAAphB,GAAAC,IACA,OAAA,IAAA2B,GAAA,SAAAqS,EAAAwH,GAEA,GAAAsG,IACA/hB,EAAAE,QAAAoiB,UAAAqW,EAAA,KAAAgB,GACA35B,EAAAE,QAAAoiB,UAAAiY,EAAA,KAAAK,GACA56B,EAAAE,QAAAoiB,UAAAmY,EAAA,KAAArZ,GACAphB,EAAAE,QAAAoiB,UAAAoY,GAGA,IAAAjH,EAAAuH,GACA,IAAA,GAAAC,KAAAD,GACA,GAAAA,EAAAvsB,eAAAwsB,GAAA,CACA,GAAA3D,GAAAt3B,EAAA2yB,gBAAA0E,kBAAA2D,EAAAC,GACAlZ,GAAAtd,KAAAzE,EAAAE,QAAAoiB,UAAAqY,EAAAM,EAAA,KAAA3D,EAAArvB,MAAA,UACA8Z,EAAAtd,KAAAzE,EAAAE,QAAAoiB,UAAAqY,EAAAM,EAAA,KAAA3D,EAAAlrB,KAAA,eAKA,GAAAye,GAAA7qB,EAAAE,QAAA+kB,kBAAAvZ,MAAA1L,EAAAE,SAAA,KAAAo5B,GAAAtgB,OAAA+I,GAEA/hB,GAAAipB,UAAAvS,OAAA0jB,EAAAY,GAAA9mB,KAAA,WACA,GAAAgnB,GAAArQ,EAAA9G,4BAAA2W,GAAA5V,UACAoW,GACAzf,EAAA,GAAA5a,OAAA,qCAEAoT,IAEAjU,EAAAE,QAAA4qB,wBAAAD,QAMAkP,EAAA1yB,UAAA8zB,kBAAA,SAAAN,GACAjI,EAAA,mDACAC,EAAAgI,EAAA,aAEA,IAAA76B,GAAAC,IACA,OAAA,IAAA2B,GAAA,SAAAqS,GACAjU,EAAAipB,UAAA2Q,kBAAA1lB,KAAA,SAAA4mB,GACA96B,EAAAg6B,YAAAh6B,UAAA66B,GACAC,EAAA/W,4BAAAwW,GAAA5V,SAAAkW,EAAAD,cACA56B,EAAAipB,UAAAvS,OAAA2jB,GAAAnmB,KAAAD,QAMA8lB,EAAA1yB,UAAA+wB,QAAA,WACA,GAAAgD,GAAAn7B,KAAA+5B,YACAqB,IASA,OARAp7B,MAAA+5B,YAAA,GAAAj4B,GACAq5B,EAAA73B,QAAA,SAAAs3B,GACA,IACAQ,EAAA52B,KAAAo2B,EAAAzC,WACA,MAAAj4B,OAIAyB,EAAA+b,IAAA0d,IAKA57B,EAAAs6B,kBAAAA,ItEgnIGF,iDAAiD,EAAEyB,6CAA6C,EAAEC,iBAAiB,GAAGC,iBAAiB,GAAGC,uBAAuB,GAAG3G,iBAAiB,GAAGC,aAAa,KAAK2G,IAAI,SAASv6B,EAAQzB,EAAOD,GuEzvIzO,YAUA,SAAAw6B,GAAAW,EAAA5R,EAAA2S,GACA/I,EAAA,iDACAC,EAAA+H,EAAA,gBACA/H,EAAA7J,EAAA,SACA6J,EAAA8I,EAAA,WAEA17B,KAAA26B,aAAAA,EACA36B,KAAA+oB,MAAAA,EACA/oB,KAAA07B,QAAAA,EACA17B,KAAA27B,WAAA,EACA37B,KAAA47B,oBAAA,GAAA95B,GAlBAZ,EAAA,iBACA,IAAAY,GAAAZ,EAAA,8CACA6yB,EAAA7yB,EAAA,cACAyxB,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,UAkBAoH,GAAA5yB,UAAAqP,OAAA,SAAA5S,EAAAk3B,GAIA,GAHApI,EAAA,wCACAC,EAAA/uB,EAAA,QAEA7D,KAAA27B,UACA,KAAA,IAAA/6B,OAAA,uCAEA,OAAAZ,MAAA07B,QAAAZ,aAAA96B,KAAA26B,aAAA92B,EAAAk3B,IAIAf,EAAA5yB,UAAA+wB,QAAA,WACA,GAAAn4B,KAAA27B,UACA,KAAA,IAAA/6B,OAAA,uCAUA,OARAZ,MAAA27B,WAAA,EACA37B,KAAA47B,oBAAAt4B,QAAA,SAAA8Y,GACA,IACAA,EAAApc,MACA,MAAAE,GACAwc,QAAA+W,KAAA,6DAAAvzB,KAEAF,MACAA,KAAA07B,QAAAR,kBAAAl7B,OAIAg6B,EAAA5yB,UAAAy0B,YAAA,SAAAzf,GACAuW,EAAA,wCACAC,EAAAxW,EAAA,UAEA,IAAArc,GAAAC,IAEA,OADAA,MAAA47B,oBAAAvd,IAAAjC,IAEAsY,YAAA,WACA30B,EAAA67B,oBAAA77B,UAAAqc,MAOA5c,EAAAw6B,gBAAAA,IvE6wIGqB,6CAA6C,EAAExG,iBAAiB,GAAGC,aAAa,KAAKgH,IAAI,SAAS56B,EAAQzB,EAAOD,GwE/0IpH,YAEA0B,GAAA,iBACA,IAAAke,GAAAle,EAAA,4BAEA6yB,EAAA7yB,EAAA,cACAsyB,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,WACAyF,EAAAn3B,EAAA,kBAAAm3B,UACA5F,EAAAvxB,EAAA,oBAAAuxB,YACAwD,EAAA/0B,EAAA,kBAAA+0B,gBACA6D,EAAA54B,EAAA,0BAAA44B,kBACArC,EAAAv2B,EAAA,sBAAAu2B,aAEAj4B,GAAAu8B,QAAA,SAAA9L,EAAAqI,GACA3F,EAAA,wBACAC,EAAA3C,EAAA,MAEA,IAAA+L,GAAA5c,EAAA8Q,cAAAD,IAAAA,GAAAzM,OAAA,GAAA2J,QAAA,GAAAuD,aAAA,EACA8C,GAAA8E,IAAA9E,EAAA8E,EAAA7H,eACAuL,EAAAvL,aAAA6H,EAAA7H,aAEA,IAAAxwB,GAAA+7B,EAAA7L,QAEAuC,EAAA,GAAAuD,GAAAh2B,GACAy3B,EAAA,GAAAjF,GAAAC,GACA1J,EAAA,GAAAqP,GAAApI,EAAAhwB,EAAAyyB,EAAA4F,GACAX,EAAA,GAAAmC,GAAA75B,EAAAyyB,EAAA1J,EAEA,OAAA,IAAAyO,GAAAx3B,EAAAy3B,EAAAC,EAAA3O,MxEo2IGuO,2BAA2B,GAAG0E,mBAAmB,GAAGX,iBAAiB,GAAGY,qBAAqB,GAAGX,iBAAiB,GAAGY,yBAAyB,GAAGtH,iBAAiB,GAAGC,aAAa,KAAKsH,IAAI,SAASl7B,EAAQzB,EAAOD,GyEh4IrN8P,MAAAlI,UAAA9D,UAEAgM,MAAAlI,UAAA9D,QAAA,SAAA8qB,EAAAiO,GAEA,GAAAr3B,GAAA2B,CAEA,IAAA,MAAA3G,KACA,KAAA,IAAAyD,WAAA,+BAIA,IAAAsB,GAAA5C,OAAAnC,MAIAs8B,EAAAv3B,EAAA/D,SAAA,CAIA,IAAA,kBAAAotB,GACA,KAAA,IAAA3qB,WAAA2qB,EAAA,qBAYA,KARAtpB,UAAA9D,OAAA,IACAgE,EAAAq3B,GAIA11B,EAAA,EAGA21B,EAAA31B,GAAA,CAEA,GAAA41B,EAOA51B,KAAA5B,KAGAw3B,EAAAx3B,EAAA4B,GAIAynB,EAAArtB,KAAAiE,EAAAu3B,EAAA51B,EAAA5B,IAGA4B,OAWA2I,MAAAlI,UAAAijB,SACA/a,MAAAlI,UAAAijB,OAAA,SAAAmS,GACA,YAEA,IAAA,SAAAx8B,MAAA,OAAAA,KACA,KAAA,IAAAyD,UAGA,IAAAtD,GAAAgC,OAAAnC,MACAs8B,EAAAn8B,EAAAa,SAAA,CACA,IAAA,kBAAAw7B,GACA,KAAA,IAAA/4B,UAKA,KAAA,GAFAg5B,MACAJ,EAAAv3B,UAAA9D,QAAA,EAAA8D,UAAA,GAAA,OACAnE,EAAA,EAAA27B,EAAA37B,EAAAA,IACA,GAAAA,IAAAR,GAAA,CACA,GAAAu8B,GAAAv8B,EAAAQ,EAOA67B,GAAAz7B,KAAAs7B,EAAAK,EAAA/7B,EAAAR,IACAs8B,EAAAj4B,KAAAk4B,GAKA,MAAAD,UzEu5IME,IAAI,SAASz7B,EAAQzB,EAAOD,G0Ev/IlC,YAEA,IAAAo9B,GAEApJ,EAAA,SAAA7kB,GACA,MAAA,mBAAAA,IAAA,OAAAA,EAGAlP,GAAAD,QAAAg0B,OAAAA,EAEA/zB,EAAAD,QAAAmzB,YAAA,SAAA9uB,GACA+4B,EAAA/4B,GAGApE,EAAAD,QAAAozB,WAAA,SAAAyE,EAAAwF,GACA,IAAArJ,EAAA6D,GACA,KAAA,IAAAz2B,OAAA,iBAAAi8B,EAAA,oBAAAD,c1E4gJW,KAAK,QAIb77B,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,gBAErH6B,GAAG,SAASR,EAAQzB,EAAOD,G2EljJjC0B,EAAA,mCACAA,EAAA,kCACAA,EAAA,+BACAA,EAAA,sBACAA,EAAA,8BACAzB,EAAAD,QAAA0B,EAAA,qBAAAC,M3EojJG27B,oBAAoB,GAAGz7B,qBAAqB,GAAGC,kCAAkC,GAAGC,iCAAiC,GAAGC,6BAA6B,GAAGC,8BAA8B,KAAKI,GAAG,SAASX,EAAQzB,EAAOD,G4EzjJzNC,EAAAD,QAAA,SAAAgE,GACA,GAAA,kBAAAA,GAAA,KAAAC,WAAAD,EAAA,sBACA,OAAAA,S5E4jJMvB,GAAG,SAASf,EAAQzB,EAAOD,G6E9jJjCC,EAAAD,QAAA,kB7EgkJM+D,GAAG,SAASrC,EAAQzB,EAAOD,G8EhkJjC,GAAAyE,GAAA/C,EAAA,gBACAzB,GAAAD,QAAA,SAAAgE,GACA,IAAAS,EAAAT,GAAA,KAAAC,WAAAD,EAAA,qBACA,OAAAA,M9EmkJGu5B,gBAAgB,KAAKr5B,GAAG,SAASxC,EAAQzB,EAAOD,G+ErkJnD,GAAAmF,GAAAzD,EAAA,WACA0D,EAAA1D,EAAA,WAAA,eAEA2D,EAAA,aAAAF,EAAA,WAAA,MAAAG,cAEArF,GAAAD,QAAA,SAAAgE,GACA,GAAAuB,GAAAC,EAAAC,CACA,OAAAlB,UAAAP,EAAA,YAAA,OAAAA,EAAA,OAEA,iBAAAwB,GAAAD,EAAA5C,OAAAqB,IAAAoB,IAAAI,EAEAH,EAAAF,EAAAI,GAEA,WAAAE,EAAAN,EAAAI,KAAA,kBAAAA,GAAAG,OAAA,YAAAD,K/EykJG+3B,UAAU,EAAEC,UAAU,KAAKt5B,GAAG,SAASzC,EAAQzB,EAAOD,GgFvlJzD,GAAA8F,MAAAA,QAEA7F,GAAAD,QAAA,SAAAgE,GACA,MAAA8B,GAAAvE,KAAAyC,GAAA+B,MAAA,EAAA,UhF0lJMvB,GAAG,SAAS9C,EAAQzB,EAAOD,GiF7lJjC,YACA,IAAAiG,GAAAvE,EAAA,OACAwI,EAAAxI,EAAA,YACAwE,EAAAxE,EAAA,oBACAyE,EAAAzE,EAAA,WACAg8B,EAAAh8B,EAAA,kBACA2E,EAAA3E,EAAA,eACAkD,EAAAlD,EAAA,cACA4E,EAAA5E,EAAA,mBACA6E,EAAA7E,EAAA,iBACAi8B,EAAAj8B,EAAA,WAAA,MACAk8B,EAAAl8B,EAAA,WACA+C,EAAA/C,EAAA,iBACA8E,EAAA9E,EAAA,mBACA+E,EAAA/E,EAAA,mBACAgR,EAAA/P,OAAA+P,cAAAjO,EACAkC,EAAAF,EAAA,KAAA,OACAgM,EAAA,EAEA/L,EAAA,SAAA1C,EAAApB,GAEA,IAAA6B,EAAAT,GAAA,MAAA,gBAAAA,GAAAA,GAAA,gBAAAA,GAAA,IAAA,KAAAA,CACA,KAAA45B,EAAA55B,EAAA25B,GAAA,CAEA,IAAAjrB,EAAA1O,GAAA,MAAA,GAEA,KAAApB,EAAA,MAAA,GAEAsH,GAAAlG,EAAA25B,IAAAlrB,GAEA,MAAA,IAAAzO,EAAA25B,IAGA/2B,EAAA,SAAAC,EAAAC,GAEA,GAAAC,GAAAC,EAAAN,EAAAI,EACA,IAAA,MAAAE,EAAA,MAAAH,GAAAI,GAAAD,EAEA,KAAAD,EAAAF,EAAAK,GAAAH,EAAAA,EAAAA,EAAAnG,EACA,GAAAmG,EAAAI,GAAAL,EAAA,MAAAC,GAIA9G,GAAAD,SACAoH,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAA,SAAAR,EAAAa,GACAg2B,EAAA72B,EAAAY,EAAAH,GACAT,EAAAI,GAAAhB,EAAArD,OAAA,MACAiE,EAAAK,GAAA3C,OACAsC,EAAAc,GAAApD,OACAsC,EAAAF,GAAA,EACApC,QAAAmD,GAAA9C,EAAA8C,EAAAH,EAAAV,EAAAW,GAAAX,IAqDA,OAnDAX,GAAAuB,EAAAG,WAGAC,MAAA,WACA,IAAA,GAAAhB,GAAArG,KAAAsH,EAAAjB,EAAAI,GAAAF,EAAAF,EAAAK,GAAAH,EAAAA,EAAAA,EAAAnG,EACAmG,EAAAlG,GAAA,EACAkG,EAAAgB,IAAAhB,EAAAgB,EAAAhB,EAAAgB,EAAAnH,EAAA2D,cACAuD,GAAAf,EAAA5F,EAEA0F,GAAAK,GAAAL,EAAAc,GAAApD,OACAsC,EAAAF,GAAA,GAIAqB,SAAA,SAAAlB,GACA,GAAAD,GAAArG,KACAuG,EAAAH,EAAAC,EAAAC,EACA,IAAAC,EAAA,CACA,GAAAkB,GAAAlB,EAAAnG,EACAsH,EAAAnB,EAAAgB,QACAlB,GAAAI,GAAAF,EAAA5F,GACA4F,EAAAlG,GAAA,EACAqH,IAAAA,EAAAtH,EAAAqH,GACAA,IAAAA,EAAAF,EAAAG,GACArB,EAAAK,IAAAH,IAAAF,EAAAK,GAAAe,GACApB,EAAAc,IAAAZ,IAAAF,EAAAc,GAAAO,GACArB,EAAAF,KACA,QAAAI,GAIAjD,QAAA,SAAAqE,GAGA,IAFA,GACApB,GADAhH,EAAAoG,EAAAgC,EAAA7C,UAAA9D,OAAA,EAAA8D,UAAA,GAAAf,OAAA,GAEAwC,EAAAA,EAAAA,EAAAnG,EAAAJ,KAAA0G,IAGA,IAFAnH,EAAAgH,EAAAqB,EAAArB,EAAAI,EAAA3G,MAEAuG,GAAAA,EAAAlG,GAAAkG,EAAAA,EAAAgB,GAKAM,IAAA,SAAAvB,GACA,QAAAF,EAAApG,KAAAsG,MAGAL,GAAAR,EAAA9C,QAAAsE,EAAAG,UAAA,QACAU,IAAA,WACA,MAAAjC,GAAA7F,KAAAmG,OAGAc,GAEAc,IAAA,SAAA1B,EAAAC,EAAA0B,GACA,GACAN,GAAAlB,EADAD,EAAAH,EAAAC,EAAAC,EAoBA,OAjBAC,GACAA,EAAAqB,EAAAI,GAGA3B,EAAAc,GAAAZ,GACA5F,EAAA6F,EAAAN,EAAAI,GAAA,GACAK,EAAAL,EACAsB,EAAAI,EACAT,EAAAG,EAAArB,EAAAc,GACA/G,EAAA2D,OACA1D,GAAA,GAEAgG,EAAAK,KAAAL,EAAAK,GAAAH,GACAmB,IAAAA,EAAAtH,EAAAmG,GACAF,EAAAF,KAEA,MAAAK,IAAAH,EAAAI,GAAAD,GAAAD,IACAF,GAEAD,SAAAA,EACA6B,UAAA,SAAAhB,EAAAH,EAAAC,GAGAjB,EAAAmB,EAAAH,EAAA,SAAAoB,EAAAC,GACAnI,KAAAoI,GAAAF,EACAlI,KAAAqI,GAAAF,EACAnI,KAAAmH,GAAApD,QACA,WAKA,IAJA,GAAAsC,GAAArG,KACAmI,EAAA9B,EAAAgC,GACA9B,EAAAF,EAAAc,GAEAZ,GAAAA,EAAAlG,GAAAkG,EAAAA,EAAAgB,CAEA,OAAAlB,GAAA+B,KAAA/B,EAAAc,GAAAZ,EAAAA,EAAAA,EAAAnG,EAAAiG,EAAA+B,GAAA1B,IAMA,QAAAyB,EAAApC,EAAA,EAAAQ,EAAAI,GACA,UAAAwB,EAAApC,EAAA,EAAAQ,EAAAqB,GACA7B,EAAA,GAAAQ,EAAAI,EAAAJ,EAAAqB,KANAvB,EAAA+B,GAAArE,OACAgC,EAAA,KAMAgB,EAAA,UAAA,UAAAA,GAAA,GAGAf,EAAAc,OjFimJGu2B,MAAM,GAAGC,UAAU,GAAGC,cAAc,GAAGC,kBAAkB,GAAGC,aAAa,GAAGC,UAAU,GAAGC,WAAW,GAAGZ,gBAAgB,GAAGa,kBAAkB,GAAGC,gBAAgB,GAAGC,mBAAmB,GAAGC,kBAAkB,GAAGC,iBAAiB,GAAGC,UAAU,KAAK95B,GAAG,SAASjD,EAAQzB,EAAOD,GkF5vJ9Q,GAAA4E,GAAAlD,EAAA,cACAgI,EAAAhI,EAAA,cACAzB,GAAAD,QAAA,SAAAsH,GACA,MAAA,YACA,GAAAoC,EAAAlJ,OAAA8G,EAAA,KAAArD,WAAAqD,EAAA,wBACA,IAAA6K,KAEA,OADAvN,GAAApE,MAAA,EAAA2R,EAAAnN,KAAAmN,GACAA,MlFiwJGusB,cAAc,EAAET,aAAa,KAAK/4B,IAAI,SAASxD,EAAQzB,EAAOD,GmFzwJjE,YACA,IAAAiG,GAAAvE,EAAA,OACApB,EAAAoB,EAAA,cACAqI,EAAArI,EAAA,cACAuI,EAAAvI,EAAA,aACAwI,EAAAxI,EAAA,YACAwE,EAAAxE,EAAA,oBACAkD,EAAAlD,EAAA,cACAg8B,EAAAh8B,EAAA,kBACA+C,EAAA/C,EAAA,iBACAyI,EAAAzI,EAAA,yBACA+E,EAAA/E,EAAA,kBAEAzB,GAAAD,QAAA,SAAAsH,EAAAD,EAAA+C,EAAAC,EAAA9C,EAAA+C,GACA,GAAAC,GAAAjK,EAAAgH,GACAG,EAAA8C,EACA/C,EAAAD,EAAA,MAAA,MACAiD,EAAA/C,GAAAA,EAAAG,UACArC,IAmCA,OAlCAkB,IAAA,kBAAAgB,KAAA6C,GAAAE,EAAA1G,UAAAmG,EAAA,YACA,GAAAxC,IAAAgD,UAAAxC,WAMAR,EAAAJ,EAAA,SAAAqD,EAAAhD,GACAg2B,EAAAhzB,EAAAjD,EAAAH,GACAoD,EAAAC,GAAA,GAAAJ,GACAhG,QAAAmD,GAAA9C,EAAA8C,EAAAH,EAAAmD,EAAAlD,GAAAkD,KAEAzE,EAAApC,KAAAtC,KAAA,2DAAAqJ,MAAA,KAAA,SAAAC,GACA,GAAAC,GAAA,OAAAD,GAAA,OAAAA,CACAA,KAAAL,MAAAF,GAAA,SAAAO,IAAAX,EAAAzC,EAAAG,UAAAiD,EAAA,SAAA5J,EAAA8J,GACA,IAAAD,GAAAR,IAAA7F,EAAAxD,GAAA,MAAA,OAAA4J,EAAAtG,QAAA,CACA,IAAAQ,GAAAvE,KAAAmK,GAAAE,GAAA,IAAA5J,EAAA,EAAAA,EAAA8J,EACA,OAAAD,GAAAtK,KAAAuE,MAGA,QAAAyF,IAAAvE,EAAA9C,QAAAsE,EAAAG,UAAA,QACAU,IAAA,WACA,MAAA9H,MAAAmK,GAAAK,UAlBAvD,EAAA4C,EAAAjD,eAAAC,EAAAC,EAAAC,EAAAC,GACAtB,EAAAuB,EAAAG,UAAAwC,IAsBAD,EAAA1C,EAAAH,GAEA/B,EAAA+B,GAAAG,EACAsC,EAAAA,EAAAmB,EAAAnB,EAAAoB,EAAApB,EAAAqB,EAAA7F,GAEA+E,GAAAD,EAAA5B,UAAAhB,EAAAH,EAAAC,GAEAE,KnF4wJGo2B,MAAM,GAAGG,kBAAkB,GAAGW,aAAa,GAAGC,YAAY,GAAGX,aAAa,GAAGY,aAAa,GAAGV,WAAW,GAAGZ,gBAAgB,GAAGe,mBAAmB,GAAGQ,wBAAwB,GAAGN,iBAAiB,KAAK34B,IAAI,SAASnE,EAAQzB,EAAOD,GoFj0JpO,GAAA0L,GAAAzL,EAAAD,SAAA2L,QAAA,QACA,iBAAAC,OAAAA,IAAAF,QpFm0JM1F,IAAI,SAAStE,EAAQzB,EAAOD,GqFn0JlC,GAAA8L,GAAApK,EAAA,iBACAzB,GAAAD,QAAA,SAAA+L,EAAAlF,EAAArF,GAEA,GADAsK,EAAAC,GACAxH,SAAAsC,EAAA,MAAAkF,EACA,QAAAvK,GACA,IAAA,GAAA,MAAA,UAAAP,GACA,MAAA8K,GAAAxK,KAAAsF,EAAA5F,GAEA,KAAA,GAAA,MAAA,UAAAA,EAAA8J,GACA,MAAAgB,GAAAxK,KAAAsF,EAAA5F,EAAA8J,GAEA,KAAA,GAAA,MAAA,UAAA9J,EAAA8J,EAAAiB,GACA,MAAAD,GAAAxK,KAAAsF,EAAA5F,EAAA8J,EAAAiB,IAGA,MAAA,YACA,MAAAD,GAAAE,MAAApF,EAAAvB,erFw0JGy5B,iBAAiB,IAAIt1B,IAAI,SAAS/H,EAAQzB,EAAOD,GsFx1JpDC,EAAAD,QAAA,SAAAgE,GACA,GAAAO,QAAAP,EAAA,KAAAC,WAAA,yBAAAD,EACA,OAAAA,StF41JM8F,IAAI,SAASpI,EAAQzB,EAAOD,GuF91JlCC,EAAAD,SAAA0B,EAAA,aAAA,WACA,MAAA,IAAAiB,OAAAS,kBAAA,KAAAkF,IAAA,WAAA,MAAA,MAAArH,MvFk2JG29B,YAAY,KAAKnzB,IAAI,SAAS/J,EAAQzB,EAAOD,GwFp2JhD,GAAAM,GAAAoB,EAAA,cACAgK,EAAAhK,EAAA,YACAyE,EAAAzE,EAAA,WACAgL,EAAA,YAEA3C,EAAA,SAAA4C,EAAAtI,EAAAuI,GACA,GAQA9F,GAAA+F,EAAAC,EARAC,EAAAJ,EAAA5C,EAAAqB,EACA4B,EAAAL,EAAA5C,EAAAmB,EACA+B,EAAAN,EAAA5C,EAAAmD,EACAC,EAAAR,EAAA5C,EAAAqD,EACAC,EAAAV,EAAA5C,EAAAtE,EACA6H,EAAAX,EAAA5C,EAAAoB,EACAnL,EAAAgN,EAAAtB,EAAAA,EAAArH,KAAAqH,EAAArH,OACAqG,EAAAsC,EAAA1M,EAAA2M,EAAA3M,EAAA+D,IAAA/D,EAAA+D,QAAAqI,EAEAM,KAAAJ,EAAAvI,EACA,KAAAyC,IAAA8F,GAEAC,GAAAE,GAAArC,GAAA5D,IAAA4D,GACAmC,GAAA/F,IAAA9G,KAEA8M,EAAAD,EAAAnC,EAAA5D,GAAA8F,EAAA9F,GAEA9G,EAAA8G,GAAAkG,GAAA,kBAAAtC,GAAA5D,GAAA8F,EAAA9F,GAEAuG,GAAAR,EAAA1G,EAAA2G,EAAAxM,GAEAgN,GAAA5C,EAAA5D,IAAAgG,EAAA,SAAArF,GACA,GAAA2D,GAAA,SAAAysB,GACA,MAAAr3B,gBAAAiH,GAAA,GAAAA,GAAAowB,GAAApwB,EAAAowB,GAGA,OADAzsB,GAAAsB,GAAAjF,EAAAiF,GACAtB,GAEA0B,GAAAK,GAAA,kBAAAL,GAAA3G,EAAAqH,SAAAjM,KAAAuL,GAAAA,EACAK,KAAAnN,EAAA0M,KAAA1M,EAAA0M,QAAA5F,GAAAgG,IAIA/C,GAAAqB,EAAA,EACArB,EAAAmB,EAAA,EACAnB,EAAAmD,EAAA,EACAnD,EAAAqD,EAAA,EACArD,EAAAtE,EAAA,GACAsE,EAAAoB,EAAA,GACAlL,EAAAD,QAAA+J,IxFs2JGi1B,WAAW,GAAGlB,UAAU,GAAGe,aAAa,KAAKhzB,IAAI,SAASnK,EAAQzB,EAAOD,GyFn5J5EC,EAAAD,QAAA,SAAA8N,GACA,IACA,QAAAA,IACA,MAAApN,GACA,OAAA,SzFu5JMyL,IAAI,SAASzK,EAAQzB,EAAOD,G0F35JlC,GAAAmG,GAAAzE,EAAA,WACAH,EAAAG,EAAA,iBACAsM,EAAAtM,EAAA,qBACAuM,EAAAvM,EAAA,iBACAwM,EAAAxM,EAAA,iBACAyM,EAAAzM,EAAA,6BACAzB,GAAAD,QAAA,SAAA0H,EAAA+C,EAAAsB,EAAAlF,GACA,GAGArF,GAAA+E,EAAA6H,EAHAC,EAAAF,EAAAzG,GACA3H,EAAAoG,EAAA4F,EAAAlF,EAAA4D,EAAA,EAAA,GACAzD,EAAA,CAEA,IAAA,kBAAAqH,GAAA,KAAApK,WAAAyD,EAAA,oBAEA,IAAAsG,EAAAK,GAAA,IAAA7M,EAAA0M,EAAAxG,EAAAlG,QAAAA,EAAAwF,EAAAA,IACAyD,EAAA1K,EAAAkO,EAAA1H,EAAAmB,EAAAV,IAAA,GAAAT,EAAA,IAAAxG,EAAA2H,EAAAV,QACA,KAAAoH,EAAAC,EAAA9M,KAAAmG,KAAAnB,EAAA6H,EAAAnG,QAAAqG,MACA/M,EAAA6M,EAAArO,EAAAwG,EAAAiC,MAAAiC,M1F+5JGw0B,gBAAgB,EAAEnB,UAAU,GAAGoB,oBAAoB,GAAGC,gBAAgB,GAAGC,gBAAgB,GAAGzwB,6BAA6B,KAAKvC,IAAI,SAAS1K,EAAQzB,EAAOD,G2F96J7J,GAAAM,GAAAL,EAAAD,QAAA,mBAAAK,SAAAA,OAAAwO,MAAAA,KACAxO,OAAA,mBAAAE,OAAAA,KAAAsO,MAAAA,KAAAtO,KAAAiN,SAAA,gBACA,iBAAAsB,OAAAA,IAAAxO,Q3Fi7JM+L,IAAI,SAAS3K,EAAQzB,EAAOD,G4Fp7JlC,GAAAgP,MAAAA,cACA/O,GAAAD,QAAA,SAAAgE,EAAA8C,GACA,MAAAkI,GAAAzN,KAAAyC,EAAA8C,S5Fu7JM2F,IAAI,SAAS/K,EAAQzB,EAAOD,G6Fz7JlC,GAAAiG,GAAAvE,EAAA,OACAwN,EAAAxN,EAAA,oBACAzB,GAAAD,QAAA0B,EAAA,mBAAA,SAAAyN,EAAArI,EAAA0B,GACA,MAAAvC,GAAA9C,QAAAgM,EAAArI,EAAAoI,EAAA,EAAA1G,KACA,SAAA2G,EAAArI,EAAA0B,GAEA,MADA2G,GAAArI,GAAA0B,EACA2G,K7F47JG0uB,MAAM,GAAGG,kBAAkB,GAAGqB,oBAAoB,KAAKxxB,IAAI,SAASnM,EAAQzB,EAAOD,G8Fj8JtF,GAAAmF,GAAAzD,EAAA,UACAzB,GAAAD,QAAA2C,OAAA,KAAAK,qBAAA,GAAAL,OAAA,SAAAqB,GACA,MAAA,UAAAmB,EAAAnB,GAAAA,EAAA4G,MAAA,IAAAjI,OAAAqB,M9Fq8JGw5B,UAAU,IAAIzvB,IAAI,SAASrM,EAAQzB,EAAOD,G+Fv8J7C,GAAA4P,GAAAlO,EAAA,iBACAoD,EAAApD,EAAA,WAAA,YACAmO,EAAAC,MAAAlI,SAEA3H,GAAAD,QAAA,SAAAgE,GACA,MAAAO,UAAAP,IAAA4L,EAAAE,QAAA9L,GAAA6L,EAAA/K,KAAAd,M/F28JGs7B,gBAAgB,GAAG7B,UAAU,KAAK7uB,IAAI,SAASlN,EAAQzB,EAAOD,GgGj9JjEC,EAAAD,QAAA,SAAAgE,GACA,MAAA,gBAAAA,GAAA,OAAAA,EAAA,kBAAAA,ShGo9JM+K,IAAI,SAASrN,EAAQzB,EAAOD,GiGp9JlC,GAAAiO,GAAAvM,EAAA,gBACAzB,GAAAD,QAAA,SAAAoO,EAAArC,EAAAvD,EAAAiC,GACA,IACA,MAAAA,GAAAsB,EAAAkC,EAAAzF,GAAA,GAAAA,EAAA,IAAAuD,EAAAvD,GAEA,MAAA9H,GACA,GAAAwP,GAAA9B,EAAA,SAEA,MADA7J,UAAA2L,GAAAjC,EAAAiC,EAAA3O,KAAA6M,IACA1N,MjGy9JGu+B,gBAAgB,IAAIhwB,IAAI,SAASvN,EAAQzB,EAAOD,GkGl+JnD,YACA,IAAAiG,GAAAvE,EAAA,OACA0O,EAAA1O,EAAA,qBACAyI,EAAAzI,EAAA,yBACA2O,IAGA3O,GAAA,YAAA2O,EAAA3O,EAAA,WAAA,YAAA,WAAA,MAAAlB,QAEAP,EAAAD,QAAA,SAAAoE,EAAAkD,EAAAW,GACA7D,EAAAwD,UAAA3B,EAAArD,OAAAyN,GAAApI,KAAAmI,EAAA,EAAAnI,KACAkC,EAAA/F,EAAAkD,EAAA,gBlGq+JGu2B,MAAM,GAAGM,WAAW,GAAGkB,oBAAoB,GAAGP,wBAAwB,GAAGrB,UAAU,KAAKpuB,IAAI,SAAS3N,EAAQzB,EAAOD,GmGh/JvH,YACA,IAAAuQ,GAAA7O,EAAA,eACAqI,EAAArI,EAAA,cACA8O,EAAA9O,EAAA,gBACAwI,EAAAxI,EAAA,YACA2G,EAAA3G,EAAA,WACAkO,EAAAlO,EAAA,iBACA+O,EAAA/O,EAAA,mBACAyI,EAAAzI,EAAA,yBACAmB,EAAAnB,EAAA,OAAAmB,SACAiC,EAAApD,EAAA,WAAA,YACAgP,OAAAlN,MAAA,WAAAA,QACAmN,EAAA,aACAC,EAAA,OACAC,EAAA,SAEAC,EAAA,WAAA,MAAAtQ,MAEAP,GAAAD,QAAA,SAAAuK,EAAAjD,EAAAlD,EAAA6D,EAAA8I,EAAAC,EAAAC,GACAR,EAAArM,EAAAkD,EAAAW,EACA,IAaAmC,GAAAtD,EAbAoK,EAAA,SAAAvI,GACA,IAAA+H,GAAA/H,IAAA6B,GAAA,MAAAA,GAAA7B,EACA,QAAAA,GACA,IAAAiI,GAAA,MAAA,YAAA,MAAA,IAAAxM,GAAA5D,KAAAmI,GACA,KAAAkI,GAAA,MAAA,YAAA,MAAA,IAAAzM,GAAA5D,KAAAmI,IACA,MAAA,YAAA,MAAA,IAAAvE,GAAA5D,KAAAmI,KAEAvD,EAAAkC,EAAA,YACA6J,EAAAJ,GAAAF,EACAO,GAAA,EACA5G,EAAAD,EAAA3C,UACAyJ,EAAA7G,EAAA1F,IAAA0F,EAAAmG,IAAAI,GAAAvG,EAAAuG,GACAO,EAAAD,GAAAH,EAAAH,EAGA,IAAAM,EAAA,CACA,GAAAhB,GAAAxN,EAAAyO,EAAA/P,KAAA,GAAAgJ,IAEAJ,GAAAkG,EAAAjL,GAAA,IAEAmL,GAAAlI,EAAAmC,EAAAmG,IAAAzG,EAAAmG,EAAAvL,EAAAgM,GAEAK,GAAAE,EAAAhN,OAAAwM,IACAO,GAAA,EACAE,EAAA,WAAA,MAAAD,GAAA9P,KAAAf,QAUA,GANA+P,IAAAU,IAAAP,IAAAU,GAAA5G,EAAA1F,IACAoF,EAAAM,EAAA1F,EAAAwM,GAGA1B,EAAAtI,GAAAgK,EACA1B,EAAAxK,GAAA0L,EACAC,EAMA,GALA3G,GACAqH,OAAAN,EAAAG,EAAAJ,EAAAL,GACArN,KAAAwN,EAAAM,EAAAJ,EAAAN,GACAnG,QAAA0G,EAAAD,EAAA,WAAAI,GAEAL,EAAA,IAAAnK,IAAAsD,GACAtD,IAAA0D,IAAAgG,EAAAhG,EAAA1D,EAAAsD,EAAAtD,QACAiD,GAAAA,EAAAqD,EAAArD,EAAAqB,GAAAsF,GAAAU,GAAA9J,EAAA8C,EAEA,OAAAA,MnGm/JGyzB,MAAM,GAAGc,aAAa,GAAGT,UAAU,GAAGC,WAAW,GAAGoB,kBAAkB,GAAGD,gBAAgB,GAAGE,cAAc,GAAGC,eAAe,GAAGX,wBAAwB,GAAGrB,UAAU,KAAKluB,IAAI,SAAS7N,EAAQzB,EAAOD,GoGnjKxMC,EAAAD,QAAA,SAAAsO,EAAA9F,GACA,OAAAA,MAAAA,EAAA8F,OAAAA,SpGsjKMoB,IAAI,SAAShO,EAAQzB,EAAOD,GqGvjKlCC,EAAAD,gBrGyjKM2P,IAAI,SAASjO,EAAQzB,EAAOD,GsGzjKlC,GAAA0C,GAAAC,MACA1C,GAAAD,SACA4C,OAAAF,EAAAE,OACAC,SAAAH,EAAAI,eACAC,UAAAC,qBACAC,QAAAP,EAAAQ,yBACAC,QAAAT,EAAAU,eACAC,SAAAX,EAAAY,iBACAC,QAAAb,EAAAc,KACAC,SAAAf,EAAAgB,oBACAC,WAAAjB,EAAAkB,sBACAC,QAAAC,ctG4jKMkM,IAAI,SAAStO,EAAQzB,EAAOD,GuGvkKlCC,EAAAD,SAAA,OvGykKMiQ,IAAI,SAASvO,EAAQzB,EAAOD,GwGzkKlCC,EAAAD,QAAA,SAAA6U,EAAArM,GACA,OACAsM,aAAA,EAAAD,GACAE,eAAA,EAAAF,GACAG,WAAA,EAAAH,GACArM,MAAAA,SxG6kKM2H,IAAI,SAASzO,EAAQzB,EAAOD,GyGllKlC,GAAAwQ,GAAA9O,EAAA,eACAzB,GAAAD,QAAA,SAAA0K,EAAAwK,GACA,IAAA,GAAApO,KAAAoO,GAAA1E,EAAA9F,EAAA5D,EAAAoO,EAAApO,GACA,OAAA4D,MzGqlKG+0B,eAAe,KAAKnvB,IAAI,SAAS5O,EAAQzB,EAAOD,G0GxlKnDC,EAAAD,QAAA0B,EAAA,c1G0lKGy8B,WAAW,KAAKrsB,IAAI,SAASpQ,EAAQzB,EAAOD,G2G1lK/C,YACA,IAAA0L,GAAAhK,EAAA,YACAuE,EAAAvE,EAAA,OACA+E,EAAA/E,EAAA,mBACAiU,EAAAjU,EAAA,WAAA,UAEAzB,GAAAD,QAAA,SAAA6K,GACA,GAAApD,GAAAiE,EAAAb,EACApE,IAAAgB,IAAAA,EAAAkO,IAAA1P,EAAA9C,QAAAsE,EAAAkO,GACAZ,cAAA,EACAzM,IAAA,WAAA,MAAA9H,Y3G8lKGq9B,MAAM,GAAGmB,WAAW,GAAGhB,kBAAkB,GAAGP,UAAU,KAAKrrB,IAAI,SAAS1Q,EAAQzB,EAAOD,G4GxmK1F,GAAAuI,GAAA7G,EAAA,OAAAyB,QACAkF,EAAA3G,EAAA,WACA0D,EAAA1D,EAAA,WAAA,cAEAzB,GAAAD,QAAA,SAAAgE,EAAA6R,EAAAC,GACA9R,IAAAqE,EAAArE,EAAA8R,EAAA9R,EAAAA,EAAA4D,UAAAxC,IAAAmD,EAAAvE,EAAAoB,GAAA2P,cAAA,EAAAvM,MAAAqN,O5G2mKGgoB,MAAM,GAAGK,UAAU,GAAGT,UAAU,KAAKprB,IAAI,SAAS3Q,EAAQzB,EAAOD,G6GhnKpE,GAAAM,GAAAoB,EAAA,cACAsU,EAAA,qBACAC,EAAA3V,EAAA0V,KAAA1V,EAAA0V,MACA/V,GAAAD,QAAA,SAAA8G,GACA,MAAAmP,GAAAnP,KAAAmP,EAAAnP,U7GmnKG+3B,aAAa,KAAKvsB,IAAI,SAAS5Q,EAAQzB,EAAOD,G8GvnKjDC,EAAAD,QAAA,SAAAgE,EAAAI,EAAAC,GACA,KAAAL,YAAAI,IAAA,KAAAH,WAAAI,EAAA,4BACA,OAAAL,S9G0nKMuO,IAAI,SAAS7Q,EAAQzB,EAAOD,G+G5nKlC,GAAAsW,GAAA5U,EAAA,kBACA2E,EAAA3E,EAAA,cAGAzB,GAAAD,QAAA,SAAAuW,GACA,MAAA,UAAA1P,EAAA2P,GACA,GAGAvV,GAAA8J,EAHAjK,EAAA2V,OAAApQ,EAAAQ,IACA1F,EAAAmV,EAAAE,GACAlV,EAAAR,EAAAU,MAEA,OAAA,GAAAL,GAAAA,GAAAG,EAAAiV,EAAA,GAAAhS,QACAtD,EAAAH,EAAA4V,WAAAvV,GACA,MAAAF,GAAAA,EAAA,OAAAE,EAAA,IAAAG,IAAAyJ,EAAAjK,EAAA4V,WAAAvV,EAAA,IAAA,OAAA4J,EAAA,MACAwL,EAAAzV,EAAA6V,OAAAxV,GAAAF,EACAsV,EAAAzV,EAAAiF,MAAA5E,EAAAA,EAAA,IAAAF,EAAA,OAAA,KAAA8J,EAAA,OAAA,W/GgoKGgzB,cAAc,GAAG2B,iBAAiB,KAAKxsB,IAAI,SAASxR,EAAQzB,EAAOD,GgH7oKtE,GAAA4Y,GAAA/J,KAAA+J,KACAC,EAAAhK,KAAAgK,KACA5Y,GAAAD,QAAA,SAAAgE,GACA,MAAA8U,OAAA9U,GAAAA,GAAA,GAAAA,EAAA,EAAA6U,EAAAD,GAAA5U,ShHipKM4Q,IAAI,SAASlT,EAAQzB,EAAOD,GiHppKlC,GAAAgZ,GAAAtX,EAAA,eACA2E,EAAA3E,EAAA,cACAzB,GAAAD,QAAA,SAAAgE,GACA,MAAAgV,GAAA3S,EAAArC,OjHwpKG+5B,cAAc,GAAG4B,cAAc,KAAK1qB,IAAI,SAASvT,EAAQzB,EAAOD,GkH3pKnE,GAAAsW,GAAA5U,EAAA,kBACAyX,EAAAtK,KAAAsK,GACAlZ,GAAAD,QAAA,SAAAgE,GACA,MAAAA,GAAA,EAAAmV,EAAA7C,EAAAtS,GAAA,kBAAA,KlH+pKG07B,iBAAiB,KAAKvqB,IAAI,SAASzT,EAAQzB,EAAOD,GmHnqKrD,GAAAyS,GAAA,EACA4G,EAAAxK,KAAAyK,QACArZ,GAAAD,QAAA,SAAA8G,GACA,MAAA,UAAAyS,OAAAhV,SAAAuC,EAAA,GAAAA,EAAA,QAAA2L,EAAA4G,GAAAvT,SAAA,WnHsqKMsP,IAAI,SAAS1T,EAAQzB,EAAOD,GoHzqKlC,GAAAiW,GAAAvU,EAAA,cAAA,OACA+X,EAAA/X,EAAA,WACAgY,EAAAhY,EAAA,cAAAgY,MACAzZ,GAAAD,QAAA,SAAAqE,GACA,MAAA4R,GAAA5R,KAAA4R,EAAA5R,GACAqV,GAAAA,EAAArV,KAAAqV,GAAAD,GAAA,UAAApV,OpH4qKGw6B,aAAa,GAAGe,aAAa,GAAGnB,UAAU,KAAK/oB,IAAI,SAAShU,EAAQzB,EAAOD,GqHjrK9E,GAAA0J,GAAAhI,EAAA,eACAoD,EAAApD,EAAA,WAAA,YACAkO,EAAAlO,EAAA,gBACAzB,GAAAD,QAAA0B,EAAA,YAAAoY,kBAAA,SAAA9V,GACA,MAAAO,SAAAP,EAAAA,EAAAc,IACAd,EAAA,eACA4L,EAAAlG,EAAA1F,IAFA,UrHsrKG06B,cAAc,EAAEM,WAAW,GAAGM,gBAAgB,GAAG7B,UAAU,KAAK7nB,IAAI,SAASlU,EAAQzB,EAAOD,GsH1rK/F,YACA,IAAAga,GAAAtY,EAAA,0BACA6E,EAAA7E,EAAA,iBACAkO,EAAAlO,EAAA,iBACAuY,EAAAvY,EAAA,iBAMAzB,GAAAD,QAAA0B,EAAA,mBAAAoO,MAAA,QAAA,SAAApH,EAAAC,GACAnI,KAAAoI,GAAAqR,EAAAvR,GACAlI,KAAAyG,GAAA,EACAzG,KAAAqI,GAAAF,GAEA,WACA,GAAApD,GAAA/E,KAAAoI,GACAD,EAAAnI,KAAAqI,GACA7B,EAAAxG,KAAAyG,IACA,QAAA1B,GAAAyB,GAAAzB,EAAA/D,QACAhB,KAAAoI,GAAArE,OACAgC,EAAA,IAEA,QAAAoC,EAAApC,EAAA,EAAAS,GACA,UAAA2B,EAAApC,EAAA,EAAAhB,EAAAyB,IACAT,EAAA,GAAAS,EAAAzB,EAAAyB,MACA,UAGA4I,EAAAsK,UAAAtK,EAAAE,MAEAkK,EAAA,QACAA,EAAA,UACAA,EAAA,atH4rKG6lB,yBAAyB,EAAEzB,kBAAkB,GAAGC,gBAAgB,GAAGiB,gBAAgB,GAAGQ,iBAAiB,KAAK/pB,IAAI,SAASrU,EAAQzB,EAAOD,GuH7tK3I,YACA,IAAAsa,GAAA5Y,EAAA,wBAGAA,GAAA,kBAAA,MAAA,SAAA4G,GACA,MAAA,YAAA,MAAAA,GAAA9H,KAAA8E,UAAA9D,OAAA,EAAA8D,UAAA,GAAAf,WAGA+D,IAAA,SAAAxB,GACA,GAAAC,GAAAuT,EAAA1T,SAAApG,KAAAsG,EACA,OAAAC,IAAAA,EAAAqB,GAGAmL,IAAA,SAAAzM,EAAA0B,GACA,MAAA8R,GAAA/R,IAAA/H,KAAA,IAAAsG,EAAA,EAAAA,EAAA0B,KAEA8R,GAAA,KvH+tKGylB,iBAAiB,GAAGC,wBAAwB,IAAI9pB,IAAI,SAASxU,EAAQzB,EAAOD,SAEzEqW,IAAI,SAAS3U,EAAQzB,EAAOD,GwHjvKlC,YACA,IAAA+e,GAAArd,EAAA,kBAAA,EAGAA,GAAA,mBAAA+U,OAAA,SAAA,SAAA/N,GACAlI,KAAAoI,GAAA6N,OAAA/N,GACAlI,KAAAyG,GAAA,GAEA,WACA,GAEA+X,GAFAzZ,EAAA/E,KAAAoI,GACA5B,EAAAxG,KAAAyG,EAEA,OAAAD,IAAAzB,EAAA/D,QAAAgH,MAAAjE,OAAA+J,MAAA,IACA0Q,EAAAD,EAAAxZ,EAAAyB,GACAxG,KAAAyG,IAAA+X,EAAAxd,QACAgH,MAAAwW,EAAA1Q,MAAA,QxHovKG8vB,kBAAkB,GAAG6B,gBAAgB,KAAKppB,IAAI,SAASnV,EAAQzB,EAAOD,GyHlwKzE,GAAA+J,GAAArI,EAAA,aAEAqI,GAAAA,EAAAqD,EAAA,OAAA+R,OAAAzd,EAAA,0BAAA,WzHqwKGw+B,yBAAyB,EAAEvB,aAAa,KAAKhmB,IAAI,SAASjX,EAAQzB,EAAOD,G0HxwK5E0B,EAAA,uBACA,IAAAkO,GAAAlO,EAAA,gBACAkO,GAAAuwB,SAAAvwB,EAAAwwB,eAAAxwB,EAAAE,Q1H0wKGwvB,gBAAgB,GAAG5f,uBAAuB,KAAK3G,IAAI,SAASrX,EAAQzB,EAAOD,G2H3vK9E,YAMA,SAAAg0B,GAAA7kB,GACA,MAAA,mBAAAA,IAAA,OAAAA,EAIA,QAAAkxB,GAAAtK,EAAAuK,GAIA,EAAA,CACA,GAAAC,GAAAD,EAAAtQ,MAAA,oBACAlpB,EAAA,OAAAy5B,EAAAA,EAAA,GAAAD,CAGA,IAFAA,EAAA,OAAAC,EAAAA,EAAA,GAAA,KAEAzwB,MAAAqnB,QAAApB,GAAA,CACA,GAAAyK,GAAAC,SAAA35B,EACA,IAAAgS,MAAA0nB,GACAzK,EAAAA,EAAAjvB,OACA,CACA,GAAA+tB,GAAA6L,QAAAjhB,WAAAnX,IAAAytB,EACAA,GAAAlB,EAAA8L,QAAAH,QAGAzK,GAAAA,EAAAjvB,SAEA,OAAAw5B,GAAAtM,EAAA+B,GAEA,OAAAA,GAEA,QAAA6K,GAAA7K,EAAAuK,GACA,GAAAO,GAAAP,EAAAtQ,MAAA,iBACA,OAAAgE,GAAA6M,GAGAR,EAAAtK,EAAA8K,EAAA,IAFA9K,EAQA,QAAA+K,GAAAC,GAEA,GAAAC,GAAA,GAAAC,GAAAF,EAAA7I,YAEA,OAAA,UAAAgJ,GACA,GAAAC,GAAA,cACA,QAEAC,YACA7X,OACA5c,KAAAhK,OACA6F,MAAA,WAAA,YAIA64B,WAAA,6BAEAC,QAAA,WACA,GAAA/gC,GAAAC,IACAugC,GAAAtI,iBAAAyI,GAAAzsB,KAAA,SAAA2mB,GACA76B,EAAAghC,YAAAnG,EACA+F,EAAA,QACA5gC,EAAAgT,IAAA,QAAA6nB,EAAA7R,OACA6R,EAAAiB,YAAA,WACA8E,EAAA,YACA5gC,EAAAgT,IAAA,QAAA,WAKA0D,OAAA,SAAA0K,EAAA4Z,GAEA,MAAA,UAAA4F,MACAjkB,SAAA+W,KAAA,qDAGAzzB,KAAA+gC,YAAAtqB,OAAA0K,EAAA4Z,IAGAiG,iBAAA,SAAA1pB,GACA,GAAA,UAAAqpB,EAAA,CAGA,GACArN,GAAA3S,EAAAhgB,EAAAsgC,EADAnB,EAAAxoB,EAAAwoB,KAEAlf,EAAAtJ,EAAAtP,KAEA,IAAAwrB,EAAA5S,IAAA4S,EAAA5S,EAAAsgB,eAGA,GAFApB,EAAAA,EAAAqB,OAAA,EAAArB,EAAA9+B,OAAA,WAAAA,QACAsyB,EAAA8M,EAAApgC,KAAA8/B,GACAtM,EAAAF,GAAA,CACA3S,EAAAmf,EAAAtQ,MAAA,UACA,IAAApvB,GAAAwgB,EAAAsgB,aAAAlgC,MACA,KAAAL,EAAA,EAAAP,EAAAO,EAAAA,IAAA,CACA,GAAAygC,GAAAxgB,EAAAsgB,aAAAvgC,EACA4/B,GAAA7I,YAAAzD,kBAAAX,EAAA3S,EAAA,GAAAygB,EAAA56B,MAAA46B,EAAAC,WAAAD,EAAApX,QAEA,IAAA0M,GAAApD,EAAA3S,EAAA,GACA,KAAAsgB,EAAA,EAAAA,EAAAG,EAAApX,QAAAhpB,OAAAigC,IACAT,EAAAc,OAAAthC,KAAA8/B,EAAA,KAAAsB,EAAA56B,MAAAy6B,GAAAG,EAAApX,QAAAiX,GAEA,KAAAA,EAAAG,EAAA56B,MAAA46B,EAAAC,WAAAJ,EAAAvK,EAAA11B,OAAAigC,IAAA,CACA,GAAAM,GAAAN,EAAAG,EAAAC,WAAAD,EAAApX,QAAAhpB,MACAw/B,GAAAc,OAAAthC,KAAA8/B,EAAA,IAAAyB,EAAA7K,EAAAuK,IAEA,IAAAA,EAAAG,EAAA56B,MAAAy6B,EAAAvK,EAAA11B,OAAAigC,IACAT,EAAAgB,KAAAxhC,KAAA8/B,EAAA,IAAAmB,EAAAvK,EAAAuK,UAMA,IADA3N,EAAA8M,EAAApgC,KAAA8/B,GACAtM,EAAAF,KAAAhkB,MAAAqnB,QAAArD,KAAAhkB,MAAAqnB,QAAA/V,GAAA,CACAD,EAAAmf,EAAAtQ,MAAA,UACA,IAAAjM,GAAAgd,EAAA7I,YAAA1D,iBAAAV,EAAA3S,EAAA,GAAAC,EACA4S,GAAAjQ,IACAid,EAAAc,OAAAthC,KAAA8/B,EAAAvc,GAEAiQ,EAAA5S,IACA4f,EAAAgB,KAAAxhC,KAAA8/B,EAAAlf,QA3HA,GAAA6f,GAAAv/B,EAAA,eAAAu/B,MAsIAjhC,GAAA8gC,oBAAAA,I3H8wKGmB,cAAc,KAAK/oB,IAAI,SAASxX,EAAQzB,EAAOD,G4Hv5KlD,YAMA,SAAAg0B,GAAA7kB,GACA,MAAA,mBAAAA,IAAA,OAAAA,EAGA,QAAA+yB,GAAAC,EAAAp2B,GACA,MAAA,YACAA,EAAAE,MAAAk2B,EAAA78B,YAIA,QAAA88B,GAAAC,EAAAC,GACA,GAAAD,IAAAC,IAAAtO,EAAAqO,KAAArO,EAAAsO,GACA,OAAA,CAEA,IAAAtO,EAAAqO,KAAArO,EAAAsO,GACA,OAAA,CAEA,IAAA1hC,GAAAyhC,EAAA7gC,MACA,IAAA8gC,EAAA9gC,SAAAZ,EACA,OAAA,CAEA,KAAA,GAAAO,GAAA,EAAAP,EAAAO,EAAAA,IACA,GAAAkhC,EAAAlhC,KAAAmhC,EAAAnhC,GACA,OAAA,CAGA,QAAA,EAIA,QAAA8/B,GAAA/I,GACA13B,KAAA+hC,UAAA,GAAA5gC,GAEAu2B,EAAA/D,aAAA+N,EAAA1hC,KAAAA,KAAAgiC,sBACAtK,EAAA9D,cAAA8N,EAAA1hC,KAAAA,KAAAiiC,uBAtCA,GAAA9gC,GAAAD,EAAA,6CA0CAu/B,GAAAr5B,UAAA46B,oBAAA,SAAA1O,EAAA3S,EAAAC,EAAA2C,GACA,GAAAA,IAAA3C,EAAA,CAGA,GAAAshB,GAAAliC,KAAA+hC,UAAAj6B,IAAAwrB;AACA,GAAAE,EAAA0O,IAAAA,EAAAlhC,OAAA,EAAA,CACA,GAAAuF,GAAA27B,EAAA,GACA3M,EAAAhvB,EAAAgvB,QACAuK,EAAAv5B,EAAA47B,SAAA,IAAAxhB,CACA4U,GAAAxiB,IAAA+sB,EAAAlf,OAEA0S,GAAA3S,GAAAC,IAKA6f,EAAAr5B,UAAA66B,qBAAA,SAAA3O,EAAA3S,EAAAna,EAAAqtB,EAAAuO,GACA,GAAA1L,GAAApD,EAAA3S,GACA0hB,EAAA3L,EAAAnxB,MAAAiB,EAAAA,EAAAqtB,EACA,KAAA+N,EAAAQ,EAAAC,GAAA,CAGA,GAAAH,GAAAliC,KAAA+hC,UAAAj6B,IAAAwrB,EACA,IAAAE,EAAA0O,IAAAA,EAAAlhC,OAAA,EAAA,CACA,GAAAuF,GAAA27B,EAAA,GACA3M,EAAAhvB,EAAAgvB,QACAuK,EAAAv5B,EAAA47B,SAAA,IAAAxhB,CACA,oBAAAyhB,GACA7M,EAAAxN,OAAA+X,EAAAt5B,EAAAqtB,GAEA0B,EAAAxN,OAAA+X,EAAAt5B,EAAAqtB,EAAAuO,OAGA,mBAAAA,GACA1L,EAAA3O,OAAAvhB,EAAAqtB,GAEA6C,EAAA3O,OAAAvhB,EAAAqtB,EAAAuO,KAMA3B,EAAAr5B,UAAAo6B,KAAA,SAAAjM,EAAA4M,EAAAn6B,GACA,GAAAwrB,EAAAxrB,IAAA,gBAAAA,GAAA,CAGA,GAAAk6B,GAAAliC,KAAA+hC,UAAAj6B,IAAAE,EAOA,IANAwrB,EAAA0O,KACAA,KACAliC,KAAA+hC,UAAAhvB,IAAA/K,EAAAk6B,IAEAA,EAAA19B,MAAA+wB,QAAAA,EAAA4M,SAAAA,IAEA7yB,MAAAqnB,QAAA3uB,GACA,IAAA,GAAArH,GAAA,EAAAA,EAAAqH,EAAAhH,OAAAL,IACAX,KAAAwhC,KAAAjM,EAAA4M,EAAA,IAAAxhC,EAAAqH,EAAArH,QAEA,IAAA,gBAAAqH,GACA,IAAA,GAAA2Y,KAAA3Y,GACAA,EAAAwG,eAAAmS,IACA3gB,KAAAwhC,KAAAjM,EAAA4M,EAAA,IAAAxhB,EAAA3Y,EAAA2Y,MAMA8f,EAAAr5B,UAAAk6B,OAAA,SAAA/L,EAAA4M,EAAAn6B,GACA,GAAAwrB,EAAAxrB,IAAA,gBAAAA,GAAA,CAGA,GAAAk6B,GAAAliC,KAAA+hC,UAAAj6B,IAAAE,EACA,IAAAwrB,EAAA0O,GAEA,IAAA,GADA9hC,GAAA8hC,EAAAlhC,OACAL,EAAA,EAAAP,EAAAO,EAAAA,IAAA,CACA,GAAA4F,GAAA27B,EAAAvhC,EACA,IAAA4F,EAAAgvB,UAAAA,GAAAhvB,EAAA47B,WAAAA,EAAA,CAGA,GAFAD,EAAAna,OAAApnB,EAAA,GAEA2O,MAAAqnB,QAAA3uB,GACA,IAAA,GAAAi5B,GAAA,EAAAA,EAAAj5B,EAAAhH,OAAAigC,IACAjhC,KAAAshC,OAAA/L,EAAA4M,EAAA,IAAAlB,EAAAj5B,EAAAi5B,QAEA,IAAA,gBAAAj5B,GACA,IAAA,GAAA2Y,KAAA3Y,GACAA,EAAAwG,eAAAmS,IACA3gB,KAAAshC,OAAA/L,EAAA4M,EAAA,IAAAxhB,EAAA3Y,EAAA2Y,GAIA,YAQAnhB,EAAAihC,OAAAA,I5H06KG7L,6CAA6C,IAAIhc,IAAI,SAAS1X,EAAQzB,EAAOD,G6HvjLhF,YAEA,IAAAu8B,GAAA76B,EAAA,kDAAA66B,QACAuE,EAAAp/B,EAAA,iBAAAo/B,mBAGA9gC,GAAAu8B,QAAA,SAAA9L,EAAAqI,GACA,GAAAiI,GAAAxE,EAAA9L,EAAAqI,EAEA,OADAiI,GAAA+B,eAAAhC,EAAAC,GACAA,K7H2kLGgC,iDAAiD,EAAEC,gBAAgB,UAAU,KAAK","file":"dolphin-polymer.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.dolphin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.dolphin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.map');\n_dereq_('../modules/es7.map.to-json');\nmodule.exports = _dereq_('../modules/_core').Map;\n},{\"../modules/_core\":15,\"../modules/es6.map\":57,\"../modules/es6.object.to-string\":58,\"../modules/es6.string.iterator\":61,\"../modules/es7.map.to-json\":62,\"../modules/web.dom.iterable\":64}],2:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.promise');\nmodule.exports = _dereq_('../modules/_core').Promise;\n},{\"../modules/_core\":15,\"../modules/es6.object.to-string\":58,\"../modules/es6.promise\":59,\"../modules/es6.string.iterator\":61,\"../modules/web.dom.iterable\":64}],3:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.set');\n_dereq_('../modules/es7.set.to-json');\nmodule.exports = _dereq_('../modules/_core').Set;\n},{\"../modules/_core\":15,\"../modules/es6.object.to-string\":58,\"../modules/es6.set\":60,\"../modules/es6.string.iterator\":61,\"../modules/es7.set.to-json\":63,\"../modules/web.dom.iterable\":64}],4:[function(_dereq_,module,exports){\nvar $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n},{}],5:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n},{}],6:[function(_dereq_,module,exports){\nmodule.exports = function(){ /* empty */ };\n},{}],7:[function(_dereq_,module,exports){\nmodule.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n},{}],8:[function(_dereq_,module,exports){\nvar isObject = _dereq_('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n},{\"./_is-object\":30}],9:[function(_dereq_,module,exports){\nvar forOf = _dereq_('./_for-of');\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n},{\"./_for-of\":22}],10:[function(_dereq_,module,exports){\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = _dereq_('./_cof')\n  , TAG = _dereq_('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n},{\"./_cof\":11,\"./_wks\":54}],11:[function(_dereq_,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n},{}],12:[function(_dereq_,module,exports){\n'use strict';\nvar $           = _dereq_('./_')\n  , hide        = _dereq_('./_hide')\n  , redefineAll = _dereq_('./_redefine-all')\n  , ctx         = _dereq_('./_ctx')\n  , anInstance  = _dereq_('./_an-instance')\n  , defined     = _dereq_('./_defined')\n  , forOf       = _dereq_('./_for-of')\n  , $iterDefine = _dereq_('./_iter-define')\n  , step        = _dereq_('./_iter-step')\n  , setSpecies  = _dereq_('./_set-species')\n  , DESCRIPTORS = _dereq_('./_descriptors')\n  , fastKey     = _dereq_('./_meta').fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n},{\"./_\":4,\"./_an-instance\":7,\"./_ctx\":16,\"./_defined\":17,\"./_descriptors\":18,\"./_for-of\":22,\"./_hide\":25,\"./_iter-define\":33,\"./_iter-step\":35,\"./_meta\":38,\"./_redefine-all\":41,\"./_set-species\":44}],13:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = _dereq_('./_classof')\n  , from    = _dereq_('./_array-from-iterable');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n},{\"./_array-from-iterable\":9,\"./_classof\":10}],14:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./_')\n  , global         = _dereq_('./_global')\n  , $export        = _dereq_('./_export')\n  , meta           = _dereq_('./_meta')\n  , fails          = _dereq_('./_fails')\n  , hide           = _dereq_('./_hide')\n  , redefineAll    = _dereq_('./_redefine-all')\n  , forOf          = _dereq_('./_for-of')\n  , anInstance     = _dereq_('./_an-instance')\n  , isObject       = _dereq_('./_is-object')\n  , setToStringTag = _dereq_('./_set-to-string-tag')\n  , DESCRIPTORS    = _dereq_('./_descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function(target, iterable){\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        anInstance(this, C, KEY);\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n},{\"./_\":4,\"./_an-instance\":7,\"./_descriptors\":18,\"./_export\":20,\"./_fails\":21,\"./_for-of\":22,\"./_global\":23,\"./_hide\":25,\"./_is-object\":30,\"./_meta\":38,\"./_redefine-all\":41,\"./_set-to-string-tag\":45}],15:[function(_dereq_,module,exports){\nvar core = module.exports = {version: '2.0.3'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n},{}],16:[function(_dereq_,module,exports){\n// optional / simple context binding\nvar aFunction = _dereq_('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n},{\"./_a-function\":5}],17:[function(_dereq_,module,exports){\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n},{}],18:[function(_dereq_,module,exports){\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !_dereq_('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n},{\"./_fails\":21}],19:[function(_dereq_,module,exports){\nvar isObject = _dereq_('./_is-object')\n  , document = _dereq_('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n},{\"./_global\":23,\"./_is-object\":30}],20:[function(_dereq_,module,exports){\nvar global    = _dereq_('./_global')\n  , core      = _dereq_('./_core')\n  , ctx       = _dereq_('./_ctx')\n  , hide      = _dereq_('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n},{\"./_core\":15,\"./_ctx\":16,\"./_global\":23,\"./_hide\":25}],21:[function(_dereq_,module,exports){\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n},{}],22:[function(_dereq_,module,exports){\nvar ctx         = _dereq_('./_ctx')\n  , call        = _dereq_('./_iter-call')\n  , isArrayIter = _dereq_('./_is-array-iter')\n  , anObject    = _dereq_('./_an-object')\n  , toLength    = _dereq_('./_to-length')\n  , getIterFn   = _dereq_('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};\n},{\"./_an-object\":8,\"./_ctx\":16,\"./_is-array-iter\":29,\"./_iter-call\":31,\"./_to-length\":52,\"./core.get-iterator-method\":55}],23:[function(_dereq_,module,exports){\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n},{}],24:[function(_dereq_,module,exports){\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n},{}],25:[function(_dereq_,module,exports){\nvar $          = _dereq_('./_')\n  , createDesc = _dereq_('./_property-desc');\nmodule.exports = _dereq_('./_descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n},{\"./_\":4,\"./_descriptors\":18,\"./_property-desc\":40}],26:[function(_dereq_,module,exports){\nmodule.exports = _dereq_('./_global').document && document.documentElement;\n},{\"./_global\":23}],27:[function(_dereq_,module,exports){\n// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};\n},{}],28:[function(_dereq_,module,exports){\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = _dereq_('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n},{\"./_cof\":11}],29:[function(_dereq_,module,exports){\n// check on default Array iterator\nvar Iterators  = _dereq_('./_iterators')\n  , ITERATOR   = _dereq_('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n},{\"./_iterators\":36,\"./_wks\":54}],30:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n},{}],31:[function(_dereq_,module,exports){\n// call something on iterator step with safe closing on error\nvar anObject = _dereq_('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n},{\"./_an-object\":8}],32:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./_')\n  , descriptor     = _dereq_('./_property-desc')\n  , setToStringTag = _dereq_('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_dereq_('./_hide')(IteratorPrototype, _dereq_('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n},{\"./_\":4,\"./_hide\":25,\"./_property-desc\":40,\"./_set-to-string-tag\":45,\"./_wks\":54}],33:[function(_dereq_,module,exports){\n'use strict';\nvar LIBRARY        = _dereq_('./_library')\n  , $export        = _dereq_('./_export')\n  , redefine       = _dereq_('./_redefine')\n  , hide           = _dereq_('./_hide')\n  , has            = _dereq_('./_has')\n  , Iterators      = _dereq_('./_iterators')\n  , $iterCreate    = _dereq_('./_iter-create')\n  , setToStringTag = _dereq_('./_set-to-string-tag')\n  , getProto       = _dereq_('./_').getProto\n  , ITERATOR       = _dereq_('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getProto($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n},{\"./_\":4,\"./_export\":20,\"./_has\":24,\"./_hide\":25,\"./_iter-create\":32,\"./_iterators\":36,\"./_library\":37,\"./_redefine\":42,\"./_set-to-string-tag\":45,\"./_wks\":54}],34:[function(_dereq_,module,exports){\nvar ITERATOR     = _dereq_('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n},{\"./_wks\":54}],35:[function(_dereq_,module,exports){\nmodule.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n},{}],36:[function(_dereq_,module,exports){\nmodule.exports = {};\n},{}],37:[function(_dereq_,module,exports){\nmodule.exports = true;\n},{}],38:[function(_dereq_,module,exports){\nvar META     = _dereq_('./_uid')('meta')\n  , isObject = _dereq_('./_is-object')\n  , has      = _dereq_('./_has')\n  , setDesc  = _dereq_('./_').setDesc\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !_dereq_('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};\n},{\"./_\":4,\"./_fails\":21,\"./_has\":24,\"./_is-object\":30,\"./_uid\":53}],39:[function(_dereq_,module,exports){\nvar global    = _dereq_('./_global')\n  , macrotask = _dereq_('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = _dereq_('./_cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};\n},{\"./_cof\":11,\"./_global\":23,\"./_task\":49}],40:[function(_dereq_,module,exports){\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n},{}],41:[function(_dereq_,module,exports){\nvar hide = _dereq_('./_hide');\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n},{\"./_hide\":25}],42:[function(_dereq_,module,exports){\nmodule.exports = _dereq_('./_hide');\n},{\"./_hide\":25}],43:[function(_dereq_,module,exports){\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar getDesc  = _dereq_('./_').getDesc\n  , isObject = _dereq_('./_is-object')\n  , anObject = _dereq_('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = _dereq_('./_ctx')(Function.call, getDesc(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n},{\"./_\":4,\"./_an-object\":8,\"./_ctx\":16,\"./_is-object\":30}],44:[function(_dereq_,module,exports){\n'use strict';\nvar core        = _dereq_('./_core')\n  , $           = _dereq_('./_')\n  , DESCRIPTORS = _dereq_('./_descriptors')\n  , SPECIES     = _dereq_('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n},{\"./_\":4,\"./_core\":15,\"./_descriptors\":18,\"./_wks\":54}],45:[function(_dereq_,module,exports){\nvar def = _dereq_('./_').setDesc\n  , has = _dereq_('./_has')\n  , TAG = _dereq_('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n},{\"./_\":4,\"./_has\":24,\"./_wks\":54}],46:[function(_dereq_,module,exports){\nvar global = _dereq_('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n},{\"./_global\":23}],47:[function(_dereq_,module,exports){\n// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = _dereq_('./_an-object')\n  , aFunction = _dereq_('./_a-function')\n  , SPECIES   = _dereq_('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n},{\"./_a-function\":5,\"./_an-object\":8,\"./_wks\":54}],48:[function(_dereq_,module,exports){\nvar toInteger = _dereq_('./_to-integer')\n  , defined   = _dereq_('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n},{\"./_defined\":17,\"./_to-integer\":50}],49:[function(_dereq_,module,exports){\nvar ctx                = _dereq_('./_ctx')\n  , invoke             = _dereq_('./_invoke')\n  , html               = _dereq_('./_html')\n  , cel                = _dereq_('./_dom-create')\n  , global             = _dereq_('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listner = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(_dereq_('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listner;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listner, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};\n},{\"./_cof\":11,\"./_ctx\":16,\"./_dom-create\":19,\"./_global\":23,\"./_html\":26,\"./_invoke\":27}],50:[function(_dereq_,module,exports){\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n},{}],51:[function(_dereq_,module,exports){\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = _dereq_('./_iobject')\n  , defined = _dereq_('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n},{\"./_defined\":17,\"./_iobject\":28}],52:[function(_dereq_,module,exports){\n// 7.1.15 ToLength\nvar toInteger = _dereq_('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n},{\"./_to-integer\":50}],53:[function(_dereq_,module,exports){\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n},{}],54:[function(_dereq_,module,exports){\nvar store      = _dereq_('./_shared')('wks')\n  , uid        = _dereq_('./_uid')\n  , Symbol     = _dereq_('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n},{\"./_global\":23,\"./_shared\":46,\"./_uid\":53}],55:[function(_dereq_,module,exports){\nvar classof   = _dereq_('./_classof')\n  , ITERATOR  = _dereq_('./_wks')('iterator')\n  , Iterators = _dereq_('./_iterators');\nmodule.exports = _dereq_('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n},{\"./_classof\":10,\"./_core\":15,\"./_iterators\":36,\"./_wks\":54}],56:[function(_dereq_,module,exports){\n'use strict';\nvar addToUnscopables = _dereq_('./_add-to-unscopables')\n  , step             = _dereq_('./_iter-step')\n  , Iterators        = _dereq_('./_iterators')\n  , toIObject        = _dereq_('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = _dereq_('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n},{\"./_add-to-unscopables\":6,\"./_iter-define\":33,\"./_iter-step\":35,\"./_iterators\":36,\"./_to-iobject\":51}],57:[function(_dereq_,module,exports){\n'use strict';\nvar strong = _dereq_('./_collection-strong');\n\n// 23.1 Map Objects\nmodule.exports = _dereq_('./_collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n},{\"./_collection\":14,\"./_collection-strong\":12}],58:[function(_dereq_,module,exports){\n\n},{}],59:[function(_dereq_,module,exports){\n'use strict';\nvar $                  = _dereq_('./_')\n  , LIBRARY            = _dereq_('./_library')\n  , global             = _dereq_('./_global')\n  , ctx                = _dereq_('./_ctx')\n  , classof            = _dereq_('./_classof')\n  , $export            = _dereq_('./_export')\n  , isObject           = _dereq_('./_is-object')\n  , anObject           = _dereq_('./_an-object')\n  , aFunction          = _dereq_('./_a-function')\n  , anInstance         = _dereq_('./_an-instance')\n  , forOf              = _dereq_('./_for-of')\n  , from               = _dereq_('./_array-from-iterable')\n  , setProto           = _dereq_('./_set-proto').set\n  , speciesConstructor = _dereq_('./_species-constructor')\n  , task               = _dereq_('./_task').set\n  , microtask          = _dereq_('./_microtask')\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar testResolve = function(sub){\n  var test = new $Promise(empty), promise;\n  if(sub)test.constructor = function(exec){\n    exec(empty, empty);\n  };\n  (promise = $Promise.resolve(test))['catch'](empty);\n  return promise === test;\n};\n\nvar USE_NATIVE = function(){\n  var works = false;\n  var SubPromise = function(x){\n    var self = new $Promise(x);\n    setProto(self, SubPromise.prototype);\n    return self;\n  };\n  try {\n    works = $Promise && $Promise.resolve && testResolve();\n    setProto(SubPromise, $Promise);\n    SubPromise.prototype = $.create($Promise.prototype, {constructor: {value: SubPromise}});\n    // actual Firefox has broken subclass support, test that\n    if(!(SubPromise.resolve(5).then(empty) instanceof SubPromise)){\n      works = false;\n    }\n    // V8 4.8- bug, https://code.google.com/p/v8/issues/detail?id=4162\n    if(works && _dereq_('./_descriptors')){\n      var thenableThenGotten = false;\n      $Promise.resolve($.setDesc({}, 'then', {\n        get: function(){ thenableThenGotten = true; }\n      }));\n      works = thenableThenGotten;\n    }\n  } catch(e){ works = false; }\n  return !!works;\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          result = handler === true ? value : handler(value);\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    if(isUnhandled(promise)){\n      var value = promise._v\n        , handler, console;\n      if(isNode){\n        process.emit('unhandledRejection', value, promise);\n      } else if(handler = global.onunhandledrejection){\n        handler({promise: promise, reason: value});\n      } else if((console = global.console) && console.error){\n        console.error('Unhandled promise rejection', value);\n      } promise._h = 2;\n    } promise._a = undefined;\n  });\n};\nvar isUnhandled = function(promise){\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  if(promise._h == 1)return false;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = _dereq_('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok   = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\n_dereq_('./_set-to-string-tag')($Promise, PROMISE);\n_dereq_('./_set-species')(PROMISE);\nWrapper = _dereq_('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE || testResolve(true)), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && _dereq_('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = from(iterable)\n        , remaining = values.length\n        , results   = Array(remaining);\n      if(remaining)$.each.call(values, function(promise, index){\n        var alreadyCalled = false;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled = true;\n          results[index] = value;\n          --remaining || resolve(results);\n        }, reject);\n      });\n      else resolve(results);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});\n},{\"./_\":4,\"./_a-function\":5,\"./_an-instance\":7,\"./_an-object\":8,\"./_array-from-iterable\":9,\"./_classof\":10,\"./_core\":15,\"./_ctx\":16,\"./_descriptors\":18,\"./_export\":20,\"./_for-of\":22,\"./_global\":23,\"./_is-object\":30,\"./_iter-detect\":34,\"./_library\":37,\"./_microtask\":39,\"./_redefine-all\":41,\"./_set-proto\":43,\"./_set-species\":44,\"./_set-to-string-tag\":45,\"./_species-constructor\":47,\"./_task\":49}],60:[function(_dereq_,module,exports){\n'use strict';\nvar strong = _dereq_('./_collection-strong');\n\n// 23.2 Set Objects\nmodule.exports = _dereq_('./_collection')('Set', function(get){\n  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value){\n    return strong.def(this, value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n},{\"./_collection\":14,\"./_collection-strong\":12}],61:[function(_dereq_,module,exports){\n'use strict';\nvar $at  = _dereq_('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_dereq_('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n},{\"./_iter-define\":33,\"./_string-at\":48}],62:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = _dereq_('./_export');\n\n$export($export.P + $export.R, 'Map', {toJSON: _dereq_('./_collection-to-json')('Map')});\n},{\"./_collection-to-json\":13,\"./_export\":20}],63:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = _dereq_('./_export');\n\n$export($export.P + $export.R, 'Set', {toJSON: _dereq_('./_collection-to-json')('Set')});\n},{\"./_collection-to-json\":13,\"./_export\":20}],64:[function(_dereq_,module,exports){\n_dereq_('./es6.array.iterator');\nvar global        = _dereq_('./_global')\n  , hide          = _dereq_('./_hide')\n  , Iterators     = _dereq_('./_iterators')\n  , TO_STRING_TAG = _dereq_('./_wks')('toStringTag')\n  , ArrayValues   = Iterators.Array;\n\n_dereq_('./_').each.call(['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], function(NAME){\n  var Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = ArrayValues;\n});\n},{\"./_\":4,\"./_global\":23,\"./_hide\":25,\"./_iterators\":36,\"./_wks\":54,\"./es6.array.iterator\":56}],65:[function(_dereq_,module,exports){\nvar opendolphin;\n(function (opendolphin) {\n    var Attribute = (function () {\n        function Attribute() {\n        }\n        Attribute.QUALIFIER_PROPERTY = \"qualifier\";\n        Attribute.DIRTY_PROPERTY = \"dirty\";\n        Attribute.BASE_VALUE = \"baseValue\";\n        Attribute.VALUE = \"value\";\n        Attribute.TAG = \"tag\";\n        return Attribute;\n    })();\n    opendolphin.Attribute = Attribute;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Command = (function () {\n        function Command() {\n            this.id = \"dolphin-core-command\";\n        }\n        return Command;\n    })();\n    opendolphin.Command = Command;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Tag = (function () {\n        function Tag() {\n        }\n        //Implemented as function so that it will never be changed from outside\n        /** The actual value of the attribute. This is the default if no tag is given.*/\n        Tag.value = function () {\n            return \"VALUE\";\n        };\n        /** the to-be-displayed String, not the key. I18N happens on the server. */\n        Tag.label = function () {\n            return \"LABEL\";\n        };\n        /** If the attribute represent tooltip**/\n        Tag.tooltip = function () {\n            return \"TOOLTIP\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint nullable:false */\n        Tag.mandatory = function () {\n            return \"MANDATORY\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint display:true */\n        Tag.visible = function () {\n            return \"VISIBLE\";\n        };\n        /** \"true\" or \"false\" */\n        Tag.enabled = function () {\n            return \"ENABLED\";\n        };\n        /** regular expression for local, syntactical constraints like in \"rejectField\" */\n        Tag.regex = function () {\n            return \"REGEX\";\n        };\n        /** a single text; e.g. \"textArea\" if the String value should be displayed in a text area instead of a textField */\n        Tag.widgetHint = function () {\n            return \"WIDGET_HINT\";\n        };\n        /** a single text; e.g. \"java.util.Date\" if the value String represents a date */\n        Tag.valueType = function () {\n            return \"VALUE_TYPE\";\n        };\n        return Tag;\n    })();\n    opendolphin.Tag = Tag;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeCreatedNotification = (function (_super) {\n        __extends(AttributeCreatedNotification, _super);\n        function AttributeCreatedNotification(pmId, attributeId, propertyName, newValue, qualifier, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.attributeId = attributeId;\n            this.propertyName = propertyName;\n            this.newValue = newValue;\n            this.qualifier = qualifier;\n            this.tag = tag;\n            this.id = 'AttributeCreated';\n            this.className = \"org.opendolphin.core.comm.AttributeCreatedNotification\";\n        }\n        return AttributeCreatedNotification;\n    })(opendolphin.Command);\n    opendolphin.AttributeCreatedNotification = AttributeCreatedNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeMetadataChangedCommand = (function (_super) {\n        __extends(AttributeMetadataChangedCommand, _super);\n        function AttributeMetadataChangedCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'AttributeMetadataChanged';\n            this.className = \"org.opendolphin.core.comm.AttributeMetadataChangedCommand\";\n        }\n        return AttributeMetadataChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.AttributeMetadataChangedCommand = AttributeMetadataChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var BaseValueChangedCommand = (function (_super) {\n        __extends(BaseValueChangedCommand, _super);\n        function BaseValueChangedCommand(attributeId) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.id = 'BaseValueChanged';\n            this.className = \"org.opendolphin.core.comm.BaseValueChangedCommand\";\n        }\n        return BaseValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.BaseValueChangedCommand = BaseValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CallNamedActionCommand = (function (_super) {\n        __extends(CallNamedActionCommand, _super);\n        function CallNamedActionCommand(actionName) {\n            _super.call(this);\n            this.actionName = actionName;\n            this.id = 'CallNamedAction';\n            this.className = \"org.opendolphin.core.comm.CallNamedActionCommand\";\n        }\n        return CallNamedActionCommand;\n    })(opendolphin.Command);\n    opendolphin.CallNamedActionCommand = CallNamedActionCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ChangeAttributeMetadataCommand = (function (_super) {\n        __extends(ChangeAttributeMetadataCommand, _super);\n        function ChangeAttributeMetadataCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'ChangeAttributeMetadata';\n            this.className = \"org.opendolphin.core.comm.ChangeAttributeMetadataCommand\";\n        }\n        return ChangeAttributeMetadataCommand;\n    })(opendolphin.Command);\n    opendolphin.ChangeAttributeMetadataCommand = ChangeAttributeMetadataCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var EventBus = (function () {\n        function EventBus() {\n            this.eventHandlers = [];\n        }\n        EventBus.prototype.onEvent = function (eventHandler) {\n            this.eventHandlers.push(eventHandler);\n        };\n        EventBus.prototype.trigger = function (event) {\n            this.eventHandlers.forEach(function (handle) { return handle(event); });\n        };\n        return EventBus;\n    })();\n    opendolphin.EventBus = EventBus;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var presentationModelInstanceCount = 0; // todo dk: consider making this static in class\n    var ClientPresentationModel = (function () {\n        function ClientPresentationModel(id, presentationModelType) {\n            this.id = id;\n            this.presentationModelType = presentationModelType;\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.dirty = false;\n            if (typeof id !== 'undefined' && id != null) {\n                this.id = id;\n            }\n            else {\n                this.id = (presentationModelInstanceCount++).toString();\n            }\n            this.invalidBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n        }\n        // todo dk: align with Java version: move to ClientDolphin and auto-add to model store\n        /** a copy constructor for anything but IDs. Per default, copies are client side only, no automatic update applies. */\n        ClientPresentationModel.prototype.copy = function () {\n            var result = new ClientPresentationModel(null, this.presentationModelType);\n            result.clientSideOnly = true;\n            this.getAttributes().forEach(function (attribute) {\n                var attributeCopy = attribute.copy();\n                result.addAttribute(attributeCopy);\n            });\n            return result;\n        };\n        //add array of attributes\n        ClientPresentationModel.prototype.addAttributes = function (attributes) {\n            var _this = this;\n            if (!attributes || attributes.length < 1)\n                return;\n            attributes.forEach(function (attr) {\n                _this.addAttribute(attr);\n            });\n        };\n        ClientPresentationModel.prototype.addAttribute = function (attribute) {\n            var _this = this;\n            if (!attribute || (this.attributes.indexOf(attribute) > -1)) {\n                return;\n            }\n            if (this.findAttributeByPropertyNameAndTag(attribute.propertyName, attribute.tag)) {\n                throw new Error(\"There already is an attribute with property name: \" + attribute.propertyName\n                    + \" and tag: \" + attribute.tag + \" in presentation model with id: \" + this.id);\n            }\n            if (attribute.getQualifier() && this.findAttributeByQualifier(attribute.getQualifier())) {\n                throw new Error(\"There already is an attribute with qualifier: \" + attribute.getQualifier()\n                    + \" in presentation model with id: \" + this.id);\n            }\n            attribute.setPresentationModel(this);\n            this.attributes.push(attribute);\n            if (attribute.tag == opendolphin.Tag.value()) {\n                this.updateDirty();\n            }\n            attribute.onValueChange(function (evt) {\n                _this.invalidBus.trigger({ source: _this });\n            });\n        };\n        ClientPresentationModel.prototype.updateDirty = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].isDirty()) {\n                    this.setDirty(true);\n                    return;\n                }\n            }\n            ;\n            this.setDirty(false);\n        };\n        ClientPresentationModel.prototype.updateAttributeDirtyness = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                this.attributes[i].updateDirty();\n            }\n        };\n        ClientPresentationModel.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientPresentationModel.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n        };\n        ClientPresentationModel.prototype.reset = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.reset();\n            });\n        };\n        ClientPresentationModel.prototype.rebase = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.rebase();\n            });\n        };\n        ClientPresentationModel.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientPresentationModel.prototype.onInvalidated = function (handleInvalidate) {\n            this.invalidBus.onEvent(handleInvalidate);\n        };\n        /** returns a copy of the internal state */\n        ClientPresentationModel.prototype.getAttributes = function () {\n            return this.attributes.slice(0);\n        };\n        ClientPresentationModel.prototype.getAt = function (propertyName, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            return this.findAttributeByPropertyNameAndTag(propertyName, tag);\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyName = function (propertyName) {\n            return this.findAttributeByPropertyNameAndTag(propertyName, opendolphin.Tag.value());\n        };\n        ClientPresentationModel.prototype.findAllAttributesByPropertyName = function (propertyName) {\n            var result = [];\n            if (!propertyName)\n                return null;\n            this.attributes.forEach(function (attribute) {\n                if (attribute.propertyName == propertyName) {\n                    result.push(attribute);\n                }\n            });\n            return result;\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyNameAndTag = function (propertyName, tag) {\n            if (!propertyName || !tag)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if ((this.attributes[i].propertyName == propertyName) && (this.attributes[i].tag == tag)) {\n                    return this.attributes[i];\n                }\n            }\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeByQualifier = function (qualifier) {\n            if (!qualifier)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].getQualifier() == qualifier) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeById = function (id) {\n            if (!id)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].id == id) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.syncWith = function (sourcePresentationModel) {\n            this.attributes.forEach(function (targetAttribute) {\n                var sourceAttribute = sourcePresentationModel.getAt(targetAttribute.propertyName, targetAttribute.tag);\n                if (sourceAttribute) {\n                    targetAttribute.syncWith(sourceAttribute);\n                }\n            });\n        };\n        return ClientPresentationModel;\n    })();\n    opendolphin.ClientPresentationModel = ClientPresentationModel;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientAttribute = (function () {\n        function ClientAttribute(propertyName, qualifier, value, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            this.propertyName = propertyName;\n            this.tag = tag;\n            this.dirty = false;\n            this.id = \"\" + (ClientAttribute.clientAttributeInstanceCount++) + \"C\";\n            this.valueChangeBus = new opendolphin.EventBus();\n            this.qualifierChangeBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n            this.baseValueChangeBus = new opendolphin.EventBus();\n            this.setValue(value);\n            this.setBaseValue(value);\n            this.setQualifier(qualifier);\n        }\n        /** a copy constructor with new id and no presentation model */\n        ClientAttribute.prototype.copy = function () {\n            var result = new ClientAttribute(this.propertyName, this.getQualifier(), this.getValue(), this.tag);\n            result.setBaseValue(this.getBaseValue());\n            return result;\n        };\n        ClientAttribute.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientAttribute.prototype.getBaseValue = function () {\n            return this.baseValue;\n        };\n        ClientAttribute.prototype.setPresentationModel = function (presentationModel) {\n            if (this.presentationModel) {\n                alert(\"You can not set a presentation model for an attribute that is already bound.\");\n            }\n            this.presentationModel = presentationModel;\n        };\n        ClientAttribute.prototype.getPresentationModel = function () {\n            return this.presentationModel;\n        };\n        ClientAttribute.prototype.getValue = function () {\n            return this.value;\n        };\n        ClientAttribute.prototype.setValue = function (newValue) {\n            var verifiedValue = ClientAttribute.checkValue(newValue);\n            if (this.value == verifiedValue)\n                return;\n            var oldValue = this.value;\n            this.value = verifiedValue;\n            this.setDirty(this.calculateDirty(this.baseValue, verifiedValue));\n            this.valueChangeBus.trigger({ 'oldValue': oldValue, 'newValue': verifiedValue });\n        };\n        ClientAttribute.prototype.calculateDirty = function (baseValue, value) {\n            if (baseValue == null) {\n                return value != null;\n            }\n            else {\n                return baseValue != value;\n            }\n        };\n        ClientAttribute.prototype.updateDirty = function () {\n            this.setDirty(this.calculateDirty(this.baseValue, this.value));\n        };\n        ClientAttribute.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n            if (this.presentationModel)\n                this.presentationModel.updateDirty();\n        };\n        ClientAttribute.prototype.setQualifier = function (newQualifier) {\n            if (this.qualifier == newQualifier)\n                return;\n            var oldQualifier = this.qualifier;\n            this.qualifier = newQualifier;\n            this.qualifierChangeBus.trigger({ 'oldValue': oldQualifier, 'newValue': newQualifier });\n        };\n        ClientAttribute.prototype.getQualifier = function () {\n            return this.qualifier;\n        };\n        ClientAttribute.prototype.setBaseValue = function (baseValue) {\n            if (this.baseValue == baseValue)\n                return;\n            var oldBaseValue = this.baseValue;\n            this.baseValue = baseValue;\n            this.setDirty(this.calculateDirty(baseValue, this.value));\n            this.baseValueChangeBus.trigger({ 'oldValue': oldBaseValue, 'newValue': baseValue });\n        };\n        ClientAttribute.prototype.rebase = function () {\n            this.setBaseValue(this.value);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.prototype.reset = function () {\n            this.setValue(this.baseValue);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.checkValue = function (value) {\n            if (value == null || value == undefined) {\n                return null;\n            }\n            var result = value;\n            if (result instanceof String || result instanceof Boolean || result instanceof Number) {\n                result = value.valueOf();\n            }\n            if (result instanceof ClientAttribute) {\n                console.log(\"An Attribute may not itself contain an attribute as a value. Assuming you forgot to call value.\");\n                result = this.checkValue(value.value);\n            }\n            var ok = false;\n            if (this.SUPPORTED_VALUE_TYPES.indexOf(typeof result) > -1 || result instanceof Date) {\n                ok = true;\n            }\n            if (!ok) {\n                throw new Error(\"Attribute values of this type are not allowed: \" + typeof value);\n            }\n            return result;\n        };\n        ClientAttribute.prototype.onValueChange = function (eventHandler) {\n            this.valueChangeBus.onEvent(eventHandler);\n            eventHandler({ \"oldValue\": this.value, \"newValue\": this.value });\n        };\n        ClientAttribute.prototype.onQualifierChange = function (eventHandler) {\n            this.qualifierChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onBaseValueChange = function (eventHandler) {\n            this.baseValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.syncWith = function (sourceAttribute) {\n            if (sourceAttribute) {\n                this.setQualifier(sourceAttribute.getQualifier()); // sequence is important\n                this.setBaseValue(sourceAttribute.getBaseValue());\n                this.setValue(sourceAttribute.value);\n            }\n        };\n        ClientAttribute.SUPPORTED_VALUE_TYPES = [\"string\", \"number\", \"boolean\"];\n        ClientAttribute.clientAttributeInstanceCount = 0;\n        return ClientAttribute;\n    })();\n    opendolphin.ClientAttribute = ClientAttribute;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var ValueChangedCommand = (function (_super) {\n        __extends(ValueChangedCommand, _super);\n        function ValueChangedCommand(attributeId, oldValue, newValue) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.oldValue = oldValue;\n            this.newValue = newValue;\n            this.id = \"ValueChanged\";\n            this.className = \"org.opendolphin.core.comm.ValueChangedCommand\";\n        }\n        return ValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.ValueChangedCommand = ValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var NamedCommand = (function (_super) {\n        __extends(NamedCommand, _super);\n        function NamedCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.NamedCommand\";\n        }\n        return NamedCommand;\n    })(opendolphin.Command);\n    opendolphin.NamedCommand = NamedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var EmptyNotification = (function (_super) {\n        __extends(EmptyNotification, _super);\n        function EmptyNotification() {\n            _super.call(this);\n            this.id = \"Empty\";\n            this.className = \"org.opendolphin.core.comm.EmptyNotification\";\n        }\n        return EmptyNotification;\n    })(opendolphin.Command);\n    opendolphin.EmptyNotification = EmptyNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"NamedCommand.ts\"/>\n/// <reference path=\"EmptyNotification.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /** A Batcher that does no batching but merely takes the first element of the queue as the single item in the batch */\n    var NoCommandBatcher = (function () {\n        function NoCommandBatcher() {\n        }\n        NoCommandBatcher.prototype.batch = function (queue) {\n            return [queue.shift()];\n        };\n        return NoCommandBatcher;\n    })();\n    opendolphin.NoCommandBatcher = NoCommandBatcher;\n    /** A batcher that batches the blinds (commands with no callback) and optionally also folds value changes */\n    var BlindCommandBatcher = (function () {\n        /** folding: whether we should try folding ValueChangedCommands */\n        function BlindCommandBatcher(folding, maxBatchSize) {\n            if (folding === void 0) { folding = true; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.folding = folding;\n            this.maxBatchSize = maxBatchSize;\n        }\n        BlindCommandBatcher.prototype.batch = function (queue) {\n            var result = [];\n            this.processNext(this.maxBatchSize, queue, result); // do not batch more than this.maxBatchSize commands to avoid stack overflow on recursion.\n            return result;\n        };\n        // recursive impl method to side-effect both queue and batch\n        BlindCommandBatcher.prototype.processNext = function (maxBatchSize, queue, batch) {\n            if (queue.length < 1 || maxBatchSize < 1)\n                return;\n            var candidate = queue.shift();\n            if (this.folding && candidate.command instanceof opendolphin.ValueChangedCommand && (!candidate.handler)) {\n                var found = null;\n                var canCmd = candidate.command;\n                for (var i = 0; i < batch.length && found == null; i++) {\n                    if (batch[i].command instanceof opendolphin.ValueChangedCommand) {\n                        var batchCmd = batch[i].command;\n                        if (canCmd.attributeId == batchCmd.attributeId && batchCmd.newValue == canCmd.oldValue) {\n                            found = batchCmd;\n                        }\n                    }\n                }\n                if (found) {\n                    found.newValue = canCmd.newValue; // change existing value, do not batch\n                }\n                else {\n                    batch.push(candidate); // we cannot merge, so batch the candidate\n                }\n            }\n            else {\n                batch.push(candidate);\n            }\n            if (!candidate.handler &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.NamedCommand\") &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.EmptyNotification\") // and no unknown client side effect\n            ) {\n                this.processNext(maxBatchSize - 1, queue, batch); // then we can proceed with batching\n            }\n        };\n        return BlindCommandBatcher;\n    })();\n    opendolphin.BlindCommandBatcher = BlindCommandBatcher;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Codec = (function () {\n        function Codec() {\n        }\n        Codec.prototype.encode = function (commands) {\n            return JSON.stringify(commands); // todo dk: look for possible API support for character encoding\n        };\n        Codec.prototype.decode = function (transmitted) {\n            if (typeof transmitted == 'string') {\n                return JSON.parse(transmitted);\n            }\n            else {\n                return transmitted;\n            }\n        };\n        return Codec;\n    })();\n    opendolphin.Codec = Codec;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var SignalCommand = (function (_super) {\n        __extends(SignalCommand, _super);\n        function SignalCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.SignalCommand\";\n        }\n        return SignalCommand;\n    })(opendolphin.Command);\n    opendolphin.SignalCommand = SignalCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CreatePresentationModelCommand = (function (_super) {\n        __extends(CreatePresentationModelCommand, _super);\n        function CreatePresentationModelCommand(presentationModel) {\n            _super.call(this);\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.id = \"CreatePresentationModel\";\n            this.className = \"org.opendolphin.core.comm.CreatePresentationModelCommand\";\n            this.pmId = presentationModel.id;\n            this.pmType = presentationModel.presentationModelType;\n            var attrs = this.attributes;\n            presentationModel.getAttributes().forEach(function (attr) {\n                attrs.push({\n                    propertyName: attr.propertyName,\n                    id: attr.id,\n                    qualifier: attr.getQualifier(),\n                    value: attr.getValue(),\n                    tag: attr.tag\n                });\n            });\n        }\n        return CreatePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.CreatePresentationModelCommand = CreatePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Map = (function () {\n        function Map() {\n            this.keys = [];\n            this.data = [];\n        }\n        Map.prototype.put = function (key, value) {\n            if (!this.containsKey(key)) {\n                this.keys.push(key);\n            }\n            this.data[this.keys.indexOf(key)] = value;\n        };\n        Map.prototype.get = function (key) {\n            return this.data[this.keys.indexOf(key)];\n        };\n        Map.prototype.remove = function (key) {\n            if (this.containsKey(key)) {\n                var index = this.keys.indexOf(key);\n                this.keys.splice(index, 1);\n                this.data.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        Map.prototype.isEmpty = function () {\n            return this.keys.length == 0;\n        };\n        Map.prototype.length = function () {\n            return this.keys.length;\n        };\n        Map.prototype.forEach = function (handler) {\n            for (var i = 0; i < this.keys.length; i++) {\n                handler(this.keys[i], this.data[i]);\n            }\n        };\n        Map.prototype.containsKey = function (key) {\n            return this.keys.indexOf(key) > -1;\n        };\n        Map.prototype.containsValue = function (value) {\n            return this.data.indexOf(value) > -1;\n        };\n        Map.prototype.values = function () {\n            return this.data.slice(0);\n        };\n        Map.prototype.keySet = function () {\n            return this.keys.slice(0);\n        };\n        return Map;\n    })();\n    opendolphin.Map = Map;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedAllPresentationModelsOfTypeNotification = (function (_super) {\n        __extends(DeletedAllPresentationModelsOfTypeNotification, _super);\n        function DeletedAllPresentationModelsOfTypeNotification(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeletedAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeletedAllPresentationModelsOfTypeNotification\";\n        }\n        return DeletedAllPresentationModelsOfTypeNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedAllPresentationModelsOfTypeNotification = DeletedAllPresentationModelsOfTypeNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedPresentationModelNotification = (function (_super) {\n        __extends(DeletedPresentationModelNotification, _super);\n        function DeletedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletedPresentationModelNotification\";\n        }\n        return DeletedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedPresentationModelNotification = DeletedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"CreatePresentationModelCommand.ts\"/>\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"ChangeAttributeMetadataCommand.ts\"/>\n/// <reference path=\"Attribute.ts\"/>\n/// <reference path=\"Map.ts\"/>\n/// <reference path=\"DeletedAllPresentationModelsOfTypeNotification.ts\"/>\n/// <reference path=\"EventBus.ts\"/>\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"DeletedPresentationModelNotification.ts\"/>\n/// <reference path=\"BaseValueChangedCommand.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    (function (Type) {\n        Type[Type[\"ADDED\"] = 'ADDED'] = \"ADDED\";\n        Type[Type[\"REMOVED\"] = 'REMOVED'] = \"REMOVED\";\n    })(opendolphin.Type || (opendolphin.Type = {}));\n    var Type = opendolphin.Type;\n    var ClientModelStore = (function () {\n        function ClientModelStore(clientDolphin) {\n            this.clientDolphin = clientDolphin;\n            this.presentationModels = new opendolphin.Map();\n            this.presentationModelsPerType = new opendolphin.Map();\n            this.attributesPerId = new opendolphin.Map();\n            this.attributesPerQualifier = new opendolphin.Map();\n            this.modelStoreChangeBus = new opendolphin.EventBus();\n        }\n        ClientModelStore.prototype.getClientDolphin = function () {\n            return this.clientDolphin;\n        };\n        ClientModelStore.prototype.registerModel = function (model) {\n            var _this = this;\n            if (model.clientSideOnly) {\n                return;\n            }\n            var connector = this.clientDolphin.getClientConnector();\n            var createPMCommand = new opendolphin.CreatePresentationModelCommand(model);\n            connector.send(createPMCommand, null);\n            model.getAttributes().forEach(function (attribute) {\n                _this.registerAttribute(attribute);\n            });\n        };\n        ClientModelStore.prototype.registerAttribute = function (attribute) {\n            var _this = this;\n            this.addAttributeById(attribute);\n            if (attribute.getQualifier()) {\n                this.addAttributeByQualifier(attribute);\n            }\n            // whenever an attribute changes its value, the server needs to be notified\n            // and all other attributes with the same qualifier are given the same value\n            attribute.onValueChange(function (evt) {\n                var valueChangeCommand = new opendolphin.ValueChangedCommand(attribute.id, evt.oldValue, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(valueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setValue(attribute.getValue());\n                    });\n                }\n            });\n            // all attributes with the same qualifier should have the same base value\n            attribute.onBaseValueChange(function (evt) {\n                var baseValueChangeCommand = new opendolphin.BaseValueChangedCommand(attribute.id);\n                _this.clientDolphin.getClientConnector().send(baseValueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setBaseValue(attribute.getBaseValue());\n                    });\n                }\n            });\n            attribute.onQualifierChange(function (evt) {\n                var changeAttrMetadataCmd = new opendolphin.ChangeAttributeMetadataCommand(attribute.id, opendolphin.Attribute.QUALIFIER_PROPERTY, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(changeAttrMetadataCmd, null);\n            });\n        };\n        ClientModelStore.prototype.add = function (model) {\n            if (!model) {\n                return false;\n            }\n            if (this.presentationModels.containsKey(model.id)) {\n                console.log(\"There already is a PM with id \" + model.id);\n            }\n            var added = false;\n            if (!this.presentationModels.containsValue(model)) {\n                this.presentationModels.put(model.id, model);\n                this.addPresentationModelByType(model);\n                this.registerModel(model);\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.ADDED, 'clientPresentationModel': model });\n                added = true;\n            }\n            return added;\n        };\n        ClientModelStore.prototype.remove = function (model) {\n            var _this = this;\n            if (!model) {\n                return false;\n            }\n            var removed = false;\n            if (this.presentationModels.containsValue(model)) {\n                this.removePresentationModelByType(model);\n                this.presentationModels.remove(model.id);\n                model.getAttributes().forEach(function (attribute) {\n                    _this.removeAttributeById(attribute);\n                    if (attribute.getQualifier()) {\n                        _this.removeAttributeByQualifier(attribute);\n                    }\n                });\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.REMOVED, 'clientPresentationModel': model });\n                removed = true;\n            }\n            return removed;\n        };\n        ClientModelStore.prototype.findAttributesByFilter = function (filter) {\n            var matches = [];\n            this.presentationModels.forEach(function (key, model) {\n                model.getAttributes().forEach(function (attr) {\n                    if (filter(attr)) {\n                        matches.push(attr);\n                    }\n                });\n            });\n            return matches;\n        };\n        ClientModelStore.prototype.addPresentationModelByType = function (model) {\n            if (!model) {\n                return;\n            }\n            var type = model.presentationModelType;\n            if (!type) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(type);\n            if (!presentationModels) {\n                presentationModels = [];\n                this.presentationModelsPerType.put(type, presentationModels);\n            }\n            if (!(presentationModels.indexOf(model) > -1)) {\n                presentationModels.push(model);\n            }\n        };\n        ClientModelStore.prototype.removePresentationModelByType = function (model) {\n            if (!model || !(model.presentationModelType)) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(model.presentationModelType);\n            if (!presentationModels) {\n                return;\n            }\n            if (presentationModels.length > -1) {\n                presentationModels.splice(presentationModels.indexOf(model), 1);\n            }\n            if (presentationModels.length === 0) {\n                this.presentationModelsPerType.remove(model.presentationModelType);\n            }\n        };\n        ClientModelStore.prototype.listPresentationModelIds = function () {\n            return this.presentationModels.keySet().slice(0);\n        };\n        ClientModelStore.prototype.listPresentationModels = function () {\n            return this.presentationModels.values();\n        };\n        ClientModelStore.prototype.findPresentationModelById = function (id) {\n            return this.presentationModels.get(id);\n        };\n        ClientModelStore.prototype.findAllPresentationModelByType = function (type) {\n            if (!type || !this.presentationModelsPerType.containsKey(type)) {\n                return [];\n            }\n            return this.presentationModelsPerType.get(type).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            var _this = this;\n            var presentationModels = this.findAllPresentationModelByType(presentationModelType);\n            presentationModels.forEach(function (pm) {\n                _this.deletePresentationModel(pm, false);\n            });\n            this.clientDolphin.getClientConnector().send(new opendolphin.DeletedAllPresentationModelsOfTypeNotification(presentationModelType), undefined);\n        };\n        ClientModelStore.prototype.deletePresentationModel = function (model, notify) {\n            if (!model) {\n                return;\n            }\n            if (this.containsPresentationModel(model.id)) {\n                this.remove(model);\n                if (!notify || model.clientSideOnly) {\n                    return;\n                }\n                this.clientDolphin.getClientConnector().send(new opendolphin.DeletedPresentationModelNotification(model.id), null);\n            }\n        };\n        ClientModelStore.prototype.containsPresentationModel = function (id) {\n            return this.presentationModels.containsKey(id);\n        };\n        ClientModelStore.prototype.addAttributeById = function (attribute) {\n            if (!attribute || this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.put(attribute.id, attribute);\n        };\n        ClientModelStore.prototype.removeAttributeById = function (attribute) {\n            if (!attribute || !this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.remove(attribute.id);\n        };\n        ClientModelStore.prototype.findAttributeById = function (id) {\n            return this.attributesPerId.get(id);\n        };\n        ClientModelStore.prototype.addAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                attributes = [];\n                this.attributesPerQualifier.put(attribute.getQualifier(), attributes);\n            }\n            if (!(attributes.indexOf(attribute) > -1)) {\n                attributes.push(attribute);\n            }\n        };\n        ClientModelStore.prototype.removeAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                return;\n            }\n            if (attributes.length > -1) {\n                attributes.splice(attributes.indexOf(attribute), 1);\n            }\n            if (attributes.length === 0) {\n                this.attributesPerQualifier.remove(attribute.getQualifier());\n            }\n        };\n        ClientModelStore.prototype.findAllAttributesByQualifier = function (qualifier) {\n            if (!qualifier || !this.attributesPerQualifier.containsKey(qualifier)) {\n                return [];\n            }\n            return this.attributesPerQualifier.get(qualifier).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.onModelStoreChange = function (eventHandler) {\n            this.modelStoreChangeBus.onEvent(eventHandler);\n        };\n        ClientModelStore.prototype.onModelStoreChangeForType = function (presentationModelType, eventHandler) {\n            this.modelStoreChangeBus.onEvent(function (pmStoreEvent) {\n                if (pmStoreEvent.clientPresentationModel.presentationModelType == presentationModelType) {\n                    eventHandler(pmStoreEvent);\n                }\n            });\n        };\n        return ClientModelStore;\n    })();\n    opendolphin.ClientModelStore = ClientModelStore;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"EmptyNotification.ts\" />\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientModelStore.ts\" />\n/// <reference path=\"ClientConnector.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"AttributeCreatedNotification.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientDolphin = (function () {\n        function ClientDolphin() {\n        }\n        ClientDolphin.prototype.setClientConnector = function (clientConnector) {\n            this.clientConnector = clientConnector;\n        };\n        ClientDolphin.prototype.getClientConnector = function () {\n            return this.clientConnector;\n        };\n        ClientDolphin.prototype.send = function (commandName, onFinished) {\n            this.clientConnector.send(new opendolphin.NamedCommand(commandName), onFinished);\n        };\n        ClientDolphin.prototype.sendEmpty = function (onFinished) {\n            this.clientConnector.send(new opendolphin.EmptyNotification(), onFinished);\n        };\n        // factory method for attributes\n        ClientDolphin.prototype.attribute = function (propertyName, qualifier, value, tag) {\n            return new opendolphin.ClientAttribute(propertyName, qualifier, value, tag);\n        };\n        // factory method for presentation models\n        ClientDolphin.prototype.presentationModel = function (id, type) {\n            var attributes = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                attributes[_i - 2] = arguments[_i];\n            }\n            var model = new opendolphin.ClientPresentationModel(id, type);\n            if (attributes && attributes.length > 0) {\n                attributes.forEach(function (attribute) {\n                    model.addAttribute(attribute);\n                });\n            }\n            this.getClientModelStore().add(model);\n            return model;\n        };\n        ClientDolphin.prototype.setClientModelStore = function (clientModelStore) {\n            this.clientModelStore = clientModelStore;\n        };\n        ClientDolphin.prototype.getClientModelStore = function () {\n            return this.clientModelStore;\n        };\n        ClientDolphin.prototype.listPresentationModelIds = function () {\n            return this.getClientModelStore().listPresentationModelIds();\n        };\n        ClientDolphin.prototype.listPresentationModels = function () {\n            return this.getClientModelStore().listPresentationModels();\n        };\n        ClientDolphin.prototype.findAllPresentationModelByType = function (presentationModelType) {\n            return this.getClientModelStore().findAllPresentationModelByType(presentationModelType);\n        };\n        ClientDolphin.prototype.getAt = function (id) {\n            return this.findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.findPresentationModelById = function (id) {\n            return this.getClientModelStore().findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.deletePresentationModel = function (modelToDelete) {\n            this.getClientModelStore().deletePresentationModel(modelToDelete, true);\n        };\n        ClientDolphin.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            this.getClientModelStore().deleteAllPresentationModelOfType(presentationModelType);\n        };\n        ClientDolphin.prototype.updatePresentationModelQualifier = function (presentationModel) {\n            var _this = this;\n            presentationModel.getAttributes().forEach(function (sourceAttribute) {\n                _this.updateAttributeQualifier(sourceAttribute);\n            });\n        };\n        ClientDolphin.prototype.updateAttributeQualifier = function (sourceAttribute) {\n            if (!sourceAttribute.getQualifier())\n                return;\n            var attributes = this.getClientModelStore().findAllAttributesByQualifier(sourceAttribute.getQualifier());\n            attributes.forEach(function (targetAttribute) {\n                if (targetAttribute.tag != sourceAttribute.tag)\n                    return; // attributes with same qualifier and tag\n                targetAttribute.setValue(sourceAttribute.getValue()); // should always have the same value\n                targetAttribute.setBaseValue(sourceAttribute.getBaseValue()); // and same base value and so dirtyness\n            });\n        };\n        ClientDolphin.prototype.tag = function (presentationModel, propertyName, value, tag) {\n            var clientAttribute = new opendolphin.ClientAttribute(propertyName, null, value, tag);\n            this.addAttributeToModel(presentationModel, clientAttribute);\n            return clientAttribute;\n        };\n        ClientDolphin.prototype.addAttributeToModel = function (presentationModel, clientAttribute) {\n            presentationModel.addAttribute(clientAttribute);\n            this.getClientModelStore().registerAttribute(clientAttribute);\n            if (!presentationModel.clientSideOnly) {\n                this.clientConnector.send(new opendolphin.AttributeCreatedNotification(presentationModel.id, clientAttribute.id, clientAttribute.propertyName, clientAttribute.getValue(), clientAttribute.getQualifier(), clientAttribute.tag), null);\n            }\n        };\n        ////// push support ///////\n        ClientDolphin.prototype.startPushListening = function (pushActionName, releaseActionName) {\n            this.clientConnector.setPushListener(new opendolphin.NamedCommand(pushActionName));\n            this.clientConnector.setReleaseCommand(new opendolphin.SignalCommand(releaseActionName));\n            this.clientConnector.setPushEnabled(true);\n            this.clientConnector.listen();\n        };\n        ClientDolphin.prototype.stopPushListening = function () {\n            this.clientConnector.setPushEnabled(false);\n        };\n        return ClientDolphin;\n    })();\n    opendolphin.ClientDolphin = ClientDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var PresentationModelResetedCommand = (function (_super) {\n        __extends(PresentationModelResetedCommand, _super);\n        function PresentationModelResetedCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'PresentationModelReseted';\n            this.className = \"org.opendolphin.core.comm.PresentationModelResetedCommand\";\n        }\n        return PresentationModelResetedCommand;\n    })(opendolphin.Command);\n    opendolphin.PresentationModelResetedCommand = PresentationModelResetedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SavedPresentationModelNotification = (function (_super) {\n        __extends(SavedPresentationModelNotification, _super);\n        function SavedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'SavedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SavedPresentationModelNotification\";\n        }\n        return SavedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.SavedPresentationModelNotification = SavedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var InitializeAttributeCommand = (function (_super) {\n        __extends(InitializeAttributeCommand, _super);\n        function InitializeAttributeCommand(pmId, pmType, propertyName, qualifier, newValue, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.pmType = pmType;\n            this.propertyName = propertyName;\n            this.qualifier = qualifier;\n            this.newValue = newValue;\n            this.tag = tag;\n            this.id = 'InitializeAttribute';\n            this.className = \"org.opendolphin.core.comm.InitializeAttributeCommand\";\n        }\n        return InitializeAttributeCommand;\n    })(opendolphin.Command);\n    opendolphin.InitializeAttributeCommand = InitializeAttributeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SwitchPresentationModelCommand = (function (_super) {\n        __extends(SwitchPresentationModelCommand, _super);\n        function SwitchPresentationModelCommand(pmId, sourcePmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.sourcePmId = sourcePmId;\n            this.id = 'SwitchPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SwitchPresentationModelCommand\";\n        }\n        return SwitchPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.SwitchPresentationModelCommand = SwitchPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeleteAllPresentationModelsOfTypeCommand = (function (_super) {\n        __extends(DeleteAllPresentationModelsOfTypeCommand, _super);\n        function DeleteAllPresentationModelsOfTypeCommand(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeleteAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeleteAllPresentationModelsOfTypeCommand\";\n        }\n        return DeleteAllPresentationModelsOfTypeCommand;\n    })(opendolphin.Command);\n    opendolphin.DeleteAllPresentationModelsOfTypeCommand = DeleteAllPresentationModelsOfTypeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletePresentationModelCommand = (function (_super) {\n        __extends(DeletePresentationModelCommand, _super);\n        function DeletePresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletePresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletePresentationModelCommand\";\n        }\n        return DeletePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.DeletePresentationModelCommand = DeletePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DataCommand = (function (_super) {\n        __extends(DataCommand, _super);\n        function DataCommand(data) {\n            _super.call(this);\n            this.data = data;\n            this.id = \"Data\";\n            this.className = \"org.opendolphin.core.comm.DataCommand\";\n        }\n        return DataCommand;\n    })(opendolphin.Command);\n    opendolphin.DataCommand = DataCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"CommandBatcher.ts\" />\n/// <reference path=\"Codec.ts\" />\n/// <reference path=\"CallNamedActionCommand.ts\" />\n/// <reference path=\"ClientDolphin.ts\" />\n/// <reference path=\"AttributeMetadataChangedCommand.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"PresentationModelResetedCommand.ts\" />\n/// <reference path=\"SavedPresentationModelNotification.ts\" />\n/// <reference path=\"InitializeAttributeCommand.ts\" />\n/// <reference path=\"SwitchPresentationModelCommand.ts\" />\n/// <reference path=\"BaseValueChangedCommand.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeletePresentationModelCommand.ts\" />\n/// <reference path=\"CreatePresentationModelCommand.ts\" />\n/// <reference path=\"DataCommand.ts\" />\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientConnector = (function () {\n        function ClientConnector(transmitter, clientDolphin, slackMS, maxBatchSize) {\n            if (slackMS === void 0) { slackMS = 0; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.commandQueue = [];\n            this.currentlySending = false;\n            this.pushEnabled = false;\n            this.waiting = false;\n            this.transmitter = transmitter;\n            this.clientDolphin = clientDolphin;\n            this.slackMS = slackMS;\n            this.codec = new opendolphin.Codec();\n            this.commandBatcher = new opendolphin.BlindCommandBatcher(true, maxBatchSize);\n        }\n        ClientConnector.prototype.setCommandBatcher = function (newBatcher) {\n            this.commandBatcher = newBatcher;\n        };\n        ClientConnector.prototype.setPushEnabled = function (enabled) {\n            this.pushEnabled = enabled;\n        };\n        ClientConnector.prototype.setPushListener = function (newListener) {\n            this.pushListener = newListener;\n        };\n        ClientConnector.prototype.setReleaseCommand = function (newCommand) {\n            this.releaseCommand = newCommand;\n        };\n        ClientConnector.prototype.send = function (command, onFinished) {\n            this.commandQueue.push({ command: command, handler: onFinished });\n            if (this.currentlySending) {\n                this.release(); // there is not point in releasing if we do not send atm\n                return;\n            }\n            this.doSendNext();\n        };\n        ClientConnector.prototype.doSendNext = function () {\n            var _this = this;\n            if (this.commandQueue.length < 1) {\n                if (this.pushEnabled) {\n                    this.enqueuePushCommand();\n                }\n                else {\n                    this.currentlySending = false;\n                    return;\n                }\n            }\n            this.currentlySending = true;\n            var cmdsAndHandlers = this.commandBatcher.batch(this.commandQueue);\n            var callback = cmdsAndHandlers[cmdsAndHandlers.length - 1].handler;\n            var commands = cmdsAndHandlers.map(function (cah) { return cah.command; });\n            this.transmitter.transmit(commands, function (response) {\n                //console.log(\"server response: [\" + response.map(it => it.id).join(\", \") + \"] \");\n                var touchedPMs = [];\n                response.forEach(function (command) {\n                    var touched = _this.handle(command);\n                    if (touched)\n                        touchedPMs.push(touched);\n                });\n                if (callback) {\n                    callback.onFinished(touchedPMs); // todo: make them unique?\n                }\n                // recursive call: fetch the next in line but allow a bit of slack such that\n                // document events can fire, rendering is done and commands can batch up\n                setTimeout(function () { return _this.doSendNext(); }, _this.slackMS);\n            });\n        };\n        ClientConnector.prototype.handle = function (command) {\n            if (command.id == \"Data\") {\n                return this.handleDataCommand(command);\n            }\n            else if (command.id == \"DeletePresentationModel\") {\n                return this.handleDeletePresentationModelCommand(command);\n            }\n            else if (command.id == \"DeleteAllPresentationModelsOfType\") {\n                return this.handleDeleteAllPresentationModelOfTypeCommand(command);\n            }\n            else if (command.id == \"CreatePresentationModel\") {\n                return this.handleCreatePresentationModelCommand(command);\n            }\n            else if (command.id == \"ValueChanged\") {\n                return this.handleValueChangedCommand(command);\n            }\n            else if (command.id == \"BaseValueChanged\") {\n                return this.handleBaseValueChangedCommand(command);\n            }\n            else if (command.id == \"SwitchPresentationModel\") {\n                return this.handleSwitchPresentationModelCommand(command);\n            }\n            else if (command.id == \"InitializeAttribute\") {\n                return this.handleInitializeAttributeCommand(command);\n            }\n            else if (command.id == \"SavedPresentationModel\") {\n                return this.handleSavedPresentationModelNotification(command);\n            }\n            else if (command.id == \"PresentationModelReseted\") {\n                return this.handlePresentationModelResetedCommand(command);\n            }\n            else if (command.id == \"AttributeMetadataChanged\") {\n                return this.handleAttributeMetadataChangedCommand(command);\n            }\n            else if (command.id == \"CallNamedAction\") {\n                return this.handleCallNamedActionCommand(command);\n            }\n            else {\n                console.log(\"Cannot handle, unknown command \" + command);\n            }\n            return null;\n        };\n        ClientConnector.prototype.handleDataCommand = function (serverCommand) {\n            return serverCommand.data;\n        };\n        ClientConnector.prototype.handleDeletePresentationModelCommand = function (serverCommand) {\n            var model = this.clientDolphin.findPresentationModelById(serverCommand.pmId);\n            if (!model)\n                return null;\n            this.clientDolphin.getClientModelStore().deletePresentationModel(model, true);\n            return model;\n        };\n        ClientConnector.prototype.handleDeleteAllPresentationModelOfTypeCommand = function (serverCommand) {\n            this.clientDolphin.deleteAllPresentationModelOfType(serverCommand.pmType);\n            return null;\n        };\n        ClientConnector.prototype.handleCreatePresentationModelCommand = function (serverCommand) {\n            var _this = this;\n            if (this.clientDolphin.getClientModelStore().containsPresentationModel(serverCommand.pmId)) {\n                throw new Error(\"There already is a presentation model with id \" + serverCommand.pmId + \"  known to the client.\");\n            }\n            var attributes = [];\n            serverCommand.attributes.forEach(function (attr) {\n                var clientAttribute = _this.clientDolphin.attribute(attr.propertyName, attr.qualifier, attr.value, attr.tag ? attr.tag : opendolphin.Tag.value());\n                clientAttribute.setBaseValue(attr.baseValue);\n                if (attr.id && attr.id.match(\".*S$\")) {\n                    clientAttribute.id = attr.id;\n                }\n                attributes.push(clientAttribute);\n            });\n            var clientPm = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n            clientPm.addAttributes(attributes);\n            if (serverCommand.clientSideOnly) {\n                clientPm.clientSideOnly = true;\n            }\n            this.clientDolphin.getClientModelStore().add(clientPm);\n            this.clientDolphin.updatePresentationModelQualifier(clientPm);\n            clientPm.updateAttributeDirtyness();\n            clientPm.updateDirty();\n            return clientPm;\n        };\n        ClientConnector.prototype.handleValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot update old value \" + serverCommand.oldValue + \" to new value \" + serverCommand.newValue);\n                return null;\n            }\n            if (clientAttribute.getValue() == serverCommand.newValue) {\n                //console.log(\"nothing to do. new value == old value\");\n                return null;\n            }\n            // Below was the code that would enforce that value changes only appear when the proper oldValue is given.\n            // While that seemed appropriate at first, there are actually valid command sequences where the oldValue is not properly set.\n            // We leave the commented code in the codebase to allow for logging/debugging such cases.\n            //            if(clientAttribute.getValue() != serverCommand.oldValue) {\n            //                console.log(\"attribute with id \"+serverCommand.attributeId+\" and value \" + clientAttribute.getValue() +\n            //                            \" was set to value \" + serverCommand.newValue + \" even though the change was based on an outdated old value of \" + serverCommand.oldValue);\n            //            }\n            clientAttribute.setValue(serverCommand.newValue);\n            return null;\n        };\n        ClientConnector.prototype.handleBaseValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot set base value.\");\n                return null;\n            }\n            clientAttribute.rebase();\n            return null;\n        };\n        ClientConnector.prototype.handleSwitchPresentationModelCommand = function (serverCommand) {\n            var switchPm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!switchPm) {\n                console.log(\"switch model with id \" + serverCommand.pmId + \" not found, cannot switch.\");\n                return null;\n            }\n            var sourcePm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.sourcePmId);\n            if (!sourcePm) {\n                console.log(\"source model with id \" + serverCommand.sourcePmId + \" not found, cannot switch.\");\n                return null;\n            }\n            switchPm.syncWith(sourcePm);\n            return switchPm;\n        };\n        ClientConnector.prototype.handleInitializeAttributeCommand = function (serverCommand) {\n            var attribute = new opendolphin.ClientAttribute(serverCommand.propertyName, serverCommand.qualifier, serverCommand.newValue, serverCommand.tag);\n            if (serverCommand.qualifier) {\n                var attributesCopy = this.clientDolphin.getClientModelStore().findAllAttributesByQualifier(serverCommand.qualifier);\n                if (attributesCopy) {\n                    if (!serverCommand.newValue) {\n                        var attr = attributesCopy.shift();\n                        if (attr) {\n                            attribute.setValue(attr.getValue());\n                        }\n                    }\n                    else {\n                        attributesCopy.forEach(function (attr) {\n                            attr.setValue(attribute.getValue());\n                        });\n                    }\n                }\n            }\n            var presentationModel;\n            if (serverCommand.pmId) {\n                presentationModel = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            }\n            if (!presentationModel) {\n                presentationModel = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n                this.clientDolphin.getClientModelStore().add(presentationModel);\n            }\n            this.clientDolphin.addAttributeToModel(presentationModel, attribute);\n            this.clientDolphin.updatePresentationModelQualifier(presentationModel);\n            return presentationModel;\n        };\n        ClientConnector.prototype.handleSavedPresentationModelNotification = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot rebase.\");\n                return null;\n            }\n            model.rebase();\n            return model;\n        };\n        ClientConnector.prototype.handlePresentationModelResetedCommand = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot reset.\");\n                return null;\n            }\n            model.reset();\n            return model;\n        };\n        ClientConnector.prototype.handleAttributeMetadataChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute)\n                return null;\n            clientAttribute[serverCommand.metadataName] = serverCommand.value;\n            return null;\n        };\n        ClientConnector.prototype.handleCallNamedActionCommand = function (serverCommand) {\n            this.clientDolphin.send(serverCommand.actionName, null);\n            return null;\n        };\n        ///////////// push support ///////////////\n        ClientConnector.prototype.listen = function () {\n            if (!this.pushEnabled)\n                return;\n            if (this.waiting)\n                return;\n            // todo: how to issue a warning if no pushListener is set?\n            if (!this.currentlySending) {\n                this.doSendNext();\n            }\n        };\n        ClientConnector.prototype.enqueuePushCommand = function () {\n            var me = this;\n            this.waiting = true;\n            this.commandQueue.push({\n                command: this.pushListener,\n                handler: {\n                    onFinished: function (models) { me.waiting = false; },\n                    onFinishedData: null\n                }\n            });\n        };\n        ClientConnector.prototype.release = function () {\n            if (!this.waiting)\n                return;\n            this.waiting = false;\n            // todo: how to issue a warning if no releaseCommand is set?\n            this.transmitter.signal(this.releaseCommand);\n        };\n        return ClientConnector;\n    })();\n    opendolphin.ClientConnector = ClientConnector;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"DolphinBuilder.ts\"/>\n/**\n * JS-friendly facade to avoid too many dependencies in plain JS code.\n * The name of this file is also used for the initial lookup of the\n * one javascript file that contains all the dolphin code.\n * Changing the name requires the build support and all users\n * to be updated as well.\n * Dierk Koenig\n */\nvar opendolphin;\n(function (opendolphin) {\n    // factory method for the initialized dolphin\n    // Deprecated ! Use 'makeDolphin() instead\n    function dolphin(url, reset, slackMS) {\n        if (slackMS === void 0) { slackMS = 300; }\n        return makeDolphin().url(url).reset(reset).slackMS(slackMS).build();\n    }\n    opendolphin.dolphin = dolphin;\n    // factory method to build an initialized dolphin\n    function makeDolphin() {\n        return new opendolphin.DolphinBuilder();\n    }\n    opendolphin.makeDolphin = makeDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /**\n     * A transmitter that is not transmitting at all.\n     * It may serve as a stand-in when no real transmitter is needed.\n     */\n    var NoTransmitter = (function () {\n        function NoTransmitter() {\n        }\n        NoTransmitter.prototype.transmit = function (commands, onDone) {\n            // do nothing special\n            onDone([]);\n        };\n        NoTransmitter.prototype.signal = function (command) {\n            // do nothing\n        };\n        return NoTransmitter;\n    })();\n    opendolphin.NoTransmitter = NoTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"Codec.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var HttpTransmitter = (function () {\n        function HttpTransmitter(url, reset, charset, errorHandler, supportCORS) {\n            if (reset === void 0) { reset = true; }\n            if (charset === void 0) { charset = \"UTF-8\"; }\n            if (errorHandler === void 0) { errorHandler = null; }\n            if (supportCORS === void 0) { supportCORS = false; }\n            this.url = url;\n            this.charset = charset;\n            this.HttpCodes = {\n                finished: 4,\n                success: 200\n            };\n            this.errorHandler = errorHandler;\n            this.supportCORS = supportCORS;\n            this.http = new XMLHttpRequest();\n            this.sig = new XMLHttpRequest();\n            if (this.supportCORS) {\n                if (\"withCredentials\" in this.http) {\n                    this.http.withCredentials = true; // NOTE: doing this for non CORS requests has no impact\n                    this.sig.withCredentials = true;\n                }\n            }\n            this.codec = new opendolphin.Codec();\n            if (reset) {\n                this.invalidate();\n            }\n        }\n        HttpTransmitter.prototype.transmit = function (commands, onDone) {\n            var _this = this;\n            this.http.onerror = function (evt) {\n                _this.handleError('onerror', \"\");\n                onDone([]);\n            };\n            this.http.onreadystatechange = function (evt) {\n                if (_this.http.readyState == _this.HttpCodes.finished) {\n                    if (_this.http.status == _this.HttpCodes.success) {\n                        var responseText = _this.http.responseText;\n                        if (responseText.trim().length > 0) {\n                            try {\n                                var responseCommands = _this.codec.decode(responseText);\n                                onDone(responseCommands);\n                            }\n                            catch (err) {\n                                console.log(\"Error occurred parsing responseText: \", err);\n                                console.log(\"Incorrect responseText: \", responseText);\n                                _this.handleError('application', \"HttpTransmitter: Incorrect responseText: \" + responseText);\n                                onDone([]);\n                            }\n                        }\n                        else {\n                            _this.handleError('application', \"HttpTransmitter: empty responseText\");\n                            onDone([]);\n                        }\n                    }\n                    else {\n                        _this.handleError('application', \"HttpTransmitter: HTTP Status != 200\");\n                        onDone([]);\n                    }\n                }\n            };\n            this.http.open('POST', this.url, true);\n            if (\"overrideMimeType\" in this.http) {\n                this.http.overrideMimeType(\"application/json; charset=\" + this.charset); // todo make injectable\n            }\n            this.http.send(this.codec.encode(commands));\n        };\n        HttpTransmitter.prototype.handleError = function (kind, message) {\n            var errorEvent = { kind: kind, url: this.url, httpStatus: this.http.status, message: message };\n            if (this.errorHandler) {\n                this.errorHandler(errorEvent);\n            }\n            else {\n                console.log(\"Error occurred: \", errorEvent);\n            }\n        };\n        HttpTransmitter.prototype.signal = function (command) {\n            this.sig.open('POST', this.url, true);\n            this.sig.send(this.codec.encode([command]));\n        };\n        HttpTransmitter.prototype.invalidate = function () {\n            this.http.open('POST', this.url + 'invalidate?', false);\n            this.http.send();\n        };\n        return HttpTransmitter;\n    })();\n    opendolphin.HttpTransmitter = HttpTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"OpenDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ClientModelStore.ts\"/>\n/// <reference path=\"NoTransmitter.ts\"/>\n/// <reference path=\"HttpTransmitter.ts\"/>\n/// <reference path=\"ClientAttribute.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var DolphinBuilder = (function () {\n        function DolphinBuilder() {\n            this.reset_ = false;\n            this.slackMS_ = 300;\n            this.maxBatchSize_ = 50;\n            this.supportCORS_ = false;\n        }\n        DolphinBuilder.prototype.url = function (url) {\n            this.url_ = url;\n            return this;\n        };\n        DolphinBuilder.prototype.reset = function (reset) {\n            this.reset_ = reset;\n            return this;\n        };\n        DolphinBuilder.prototype.slackMS = function (slackMS) {\n            this.slackMS_ = slackMS;\n            return this;\n        };\n        DolphinBuilder.prototype.maxBatchSize = function (maxBatchSize) {\n            this.maxBatchSize_ = maxBatchSize;\n            return this;\n        };\n        DolphinBuilder.prototype.supportCORS = function (supportCORS) {\n            this.supportCORS_ = supportCORS;\n            return this;\n        };\n        DolphinBuilder.prototype.errorHandler = function (errorHandler) {\n            this.errorHandler_ = errorHandler;\n            return this;\n        };\n        DolphinBuilder.prototype.build = function () {\n            console.log(\"OpenDolphin js found\");\n            var clientDolphin = new opendolphin.ClientDolphin();\n            var transmitter;\n            if (this.url_ != null && this.url_.length > 0) {\n                transmitter = new opendolphin.HttpTransmitter(this.url_, this.reset_, \"UTF-8\", this.errorHandler_, this.supportCORS_);\n            }\n            else {\n                transmitter = new opendolphin.NoTransmitter();\n            }\n            clientDolphin.setClientConnector(new opendolphin.ClientConnector(transmitter, clientDolphin, this.slackMS_, this.maxBatchSize_));\n            clientDolphin.setClientModelStore(new opendolphin.ClientModelStore(clientDolphin));\n            console.log(\"ClientDolphin initialized\");\n            return clientDolphin;\n        };\n        return DolphinBuilder;\n    })();\n    opendolphin.DolphinBuilder = DolphinBuilder;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var GetPresentationModelCommand = (function (_super) {\n        __extends(GetPresentationModelCommand, _super);\n        function GetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'GetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.GetPresentationModelCommand\";\n        }\n        return GetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.GetPresentationModelCommand = GetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ResetPresentationModelCommand = (function (_super) {\n        __extends(ResetPresentationModelCommand, _super);\n        function ResetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'ResetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.ResetPresentationModelCommand\";\n        }\n        return ResetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.ResetPresentationModelCommand = ResetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n\nmodule.exports = opendolphin;\n},{}],66:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Map = _dereq_('../bower_components/core.js/library/fn/map');\nvar utils = _dereq_('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\nfunction BeanManager(classRepository) {\n    checkMethod('BeanManager(classRepository)');\n    checkParam(classRepository, 'classRepository');\n\n    this.classRepository = classRepository;\n    this.addedHandlers = new Map();\n    this.removedHandlers = new Map();\n    this.updatedHandlers = new Map();\n    this.arrayUpdatedHandlers = new Map();\n    this.allAddedHandlers = [];\n    this.allRemovedHandlers = [];\n    this.allUpdatedHandlers = [];\n    this.allArrayUpdatedHandlers = [];\n\n    var self = this;\n    this.classRepository.onBeanAdded(function(type, bean) {\n        var handlerList = self.addedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanAdded-handler for type', type, e);\n                }\n            });\n        }\n        self.allAddedHandlers.forEach(function (handler) {\n            try {\n                handler(bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanAdded-handler', e);\n            }\n        });\n    });\n    this.classRepository.onBeanRemoved(function(type, bean) {\n        var handlerList = self.removedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function(handler) {\n                try {\n                    handler(bean);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanRemoved-handler for type', type, e);\n                }\n            });\n        }\n        self.allRemovedHandlers.forEach(function(handler) {\n            try {\n                handler(bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanRemoved-handler', e);\n            }\n        });\n    });\n    this.classRepository.onBeanUpdate(function(type, bean, propertyName, newValue, oldValue) {\n        var handlerList = self.updatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean, propertyName, newValue, oldValue);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanUpdate-handler for type', type, e);\n                }\n            });\n        }\n        self.allUpdatedHandlers.forEach(function (handler) {\n            try {\n                handler(bean, propertyName, newValue, oldValue);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanUpdate-handler', e);\n            }\n        });\n    });\n    this.classRepository.onArrayUpdate(function(type, bean, propertyName, index, count, newElement) {\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean, propertyName, index, count, newElement);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onArrayUpdate-handler for type', type, e);\n                }\n            });\n        }\n        self.allArrayUpdatedHandlers.forEach(function (handler) {\n            try {\n                handler(bean, propertyName, index, count, newElement);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onArrayUpdate-handler', e);\n            }\n        });\n    });\n\n}\n\n\nBeanManager.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    checkMethod('BeanManager.notifyBeanChange(bean, propertyName, newValue)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n\n    return this.classRepository.notifyBeanChange(bean, propertyName, newValue);\n};\n\n\nBeanManager.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    checkMethod('BeanManager.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n    checkParam(index, 'index');\n    checkParam(count, 'count');\n    checkParam(removedElements, 'removedElements');\n\n    this.classRepository.notifyArrayChange(bean, propertyName, index, count, removedElements);\n};\n\n\nBeanManager.prototype.isManaged = function(bean) {\n    checkMethod('BeanManager.isManaged(bean)');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.isManaged() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.create = function(type) {\n    checkMethod('BeanManager.create(type)');\n    checkParam(type, 'type');\n\n    // TODO: Implement dolphin.create() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.add = function(type, bean) {\n    checkMethod('BeanManager.add(type, bean)');\n    checkParam(type, 'type');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.add() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.addAll = function(type, collection) {\n    checkMethod('BeanManager.addAll(type, collection)');\n    checkParam(type, 'type');\n    checkParam(collection, 'collection');\n\n    // TODO: Implement dolphin.addAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.remove = function(bean) {\n    checkMethod('BeanManager.remove(bean)');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.remove() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeAll = function(collection) {\n    checkMethod('BeanManager.removeAll(collection)');\n    checkParam(collection, 'collection');\n\n    // TODO: Implement dolphin.removeAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeIf = function(predicate) {\n    checkMethod('BeanManager.removeIf(predicate)');\n    checkParam(predicate, 'predicate');\n\n    // TODO: Implement dolphin.removeIf() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.onAdded = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onAdded(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allAddedHandlers = self.allAddedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allAddedHandlers = self.allAddedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onAdded(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.addedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.addedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.addedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.addedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onRemoved = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onRemoved(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allRemovedHandlers = self.allRemovedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allRemovedHandlers = self.allRemovedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onRemoved(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.removedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.removedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.removedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onBeanUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onBeanUpdate(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allUpdatedHandlers = self.allUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allUpdatedHandlers = self.allUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onBeanUpdate(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.updatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.updatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.updatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.updatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onArrayUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onArrayUpdate(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onArrayUpdate(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.arrayUpdatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.arrayUpdatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.arrayUpdatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\n\nexports.BeanManager = BeanManager;\n},{\"../bower_components/core.js/library/fn/map\":1,\"./polyfills.js\":73,\"./utils.js\":74}],67:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Platform, console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Map = _dereq_('../bower_components/core.js/library/fn/map');\nvar opendolphin = _dereq_('../libsrc/opendolphin.js');\n\nvar utils = _dereq_('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nvar blocked = null;\n\nfunction fromDolphin(classRepository, type, value) {\n    return ! exists(value)? null\n        : type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, value) {\n    return typeof value === 'object' && value !== null? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction sendListAdd(dolphin, modelId, propertyName, pos, element) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('pos', null, pos),\n        dolphin.attribute('element', null, element)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_ADD @@@'].concat(attributes));\n}\n\nfunction sendListRemove(dolphin, modelId, propertyName, from, to) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('from', null, from),\n        dolphin.attribute('to', null, to)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_DEL @@@'].concat(attributes));\n}\n\nfunction validateList(classRepository, type, bean, propertyName) {\n    var list = bean[propertyName];\n    if (!exists(list)) {\n        classRepository.propertyUpdateHandlers.forEach(function(handler) {\n            try {\n                handler(type, bean, propertyName, [], undefined);\n            } catch(e) {\n                console.warn('An exception occurred while calling an onBeanUpdate-handler', e);\n            }\n        });\n    }\n}\n\nfunction block(bean, propertyName) {\n    if (exists(blocked)) {\n        throw new Error('Trying to create a block while another block exists');\n    }\n    blocked = {\n        bean: bean,\n        propertyName: propertyName\n    };\n}\n\nfunction isBlocked(bean, propertyName) {\n    return exists(blocked) && blocked.bean === bean && blocked.propertyName === propertyName;\n}\n\nfunction unblock() {\n    blocked = null;\n}\n\n\nfunction ClassRepository(dolphin) {\n    checkMethod('ClassRepository(dolphin)');\n    checkParam(dolphin, 'dolphin');\n\n    this.dolphin = dolphin;\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n    this.beanAddedHandlers = [];\n    this.beanRemovedHandlers = [];\n    this.propertyUpdateHandlers = [];\n    this.arrayUpdateHandlers = [];\n}\n\n\nClassRepository.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    checkMethod('ClassRepository.notifyBeanChange(bean, propertyName, newValue)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n\n    var modelId = this.beanToDolphin.get(bean);\n    if (exists(modelId)) {\n        var model = this.dolphin.findPresentationModelById(modelId);\n        if (exists(model)) {\n            var classInfo = this.classes.get(model.presentationModelType);\n            var type = classInfo[propertyName];\n            var attribute = model.findAttributeByPropertyName(propertyName);\n            if (exists(type) && exists(attribute)) {\n                var oldValue = attribute.getValue();\n                attribute.setValue(toDolphin(this, newValue));\n                return fromDolphin(this, type, oldValue);\n            }\n        }\n    }\n};\n\n\nClassRepository.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    checkMethod('ClassRepository.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n    checkParam(index, 'index');\n    checkParam(count, 'count');\n    checkParam(removedElements, 'removedElements');\n\n    if (isBlocked(bean, propertyName)) {\n        return;\n    }\n    var modelId = this.beanToDolphin.get(bean);\n    var array = bean[propertyName];\n    if (exists(modelId) && exists(array)) {\n        if (Array.isArray(removedElements) && removedElements.length > 0) {\n            sendListRemove(this.dolphin, modelId, propertyName, index, index + removedElements.length);\n        }\n        for (var i = index; i < index + count; i++) {\n            sendListAdd(this.dolphin, modelId, propertyName, i, toDolphin(this, array[i]));\n        }\n    }\n};\n\n\nClassRepository.prototype.onBeanAdded = function(handler) {\n    checkMethod('ClassRepository.onBeanAdded(handler)');\n    checkParam(handler, 'handler');\n    this.beanAddedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanRemoved = function(handler) {\n    checkMethod('ClassRepository.onBeanRemoved(handler)');\n    checkParam(handler, 'handler');\n    this.beanRemovedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanUpdate = function(handler) {\n    checkMethod('ClassRepository.onBeanUpdate(handler)');\n    checkParam(handler, 'handler');\n    this.propertyUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onArrayUpdate = function(handler) {\n    checkMethod('ClassRepository.onArrayUpdate(handler)');\n    checkParam(handler, 'handler');\n    this.arrayUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.registerClass = function (model) {\n    checkMethod('ClassRepository.registerClass(model)');\n    checkParam(model, 'model');\n\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.filter(function(attribute) {\n        return attribute.propertyName.search(/^@@@ /) < 0;\n    }).forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    checkMethod('ClassRepository.unregisterClass(model)');\n    checkParam(model, 'model');\n\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    checkMethod('ClassRepository.load(model)');\n    checkParam(model, 'model');\n\n    var self = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return (attribute.tag === opendolphin.Tag.value()) && (attribute.propertyName.search(/^@@@ /) < 0);\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                var oldValue = fromDolphin(self, classInfo[attribute.propertyName], event.oldValue);\n                var newValue = fromDolphin(self, classInfo[attribute.propertyName], event.newValue);\n                self.propertyUpdateHandlers.forEach(function(handler) {\n                    try {\n                        handler(model.presentationModelType, bean, attribute.propertyName, newValue, oldValue);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onBeanUpdate-handler', e);\n                    }\n                });\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    this.beanAddedHandlers.forEach(function(handler) {\n        try {\n            handler(model.presentationModelType, bean);\n        } catch(e) {\n            console.warn('An exception occurred while calling an onBeanAdded-handler', e);\n        }\n    });\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    checkMethod('ClassRepository.unload(model)');\n    checkParam(model, 'model');\n\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    if (exists(bean)) {\n        this.beanRemovedHandlers.forEach(function(handler) {\n            try {\n                handler(model.presentationModelType, bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling an onBeanRemoved-handler', e);\n            }\n        });\n    }\n    return bean;\n};\n\n\nClassRepository.prototype.addListEntry = function(model) {\n    checkMethod('ClassRepository.addListEntry(model)');\n    checkParam(model, 'model');\n\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    try {\n                        handler(type, bean, attribute.value, pos.value, 0, entry);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onArrayUpdate-handler', e);\n                    }\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.delListEntry = function(model) {\n    checkMethod('ClassRepository.delListEntry(model)');\n    checkParam(model, 'model');\n\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to)) {\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean)) {\n            var type = model.presentationModelType;\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    try {\n                        handler(type, bean, attribute.value, from.value, to.value - from.value);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onArrayUpdate-handler', e);\n                    }\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.setListEntry = function(model) {\n    checkMethod('ClassRepository.setListEntry(model)');\n    checkParam(model, 'model');\n\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    try {\n                        handler(type, bean, attribute.value, pos.value, 1, entry);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onArrayUpdate-handler', e);\n                    }\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    }else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\nClassRepository.prototype.mapDolphinToBean = function(value, type) {\n    return fromDolphin(this, type, value);\n};\n\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n\n},{\"../bower_components/core.js/library/fn/map\":1,\"../libsrc/opendolphin.js\":65,\"./polyfills.js\":73,\"./utils.js\":74}],68:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar utils = _dereq_('./utils.js');\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar INIT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'initClientContext';\nvar DISCONNECT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'disconnectClientContext';\n\nfunction ClientContext(dolphin, beanManager, controllerManager, connector) {\n    checkMethod('ClientContext(dolphin, beanManager, controllerManager, connector)');\n    checkParam(dolphin, 'dolphin');\n    checkParam(beanManager, 'beanManager');\n    checkParam(controllerManager, 'controllerManager');\n    checkParam(connector, 'connector');\n\n    this.dolphin = dolphin;\n    this.beanManager = beanManager;\n    this._controllerManager = controllerManager;\n    this._connector = connector;\n\n    this._connector.invoke(INIT_COMMAND_NAME);\n}\n\n\nClientContext.prototype.createController = function(name) {\n    checkMethod('ClientContext.createController(name)');\n    checkParam(name, 'name');\n\n    return this._controllerManager.createController(name);\n};\n\n\nClientContext.prototype.disconnect = function() {\n    // TODO: Implement ClientContext.disconnect [DP-46]\n    var self = this;\n    this.dolphin.stopPushListening();\n    this._controllerManager.destroy().then(function() {\n        self._connector.invoke(DISCONNECT_COMMAND_NAME);\n        self.dolphin = null;\n        self.beanManager = null;\n        self._controllerManager = null;\n        self._connector = null;\n    });\n};\n\n\nexports.ClientContext = ClientContext;\n},{\"./polyfills.js\":73,\"./utils.js\":74}],69:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Promise = _dereq_('../bower_components/core.js/library/fn/promise');\nvar opendolphin = _dereq_('../libsrc/opendolphin.js');\nvar utils = _dereq_('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar POLL_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'longPoll';\nvar RELEASE_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'release';\n\nvar DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nvar ACTION_CALL_BEAN = '@@@ CONTROLLER_ACTION_CALL_BEAN @@@';\nvar HIGHLANDER_BEAN = '@@@ HIGHLANDER_BEAN @@@';\nvar DOLPHIN_LIST_ADD = '@@@ LIST_ADD @@@';\nvar DOLPHIN_LIST_DEL = '@@@ LIST_DEL @@@';\nvar DOLPHIN_LIST_SET = '@@@ LIST_SET @@@';\nvar SOURCE_SYSTEM = '@@@ SOURCE_SYSTEM @@@';\nvar SOURCE_SYSTEM_CLIENT = 'client';\nvar SOURCE_SYSTEM_SERVER = 'server';\n\n\n\nvar initializer;\n\nfunction Connector(url, dolphin, classRepository, config) {\n    checkMethod('Connector(url, dolphin, classRepository, config)');\n    checkParam(url, 'url');\n    checkParam(dolphin, 'dolphin');\n    checkParam(classRepository, 'classRepository');\n\n    var self = this;\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.highlanderPMResolver = function() {};\n    this.highlanderPMPromise = new Promise(function(resolve) {\n        self.highlanderPMResolver = resolve;\n    });\n\n    dolphin.getClientModelStore().onModelStoreChange(function (event) {\n        var model = event.clientPresentationModel;\n        var sourceSystem = model.findAttributeByPropertyName(SOURCE_SYSTEM);\n        if (exists(sourceSystem) && sourceSystem.value === SOURCE_SYSTEM_SERVER) {\n            if (event.eventType === opendolphin.Type.ADDED) {\n                self.onModelAdded(model);\n            } else if (event.eventType === opendolphin.Type.REMOVED) {\n                self.onModelRemoved(model);\n            }\n        }\n    });\n\n    if (!exists(config) || !exists(config.serverPush) || config.serverPush === true) {\n        setTimeout(function() {\n            dolphin.startPushListening(POLL_COMMAND_NAME, RELEASE_COMMAND_NAME);\n        }, 500);\n    }\n\n    initializer = new Promise(function(resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.withCredentials = true;\n\n        req.onload = function() {\n            if (req.status === 200) {\n                resolve();\n            }\n            else {\n                reject(Error(req.statusText));\n            }\n        };\n\n        req.onerror = function() {\n            reject(Error(\"Network Error\"));\n        };\n\n        req.open('POST', url + 'invalidate?');\n        req.send();\n    });\n}\n\n\nConnector.prototype.onModelAdded = function(model) {\n    checkMethod('Connector.onModelAdded(model)');\n    checkParam(model, 'model');\n\n    var type = model.presentationModelType;\n    switch (type) {\n        case ACTION_CALL_BEAN:\n            // ignore\n            break;\n        case DOLPHIN_BEAN:\n            this.classRepository.registerClass(model);\n            break;\n        case HIGHLANDER_BEAN:\n            this.highlanderPMResolver(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n            this.classRepository.addListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_DEL:\n            this.classRepository.delListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_SET:\n            this.classRepository.setListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        default:\n            this.classRepository.load(model);\n            break;\n    }\n};\n\n\nConnector.prototype.onModelRemoved = function(model) {\n    checkMethod('Connector.onModelRemoved(model)');\n    checkParam(model, 'model');\n\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            this.classRepository.unregisterClass(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n        case DOLPHIN_LIST_DEL:\n        case DOLPHIN_LIST_SET:\n            // do nothing\n            break;\n        default:\n            this.classRepository.unload(model);\n            break;\n    }\n};\n\n\nConnector.prototype.invoke = function(command) {\n    checkMethod('Connector.invoke(command)');\n    checkParam(command, 'command');\n\n    var dolphin = this.dolphin;\n    return new Promise(function(resolve) {\n        //initializer.then(function () {\n            dolphin.send(command, {\n                onFinished: function() {\n                    resolve();\n                }\n            });\n        //});\n    });\n};\n\n\nConnector.prototype.getHighlanderPM = function() {\n    return this.highlanderPMPromise;\n};\n\n\n\nexports.Connector = Connector;\nexports.SOURCE_SYSTEM = SOURCE_SYSTEM;\nexports.SOURCE_SYSTEM_CLIENT = SOURCE_SYSTEM_CLIENT;\nexports.SOURCE_SYSTEM_SERVER = SOURCE_SYSTEM_SERVER;\nexports.ACTION_CALL_BEAN = ACTION_CALL_BEAN;\n\n},{\"../bower_components/core.js/library/fn/promise\":2,\"../libsrc/opendolphin.js\":65,\"./polyfills.js\":73,\"./utils.js\":74}],70:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Promise = _dereq_('../bower_components/core.js/library/fn/promise');\nvar Set = _dereq_('../bower_components/core.js/library/fn/set');\nvar utils = _dereq_('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar ControllerProxy = _dereq_('./controllerproxy.js').ControllerProxy;\n\nvar DOLPHIN_BEAN_TYPE = _dereq_('./classrepo.js').DOLPHIN_BEAN;\n\nvar SOURCE_SYSTEM = _dereq_('./connector.js').SOURCE_SYSTEM;\nvar SOURCE_SYSTEM_CLIENT = _dereq_('./connector.js').SOURCE_SYSTEM_CLIENT;\nvar ACTION_CALL_BEAN = _dereq_('./connector.js').ACTION_CALL_BEAN;\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar REGISTER_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'registerController';\nvar CALL_CONTROLLER_ACTION_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'callControllerAction';\nvar DESTROY_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'destroyController';\n\nvar CONTROLLER_NAME = 'controllerName';\nvar CONTROLLER_ID = 'controllerId';\nvar MODEL = 'model';\nvar ACTION_NAME = 'actionName';\nvar ERROR_CODE = 'errorCode';\nvar PARAM_PREFIX = '_';\n\n\nfunction ControllerManager(dolphin, classRepository, connector) {\n    checkMethod('ControllerManager(dolphin, classRepository, connector)');\n    checkParam(dolphin, 'dolphin');\n    checkParam(classRepository, 'classRepository');\n    checkParam(connector, 'connector');\n\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.connector = connector;\n    this.controllers = new Set();\n}\n\n\nControllerManager.prototype.createController = function(name) {\n    checkMethod('ControllerManager.createController(name)');\n    checkParam(name, 'name');\n\n    var self = this;\n    var controllerId, modelId, model, controller;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_NAME).setValue(name);\n            self.connector.invoke(REGISTER_CONTROLLER_COMMAND_NAME).then(function() {\n                controllerId = highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).getValue();\n                modelId = highlanderPM.findAttributeByPropertyName(MODEL).getValue();\n                model = self.classRepository.mapDolphinToBean(modelId, DOLPHIN_BEAN_TYPE);\n                controller = new ControllerProxy(controllerId, model, self);\n                self.controllers.add(controller);\n                resolve(controller);\n            });\n        });\n    });\n};\n\n\nControllerManager.prototype.invokeAction = function(controllerId, actionName, params) {\n    checkMethod('ControllerManager.invokeAction(controllerId, actionName, params)');\n    checkParam(controllerId, 'controllerId');\n    checkParam(actionName, 'actionName');\n\n    var self = this;\n    return new Promise(function(resolve, reject) {\n\n        var attributes = [\n            self.dolphin.attribute(SOURCE_SYSTEM, null, SOURCE_SYSTEM_CLIENT),\n            self.dolphin.attribute(CONTROLLER_ID, null, controllerId),\n            self.dolphin.attribute(ACTION_NAME, null, actionName),\n            self.dolphin.attribute(ERROR_CODE)\n        ];\n\n        if (exists(params)) {\n            for (var prop in params) {\n                if (params.hasOwnProperty(prop)) {\n                    var param = self.classRepository.mapParamToDolphin(params[prop]);\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.value, 'VALUE'));\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.type, 'VALUE_TYPE'));\n                }\n            }\n        }\n\n        var pm = self.dolphin.presentationModel.apply(self.dolphin, [null, ACTION_CALL_BEAN].concat(attributes));\n\n        self.connector.invoke(CALL_CONTROLLER_ACTION_COMMAND_NAME, params).then(function() {\n            var isError = pm.findAttributeByPropertyName(ERROR_CODE).getValue();\n            if (isError) {\n                reject(new Error(\"ControllerAction caused an error\"));\n            } else {\n                resolve();\n            }\n            self.dolphin.deletePresentationModel(pm);\n        });\n    });\n};\n\n\nControllerManager.prototype.destroyController = function(controller) {\n    checkMethod('ControllerManager.destroyController(controller)');\n    checkParam(controller, 'controller');\n\n    var self = this;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            self.controllers.delete(controller);\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).setValue(controller.controllerId);\n            self.connector.invoke(DESTROY_CONTROLLER_COMMAND_NAME).then(resolve);\n        });\n    });\n};\n\n\nControllerManager.prototype.destroy = function() {\n    var controllersCopy = this.controllers;\n    var promises = [];\n    this.controllers = new Set();\n    controllersCopy.forEach(function (controller) {\n        try {\n            promises.push(controller.destroy());\n        } catch (e) {\n            // ignore\n        }\n    });\n    return Promise.all(promises);\n};\n\n\n\nexports.ControllerManager = ControllerManager;\n\n},{\"../bower_components/core.js/library/fn/promise\":2,\"../bower_components/core.js/library/fn/set\":3,\"./classrepo.js\":67,\"./connector.js\":69,\"./controllerproxy.js\":71,\"./polyfills.js\":73,\"./utils.js\":74}],71:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Set = _dereq_('../bower_components/core.js/library/fn/set');\nvar utils = _dereq_('./utils.js');\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\n\nfunction ControllerProxy(controllerId, model, manager) {\n    checkMethod('ControllerProxy(controllerId, model, manager)');\n    checkParam(controllerId, 'controllerId');\n    checkParam(model, 'model');\n    checkParam(manager, 'manager');\n\n    this.controllerId = controllerId;\n    this.model = model;\n    this.manager = manager;\n    this.destroyed = false;\n    this.onDestroyedHandlers = new Set();\n}\n\n\nControllerProxy.prototype.invoke = function(name, params) {\n    checkMethod('ControllerProxy.invoke(name, params)');\n    checkParam(name, 'name');\n\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    return this.manager.invokeAction(this.controllerId, name, params);\n};\n\n\nControllerProxy.prototype.destroy = function() {\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    this.destroyed = true;\n    this.onDestroyedHandlers.forEach(function(handler) {\n        try {\n            handler(this);\n        } catch(e) {\n            console.warn('An exception occurred while calling an onDestroyed-handler', e);\n        }\n    }, this);\n    return this.manager.destroyController(this);\n};\n\n\nControllerProxy.prototype.onDestroyed = function(handler) {\n    checkMethod('ControllerProxy.onDestroyed(handler)');\n    checkParam(handler, 'handler');\n\n    var self = this;\n    this.onDestroyedHandlers.add(handler);\n    return {\n        unsubscribe: function() {\n            self.onDestroyedHandlers.delete(handler);\n        }\n    };\n};\n\n\n\nexports.ControllerProxy = ControllerProxy;\n\n},{\"../bower_components/core.js/library/fn/set\":3,\"./polyfills.js\":73,\"./utils.js\":74}],72:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar opendolphin = _dereq_('../libsrc/opendolphin.js');\n\nvar utils = _dereq_('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\nvar Connector = _dereq_('./connector.js').Connector;\nvar BeanManager = _dereq_('./beanmanager.js').BeanManager;\nvar ClassRepository = _dereq_('./classrepo.js').ClassRepository;\nvar ControllerManager = _dereq_('./controllermanager.js').ControllerManager;\nvar ClientContext = _dereq_('./clientcontext.js').ClientContext;\n\nexports.connect = function(url, config) {\n    checkMethod('connect(url, config)');\n    checkParam(url, 'url');\n\n    var builder = opendolphin.makeDolphin().url(url).reset(false).slackMS(4).supportCORS(true);\n    if (exists(config) && exists(config.errorHandler)) {\n        builder.errorHandler(config.errorHandler);\n    }\n    var dolphin = builder.build();\n\n    var classRepository = new ClassRepository(dolphin);\n    var beanManager = new BeanManager(classRepository);\n    var connector = new Connector(url, dolphin, classRepository, config);\n    var controllerManager = new ControllerManager(dolphin, classRepository, connector);\n\n    return new ClientContext(dolphin, beanManager, controllerManager, connector);\n};\n\n},{\"../libsrc/opendolphin.js\":65,\"./beanmanager.js\":66,\"./classrepo.js\":67,\"./clientcontext.js\":68,\"./connector.js\":69,\"./controllermanager.js\":70,\"./polyfills.js\":73,\"./utils.js\":74}],73:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n ////////////////////\n// Array.forEach()\n////////////////////\nif (!Array.prototype.forEach) {\n\n    Array.prototype.forEach = function(callback, thisArg) {\n\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n\n\n////////////////////\n// Array.filter()\n////////////////////\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun/*, thisArg*/) {\n        'use strict';\n\n        if (this === void 0 || this === null) {\n            throw new TypeError();\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n\n                // NOTE: Technically this should Object.defineProperty at\n                //       the next index, as push can be affected by\n                //       properties on Object.prototype and Array.prototype.\n                //       But that method's new, and collisions should be\n                //       rare, so use the more-compatible alternative.\n                if (fun.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}\n},{}],74:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar checkMethodName;\n\nvar exists = function(object) {\n    return typeof object !== 'undefined' && object !== null;\n};\n\nmodule.exports.exists = exists;\n\nmodule.exports.checkMethod = function(name) {\n    checkMethodName = name;\n};\n\nmodule.exports.checkParam = function(param, parameterName) {\n    if (!exists(param)) {\n        throw new Error('The parameter ' + parameterName + ' is mandatory in ' + checkMethodName);\n    }\n};\n\n},{}]},{},[72])(72)\n});\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],2:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.map');\n_dereq_('../modules/es7.map.to-json');\nmodule.exports = _dereq_('../modules/$.core').Map;\n},{\"../modules/$.core\":11,\"../modules/es6.map\":46,\"../modules/es6.object.to-string\":47,\"../modules/es6.string.iterator\":48,\"../modules/es7.map.to-json\":49,\"../modules/web.dom.iterable\":50}],3:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n},{}],4:[function(_dereq_,module,exports){\nmodule.exports = function(){ /* empty */ };\n},{}],5:[function(_dereq_,module,exports){\nvar isObject = _dereq_('./$.is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n},{\"./$.is-object\":23}],6:[function(_dereq_,module,exports){\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = _dereq_('./$.cof')\n  , TAG = _dereq_('./$.wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n},{\"./$.cof\":7,\"./$.wks\":43}],7:[function(_dereq_,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n},{}],8:[function(_dereq_,module,exports){\n'use strict';\nvar $            = _dereq_('./$')\n  , hide         = _dereq_('./$.hide')\n  , redefineAll  = _dereq_('./$.redefine-all')\n  , ctx          = _dereq_('./$.ctx')\n  , strictNew    = _dereq_('./$.strict-new')\n  , defined      = _dereq_('./$.defined')\n  , forOf        = _dereq_('./$.for-of')\n  , $iterDefine  = _dereq_('./$.iter-define')\n  , step         = _dereq_('./$.iter-step')\n  , ID           = _dereq_('./$.uid')('id')\n  , $has         = _dereq_('./$.has')\n  , isObject     = _dereq_('./$.is-object')\n  , setSpecies   = _dereq_('./$.set-species')\n  , DESCRIPTORS  = _dereq_('./$.descriptors')\n  , isExtensible = Object.isExtensible || isObject\n  , SIZE         = DESCRIPTORS ? '_s' : 'size'\n  , id           = 0;\n\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!$has(it, ID)){\n    // can't set id to frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add id\n    if(!create)return 'E';\n    // add missing object id\n    hide(it, ID, ++id);\n  // return object id with prefix\n  } return 'O' + it[ID];\n};\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      strictNew(that, C, NAME);\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n},{\"./$\":29,\"./$.ctx\":12,\"./$.defined\":13,\"./$.descriptors\":14,\"./$.for-of\":17,\"./$.has\":19,\"./$.hide\":20,\"./$.is-object\":23,\"./$.iter-define\":26,\"./$.iter-step\":27,\"./$.redefine-all\":32,\"./$.set-species\":34,\"./$.strict-new\":37,\"./$.uid\":42}],9:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar forOf   = _dereq_('./$.for-of')\n  , classof = _dereq_('./$.classof');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    var arr = [];\n    forOf(this, false, arr.push, arr);\n    return arr;\n  };\n};\n},{\"./$.classof\":6,\"./$.for-of\":17}],10:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./$')\n  , global         = _dereq_('./$.global')\n  , $export        = _dereq_('./$.export')\n  , fails          = _dereq_('./$.fails')\n  , hide           = _dereq_('./$.hide')\n  , redefineAll    = _dereq_('./$.redefine-all')\n  , forOf          = _dereq_('./$.for-of')\n  , strictNew      = _dereq_('./$.strict-new')\n  , isObject       = _dereq_('./$.is-object')\n  , setToStringTag = _dereq_('./$.set-to-string-tag')\n  , DESCRIPTORS    = _dereq_('./$.descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n  } else {\n    C = wrapper(function(target, iterable){\n      strictNew(target, C, NAME);\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n},{\"./$\":29,\"./$.descriptors\":14,\"./$.export\":15,\"./$.fails\":16,\"./$.for-of\":17,\"./$.global\":18,\"./$.hide\":20,\"./$.is-object\":23,\"./$.redefine-all\":32,\"./$.set-to-string-tag\":35,\"./$.strict-new\":37}],11:[function(_dereq_,module,exports){\nvar core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n},{}],12:[function(_dereq_,module,exports){\n// optional / simple context binding\nvar aFunction = _dereq_('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n},{\"./$.a-function\":3}],13:[function(_dereq_,module,exports){\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n},{}],14:[function(_dereq_,module,exports){\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !_dereq_('./$.fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n},{\"./$.fails\":16}],15:[function(_dereq_,module,exports){\nvar global    = _dereq_('./$.global')\n  , core      = _dereq_('./$.core')\n  , ctx       = _dereq_('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;\n},{\"./$.core\":11,\"./$.ctx\":12,\"./$.global\":18}],16:[function(_dereq_,module,exports){\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n},{}],17:[function(_dereq_,module,exports){\nvar ctx         = _dereq_('./$.ctx')\n  , call        = _dereq_('./$.iter-call')\n  , isArrayIter = _dereq_('./$.is-array-iter')\n  , anObject    = _dereq_('./$.an-object')\n  , toLength    = _dereq_('./$.to-length')\n  , getIterFn   = _dereq_('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that){\n  var iterFn = getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};\n},{\"./$.an-object\":5,\"./$.ctx\":12,\"./$.is-array-iter\":22,\"./$.iter-call\":24,\"./$.to-length\":41,\"./core.get-iterator-method\":44}],18:[function(_dereq_,module,exports){\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n},{}],19:[function(_dereq_,module,exports){\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n},{}],20:[function(_dereq_,module,exports){\nvar $          = _dereq_('./$')\n  , createDesc = _dereq_('./$.property-desc');\nmodule.exports = _dereq_('./$.descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n},{\"./$\":29,\"./$.descriptors\":14,\"./$.property-desc\":31}],21:[function(_dereq_,module,exports){\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = _dereq_('./$.cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n},{\"./$.cof\":7}],22:[function(_dereq_,module,exports){\n// check on default Array iterator\nvar Iterators  = _dereq_('./$.iterators')\n  , ITERATOR   = _dereq_('./$.wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n},{\"./$.iterators\":28,\"./$.wks\":43}],23:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n},{}],24:[function(_dereq_,module,exports){\n// call something on iterator step with safe closing on error\nvar anObject = _dereq_('./$.an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n},{\"./$.an-object\":5}],25:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./$')\n  , descriptor     = _dereq_('./$.property-desc')\n  , setToStringTag = _dereq_('./$.set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_dereq_('./$.hide')(IteratorPrototype, _dereq_('./$.wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n},{\"./$\":29,\"./$.hide\":20,\"./$.property-desc\":31,\"./$.set-to-string-tag\":35,\"./$.wks\":43}],26:[function(_dereq_,module,exports){\n'use strict';\nvar LIBRARY        = _dereq_('./$.library')\n  , $export        = _dereq_('./$.export')\n  , redefine       = _dereq_('./$.redefine')\n  , hide           = _dereq_('./$.hide')\n  , has            = _dereq_('./$.has')\n  , Iterators      = _dereq_('./$.iterators')\n  , $iterCreate    = _dereq_('./$.iter-create')\n  , setToStringTag = _dereq_('./$.set-to-string-tag')\n  , getProto       = _dereq_('./$').getProto\n  , ITERATOR       = _dereq_('./$.wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , methods, key;\n  // Fix native\n  if($native){\n    var IteratorPrototype = getProto($default.call(new Base));\n    // Set @@toStringTag to native iterators\n    setToStringTag(IteratorPrototype, TAG, true);\n    // FF fix\n    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    // fix Array#{values, @@iterator}.name in V8 / FF\n    if(DEF_VALUES && $native.name !== VALUES){\n      VALUES_BUG = true;\n      $default = function values(){ return $native.call(this); };\n    }\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n      keys:    IS_SET      ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n},{\"./$\":29,\"./$.export\":15,\"./$.has\":19,\"./$.hide\":20,\"./$.iter-create\":25,\"./$.iterators\":28,\"./$.library\":30,\"./$.redefine\":33,\"./$.set-to-string-tag\":35,\"./$.wks\":43}],27:[function(_dereq_,module,exports){\nmodule.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n},{}],28:[function(_dereq_,module,exports){\nmodule.exports = {};\n},{}],29:[function(_dereq_,module,exports){\nvar $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n},{}],30:[function(_dereq_,module,exports){\nmodule.exports = true;\n},{}],31:[function(_dereq_,module,exports){\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n},{}],32:[function(_dereq_,module,exports){\nvar redefine = _dereq_('./$.redefine');\nmodule.exports = function(target, src){\n  for(var key in src)redefine(target, key, src[key]);\n  return target;\n};\n},{\"./$.redefine\":33}],33:[function(_dereq_,module,exports){\nmodule.exports = _dereq_('./$.hide');\n},{\"./$.hide\":20}],34:[function(_dereq_,module,exports){\n'use strict';\nvar core        = _dereq_('./$.core')\n  , $           = _dereq_('./$')\n  , DESCRIPTORS = _dereq_('./$.descriptors')\n  , SPECIES     = _dereq_('./$.wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n},{\"./$\":29,\"./$.core\":11,\"./$.descriptors\":14,\"./$.wks\":43}],35:[function(_dereq_,module,exports){\nvar def = _dereq_('./$').setDesc\n  , has = _dereq_('./$.has')\n  , TAG = _dereq_('./$.wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n},{\"./$\":29,\"./$.has\":19,\"./$.wks\":43}],36:[function(_dereq_,module,exports){\nvar global = _dereq_('./$.global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n},{\"./$.global\":18}],37:[function(_dereq_,module,exports){\nmodule.exports = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};\n},{}],38:[function(_dereq_,module,exports){\nvar toInteger = _dereq_('./$.to-integer')\n  , defined   = _dereq_('./$.defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n},{\"./$.defined\":13,\"./$.to-integer\":39}],39:[function(_dereq_,module,exports){\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n},{}],40:[function(_dereq_,module,exports){\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = _dereq_('./$.iobject')\n  , defined = _dereq_('./$.defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n},{\"./$.defined\":13,\"./$.iobject\":21}],41:[function(_dereq_,module,exports){\n// 7.1.15 ToLength\nvar toInteger = _dereq_('./$.to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n},{\"./$.to-integer\":39}],42:[function(_dereq_,module,exports){\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n},{}],43:[function(_dereq_,module,exports){\nvar store  = _dereq_('./$.shared')('wks')\n  , uid    = _dereq_('./$.uid')\n  , Symbol = _dereq_('./$.global').Symbol;\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n};\n},{\"./$.global\":18,\"./$.shared\":36,\"./$.uid\":42}],44:[function(_dereq_,module,exports){\nvar classof   = _dereq_('./$.classof')\n  , ITERATOR  = _dereq_('./$.wks')('iterator')\n  , Iterators = _dereq_('./$.iterators');\nmodule.exports = _dereq_('./$.core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n},{\"./$.classof\":6,\"./$.core\":11,\"./$.iterators\":28,\"./$.wks\":43}],45:[function(_dereq_,module,exports){\n'use strict';\nvar addToUnscopables = _dereq_('./$.add-to-unscopables')\n  , step             = _dereq_('./$.iter-step')\n  , Iterators        = _dereq_('./$.iterators')\n  , toIObject        = _dereq_('./$.to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = _dereq_('./$.iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n},{\"./$.add-to-unscopables\":4,\"./$.iter-define\":26,\"./$.iter-step\":27,\"./$.iterators\":28,\"./$.to-iobject\":40}],46:[function(_dereq_,module,exports){\n'use strict';\nvar strong = _dereq_('./$.collection-strong');\n\n// 23.1 Map Objects\n_dereq_('./$.collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n},{\"./$.collection\":10,\"./$.collection-strong\":8}],47:[function(_dereq_,module,exports){\n\n},{}],48:[function(_dereq_,module,exports){\n'use strict';\nvar $at  = _dereq_('./$.string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_dereq_('./$.iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n},{\"./$.iter-define\":26,\"./$.string-at\":38}],49:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = _dereq_('./$.export');\n\n$export($export.P, 'Map', {toJSON: _dereq_('./$.collection-to-json')('Map')});\n},{\"./$.collection-to-json\":9,\"./$.export\":15}],50:[function(_dereq_,module,exports){\n_dereq_('./es6.array.iterator');\nvar Iterators = _dereq_('./$.iterators');\nIterators.NodeList = Iterators.HTMLCollection = Iterators.Array;\n},{\"./$.iterators\":28,\"./es6.array.iterator\":45}],51:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Polymer, console */\n\"use strict\";\n\nvar Binder = _dereq_('./binder.js').Binder;\n\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\n\nfunction polymer1_1hack(element, path) {\n    // This is a temporary hack to deal with Polymer's API consistency concerning arrays and paths.\n    // An observer uses keys in an array, while the get() and set() methods expect the index.\n    // This is hopefully fixed in Polymer 1.2.\n    do {\n        var pathElements = path.match(/^([^\\.]+)\\.(.*)$/);\n        var key = pathElements !== null? pathElements[1] : path;\n        path = pathElements !== null? pathElements[2] : null;\n\n        if (Array.isArray(element)) {\n            var arrayKey = parseInt(key);\n            if (isNaN(arrayKey)) {\n                element = element[key];\n            } else {\n                var collection = Polymer.Collection.get(element);\n                element = collection.getItem(arrayKey);\n            }\n        } else {\n            element = element[key];\n        }\n    } while (path !== null && exists(element));\n\n    return element;\n}\nfunction navigateToBean(element, path) {\n    var navigation = path.match(/^(.*)\\.[^\\.]*$/);\n    if (! exists(navigation)) {\n        return element;\n    } else {\n        return polymer1_1hack(element, navigation[1]);\n        //return element.get(navigation[1], element);\n    }\n}\n\n\nfunction setupCreateBehavior(clientContext) {\n\n    var binder = new Binder(clientContext.beanManager);\n\n    return function(controllerName) {\n        var state = 'INITIALIZING';\n        return {\n\n            properties: {\n                model: {\n                    type: Object,\n                    value: function() { return {}; }\n                }\n            },\n\n            observers: ['_dolphinObserver(model.*)'],\n\n            created: function() {\n                var self = this;\n                clientContext.createController(controllerName).then(function(controller) {\n                    self._controller = controller;\n                    state = 'READY';\n                    self.set('model', controller.model);\n                    controller.onDestroyed(function() {\n                        state = 'DESTROYED';\n                        self.set('model', null);\n                    });\n                });\n            },\n\n            invoke: function(actionName, params) {\n                // TODO Call this after init has finished\n                if (state !== 'READY') {\n                    console.warn('Controller.invoke() called before init() finished');\n                    return;\n                }\n                return this._controller.invoke(actionName, params);\n            },\n\n            _dolphinObserver: function(event) {\n                if (state !== 'READY') {\n                    return;\n                }\n                var path = event.path;\n                var bean, propertyName, i, j;\n                var newValue = event.value;\n\n                if (exists(newValue) && exists(newValue.indexSplices)) {\n                    path = path.substr(0, path.length - \".splices\".length);\n                    bean = navigateToBean(this, path);\n                    if (exists(bean)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var n = newValue.indexSplices.length;\n                        for (i = 0; i < n; i++) {\n                            var change = newValue.indexSplices[i];\n                            clientContext.beanManager.notifyArrayChange(bean, propertyName[0], change.index, change.addedCount, change.removed);\n\n                            var array = bean[propertyName[0]];\n                            for (j = 0; j < change.removed.length; j++) {\n                                binder.unbind(this, path + '.' + (change.index + j), change.removed[j]);\n                            }\n                            for (j = change.index + change.addedCount; j < array.length; j++) {\n                                var oldPos = j - change.addedCount + change.removed.length;\n                                binder.unbind(this, path + '.' + oldPos, array[j]);\n                            }\n                            for (j = change.index; j < array.length; j++) {\n                                binder.bind(this, path + '.' + j, array[j]);\n                            }\n                        }\n                    }\n                } else {\n                    bean = navigateToBean(this, path);\n                    if (exists(bean) && !Array.isArray(bean) && !Array.isArray(newValue)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var oldValue = clientContext.beanManager.notifyBeanChange(bean, propertyName[0], newValue);\n                        if (exists(oldValue)) {\n                            binder.unbind(this, path, oldValue);\n                        }\n                        if (exists(newValue)) {\n                            binder.bind(this, path, newValue);\n                        }\n                    }\n                }\n            }\n        };\n    };\n}\n\n\n\nexports.setupCreateBehavior = setupCreateBehavior;\n},{\"./binder.js\":52}],52:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar Map  = _dereq_('../bower_components/core.js/library/fn/map');\n\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\nfunction bindScope(scope, fn) {\n    return function () {\n        fn.apply(scope, arguments);\n    };\n}\n\nfunction deepEqual(array1, array2) {\n    if (array1 === array2 || (!exists(array1) && !exists(array2))) {\n        return true;\n    }\n    if (exists(array1) !== exists(array2)) {\n        return false;\n    }\n    var n = array1.length;\n    if (array2.length !== n) {\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\nfunction Binder(beanManager) {\n    this.listeners = new Map();\n\n    beanManager.onBeanUpdate(bindScope(this, this.onBeanUpdateHandler));\n    beanManager.onArrayUpdate(bindScope(this, this.onArrayUpdateHandler));\n}\n\n\nBinder.prototype.onBeanUpdateHandler = function(bean, propertyName, newValue, oldValue) {\n    if (oldValue === newValue) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        element.set(path, newValue);\n    } else {\n        bean[propertyName] = newValue;\n    }\n};\n\n\nBinder.prototype.onArrayUpdateHandler = function(bean, propertyName, index, count, newElements) {\n    var array = bean[propertyName];\n    var oldElements = array.slice(index, index + count);\n    if (deepEqual(newElements, oldElements)) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        if (typeof newElements === 'undefined') {\n            element.splice(path, index, count);\n        } else {\n            element.splice(path, index, count, newElements);\n        }\n    } else {\n        if (typeof newElements === 'undefined') {\n            array.splice(index, count);\n        } else {\n            array.splice(index, count, newElements);\n        }\n    }\n};\n\n\nBinder.prototype.bind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (!exists(listenerList)) {\n        listenerList = [];\n        this.listeners.set(value, listenerList);\n    }\n    listenerList.push({element: element, rootPath: rootPath});\n\n    if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n            this.bind(element, rootPath + '.' + i, value[i]);\n        }\n    } else if (typeof value === 'object') {\n        for (var propertyName in value) {\n            if (value.hasOwnProperty(propertyName)) {\n                this.bind(element, rootPath + '.' + propertyName, value[propertyName]);\n            }\n        }\n    }\n};\n\nBinder.prototype.unbind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (exists(listenerList)) {\n        var n = listenerList.length;\n        for (var i = 0; i < n; i++) {\n            var entry = listenerList[i];\n            if (entry.element === element && entry.rootPath === rootPath) {\n                listenerList.splice(i, 1);\n\n                if (Array.isArray(value)) {\n                    for (var j = 0; j < value.length; j++) {\n                        this.unbind(element, rootPath + '.' + j, value[j]);\n                    }\n                } else if (typeof value === 'object') {\n                    for (var propertyName in value) {\n                        if (value.hasOwnProperty(propertyName)) {\n                            this.unbind(element, rootPath + '.' + propertyName, value[propertyName]);\n                        }\n                    }\n                }\n                return;\n            }\n        }\n    }\n};\n\n\n\nexports.Binder = Binder;\n\n},{\"../bower_components/core.js/library/fn/map\":2}],53:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar connect = _dereq_('../bower_components/dolphin-js/dist/dolphin.js').connect;\nvar setupCreateBehavior = _dereq_('./behavior.js').setupCreateBehavior;\n\n\nexports.connect = function(url, config) {\n    var clientContext = connect(url, config);\n    clientContext.createBehavior = setupCreateBehavior(clientContext);\n    return clientContext;\n};\n\n},{\"../bower_components/dolphin-js/dist/dolphin.js\":1,\"./behavior.js\":51}]},{},[53])(53)\n});\n\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nmodule.exports = require('../modules/_core').Map;","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nmodule.exports = require('../modules/_core').Promise;","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.set');\nrequire('../modules/es7.set.to-json');\nmodule.exports = require('../modules/_core').Set;","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","module.exports = function(){ /* empty */ };","module.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","var forOf = require('./_for-of');\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","'use strict';\nvar $           = require('./_')\n  , hide        = require('./_hide')\n  , redefineAll = require('./_redefine-all')\n  , ctx         = require('./_ctx')\n  , anInstance  = require('./_an-instance')\n  , defined     = require('./_defined')\n  , forOf       = require('./_for-of')\n  , $iterDefine = require('./_iter-define')\n  , step        = require('./_iter-step')\n  , setSpecies  = require('./_set-species')\n  , DESCRIPTORS = require('./_descriptors')\n  , fastKey     = require('./_meta').fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof')\n  , from    = require('./_array-from-iterable');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};","'use strict';\nvar $              = require('./_')\n  , global         = require('./_global')\n  , $export        = require('./_export')\n  , meta           = require('./_meta')\n  , fails          = require('./_fails')\n  , hide           = require('./_hide')\n  , redefineAll    = require('./_redefine-all')\n  , forOf          = require('./_for-of')\n  , anInstance     = require('./_an-instance')\n  , isObject       = require('./_is-object')\n  , setToStringTag = require('./_set-to-string-tag')\n  , DESCRIPTORS    = require('./_descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function(target, iterable){\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        anInstance(this, C, KEY);\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};","var core = module.exports = {version: '2.0.3'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","var ctx         = require('./_ctx')\n  , call        = require('./_iter-call')\n  , isArrayIter = require('./_is-array-iter')\n  , anObject    = require('./_an-object')\n  , toLength    = require('./_to-length')\n  , getIterFn   = require('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var $          = require('./_')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","module.exports = require('./_global').document && document.documentElement;","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// check on default Array iterator\nvar Iterators  = require('./_iterators')\n  , ITERATOR   = require('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};","'use strict';\nvar $              = require('./_')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getProto       = require('./_').getProto\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getProto($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","var ITERATOR     = require('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","module.exports = {};","module.exports = true;","var META     = require('./_uid')('meta')\n  , isObject = require('./_is-object')\n  , has      = require('./_has')\n  , setDesc  = require('./_').setDesc\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !require('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};","var global    = require('./_global')\n  , macrotask = require('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./_cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var hide = require('./_hide');\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};","module.exports = require('./_hide');","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar getDesc  = require('./_').getDesc\n  , isObject = require('./_is-object')\n  , anObject = require('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = require('./_ctx')(Function.call, getDesc(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};","'use strict';\nvar core        = require('./_core')\n  , $           = require('./_')\n  , DESCRIPTORS = require('./_descriptors')\n  , SPECIES     = require('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};","var def = require('./_').setDesc\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = require('./_an-object')\n  , aFunction = require('./_a-function')\n  , SPECIES   = require('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","var ctx                = require('./_ctx')\n  , invoke             = require('./_invoke')\n  , html               = require('./_html')\n  , cel                = require('./_dom-create')\n  , global             = require('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listner = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(require('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listner;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listner, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","'use strict';\nvar $                  = require('./_')\n  , LIBRARY            = require('./_library')\n  , global             = require('./_global')\n  , ctx                = require('./_ctx')\n  , classof            = require('./_classof')\n  , $export            = require('./_export')\n  , isObject           = require('./_is-object')\n  , anObject           = require('./_an-object')\n  , aFunction          = require('./_a-function')\n  , anInstance         = require('./_an-instance')\n  , forOf              = require('./_for-of')\n  , from               = require('./_array-from-iterable')\n  , setProto           = require('./_set-proto').set\n  , speciesConstructor = require('./_species-constructor')\n  , task               = require('./_task').set\n  , microtask          = require('./_microtask')\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar testResolve = function(sub){\n  var test = new $Promise(empty), promise;\n  if(sub)test.constructor = function(exec){\n    exec(empty, empty);\n  };\n  (promise = $Promise.resolve(test))['catch'](empty);\n  return promise === test;\n};\n\nvar USE_NATIVE = function(){\n  var works = false;\n  var SubPromise = function(x){\n    var self = new $Promise(x);\n    setProto(self, SubPromise.prototype);\n    return self;\n  };\n  try {\n    works = $Promise && $Promise.resolve && testResolve();\n    setProto(SubPromise, $Promise);\n    SubPromise.prototype = $.create($Promise.prototype, {constructor: {value: SubPromise}});\n    // actual Firefox has broken subclass support, test that\n    if(!(SubPromise.resolve(5).then(empty) instanceof SubPromise)){\n      works = false;\n    }\n    // V8 4.8- bug, https://code.google.com/p/v8/issues/detail?id=4162\n    if(works && require('./_descriptors')){\n      var thenableThenGotten = false;\n      $Promise.resolve($.setDesc({}, 'then', {\n        get: function(){ thenableThenGotten = true; }\n      }));\n      works = thenableThenGotten;\n    }\n  } catch(e){ works = false; }\n  return !!works;\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          result = handler === true ? value : handler(value);\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    if(isUnhandled(promise)){\n      var value = promise._v\n        , handler, console;\n      if(isNode){\n        process.emit('unhandledRejection', value, promise);\n      } else if(handler = global.onunhandledrejection){\n        handler({promise: promise, reason: value});\n      } else if((console = global.console) && console.error){\n        console.error('Unhandled promise rejection', value);\n      } promise._h = 2;\n    } promise._a = undefined;\n  });\n};\nvar isUnhandled = function(promise){\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  if(promise._h == 1)return false;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok   = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE || testResolve(true)), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = from(iterable)\n        , remaining = values.length\n        , results   = Array(remaining);\n      if(remaining)$.each.call(values, function(promise, index){\n        var alreadyCalled = false;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled = true;\n          results[index] = value;\n          --remaining || resolve(results);\n        }, reject);\n      });\n      else resolve(results);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')('Set', function(get){\n  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value){\n    return strong.def(this, value = value === 0 ? 0 : value, value);\n  }\n}, strong);","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Map', {toJSON: require('./_collection-to-json')('Map')});","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Set', {toJSON: require('./_collection-to-json')('Set')});","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag')\n  , ArrayValues   = Iterators.Array;\n\nrequire('./_').each.call(['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], function(NAME){\n  var Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = ArrayValues;\n});","var opendolphin;\n(function (opendolphin) {\n    var Attribute = (function () {\n        function Attribute() {\n        }\n        Attribute.QUALIFIER_PROPERTY = \"qualifier\";\n        Attribute.DIRTY_PROPERTY = \"dirty\";\n        Attribute.BASE_VALUE = \"baseValue\";\n        Attribute.VALUE = \"value\";\n        Attribute.TAG = \"tag\";\n        return Attribute;\n    })();\n    opendolphin.Attribute = Attribute;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Command = (function () {\n        function Command() {\n            this.id = \"dolphin-core-command\";\n        }\n        return Command;\n    })();\n    opendolphin.Command = Command;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Tag = (function () {\n        function Tag() {\n        }\n        //Implemented as function so that it will never be changed from outside\n        /** The actual value of the attribute. This is the default if no tag is given.*/\n        Tag.value = function () {\n            return \"VALUE\";\n        };\n        /** the to-be-displayed String, not the key. I18N happens on the server. */\n        Tag.label = function () {\n            return \"LABEL\";\n        };\n        /** If the attribute represent tooltip**/\n        Tag.tooltip = function () {\n            return \"TOOLTIP\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint nullable:false */\n        Tag.mandatory = function () {\n            return \"MANDATORY\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint display:true */\n        Tag.visible = function () {\n            return \"VISIBLE\";\n        };\n        /** \"true\" or \"false\" */\n        Tag.enabled = function () {\n            return \"ENABLED\";\n        };\n        /** regular expression for local, syntactical constraints like in \"rejectField\" */\n        Tag.regex = function () {\n            return \"REGEX\";\n        };\n        /** a single text; e.g. \"textArea\" if the String value should be displayed in a text area instead of a textField */\n        Tag.widgetHint = function () {\n            return \"WIDGET_HINT\";\n        };\n        /** a single text; e.g. \"java.util.Date\" if the value String represents a date */\n        Tag.valueType = function () {\n            return \"VALUE_TYPE\";\n        };\n        return Tag;\n    })();\n    opendolphin.Tag = Tag;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeCreatedNotification = (function (_super) {\n        __extends(AttributeCreatedNotification, _super);\n        function AttributeCreatedNotification(pmId, attributeId, propertyName, newValue, qualifier, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.attributeId = attributeId;\n            this.propertyName = propertyName;\n            this.newValue = newValue;\n            this.qualifier = qualifier;\n            this.tag = tag;\n            this.id = 'AttributeCreated';\n            this.className = \"org.opendolphin.core.comm.AttributeCreatedNotification\";\n        }\n        return AttributeCreatedNotification;\n    })(opendolphin.Command);\n    opendolphin.AttributeCreatedNotification = AttributeCreatedNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeMetadataChangedCommand = (function (_super) {\n        __extends(AttributeMetadataChangedCommand, _super);\n        function AttributeMetadataChangedCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'AttributeMetadataChanged';\n            this.className = \"org.opendolphin.core.comm.AttributeMetadataChangedCommand\";\n        }\n        return AttributeMetadataChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.AttributeMetadataChangedCommand = AttributeMetadataChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var BaseValueChangedCommand = (function (_super) {\n        __extends(BaseValueChangedCommand, _super);\n        function BaseValueChangedCommand(attributeId) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.id = 'BaseValueChanged';\n            this.className = \"org.opendolphin.core.comm.BaseValueChangedCommand\";\n        }\n        return BaseValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.BaseValueChangedCommand = BaseValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CallNamedActionCommand = (function (_super) {\n        __extends(CallNamedActionCommand, _super);\n        function CallNamedActionCommand(actionName) {\n            _super.call(this);\n            this.actionName = actionName;\n            this.id = 'CallNamedAction';\n            this.className = \"org.opendolphin.core.comm.CallNamedActionCommand\";\n        }\n        return CallNamedActionCommand;\n    })(opendolphin.Command);\n    opendolphin.CallNamedActionCommand = CallNamedActionCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ChangeAttributeMetadataCommand = (function (_super) {\n        __extends(ChangeAttributeMetadataCommand, _super);\n        function ChangeAttributeMetadataCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'ChangeAttributeMetadata';\n            this.className = \"org.opendolphin.core.comm.ChangeAttributeMetadataCommand\";\n        }\n        return ChangeAttributeMetadataCommand;\n    })(opendolphin.Command);\n    opendolphin.ChangeAttributeMetadataCommand = ChangeAttributeMetadataCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var EventBus = (function () {\n        function EventBus() {\n            this.eventHandlers = [];\n        }\n        EventBus.prototype.onEvent = function (eventHandler) {\n            this.eventHandlers.push(eventHandler);\n        };\n        EventBus.prototype.trigger = function (event) {\n            this.eventHandlers.forEach(function (handle) { return handle(event); });\n        };\n        return EventBus;\n    })();\n    opendolphin.EventBus = EventBus;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var presentationModelInstanceCount = 0; // todo dk: consider making this static in class\n    var ClientPresentationModel = (function () {\n        function ClientPresentationModel(id, presentationModelType) {\n            this.id = id;\n            this.presentationModelType = presentationModelType;\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.dirty = false;\n            if (typeof id !== 'undefined' && id != null) {\n                this.id = id;\n            }\n            else {\n                this.id = (presentationModelInstanceCount++).toString();\n            }\n            this.invalidBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n        }\n        // todo dk: align with Java version: move to ClientDolphin and auto-add to model store\n        /** a copy constructor for anything but IDs. Per default, copies are client side only, no automatic update applies. */\n        ClientPresentationModel.prototype.copy = function () {\n            var result = new ClientPresentationModel(null, this.presentationModelType);\n            result.clientSideOnly = true;\n            this.getAttributes().forEach(function (attribute) {\n                var attributeCopy = attribute.copy();\n                result.addAttribute(attributeCopy);\n            });\n            return result;\n        };\n        //add array of attributes\n        ClientPresentationModel.prototype.addAttributes = function (attributes) {\n            var _this = this;\n            if (!attributes || attributes.length < 1)\n                return;\n            attributes.forEach(function (attr) {\n                _this.addAttribute(attr);\n            });\n        };\n        ClientPresentationModel.prototype.addAttribute = function (attribute) {\n            var _this = this;\n            if (!attribute || (this.attributes.indexOf(attribute) > -1)) {\n                return;\n            }\n            if (this.findAttributeByPropertyNameAndTag(attribute.propertyName, attribute.tag)) {\n                throw new Error(\"There already is an attribute with property name: \" + attribute.propertyName\n                    + \" and tag: \" + attribute.tag + \" in presentation model with id: \" + this.id);\n            }\n            if (attribute.getQualifier() && this.findAttributeByQualifier(attribute.getQualifier())) {\n                throw new Error(\"There already is an attribute with qualifier: \" + attribute.getQualifier()\n                    + \" in presentation model with id: \" + this.id);\n            }\n            attribute.setPresentationModel(this);\n            this.attributes.push(attribute);\n            if (attribute.tag == opendolphin.Tag.value()) {\n                this.updateDirty();\n            }\n            attribute.onValueChange(function (evt) {\n                _this.invalidBus.trigger({ source: _this });\n            });\n        };\n        ClientPresentationModel.prototype.updateDirty = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].isDirty()) {\n                    this.setDirty(true);\n                    return;\n                }\n            }\n            ;\n            this.setDirty(false);\n        };\n        ClientPresentationModel.prototype.updateAttributeDirtyness = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                this.attributes[i].updateDirty();\n            }\n        };\n        ClientPresentationModel.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientPresentationModel.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n        };\n        ClientPresentationModel.prototype.reset = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.reset();\n            });\n        };\n        ClientPresentationModel.prototype.rebase = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.rebase();\n            });\n        };\n        ClientPresentationModel.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientPresentationModel.prototype.onInvalidated = function (handleInvalidate) {\n            this.invalidBus.onEvent(handleInvalidate);\n        };\n        /** returns a copy of the internal state */\n        ClientPresentationModel.prototype.getAttributes = function () {\n            return this.attributes.slice(0);\n        };\n        ClientPresentationModel.prototype.getAt = function (propertyName, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            return this.findAttributeByPropertyNameAndTag(propertyName, tag);\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyName = function (propertyName) {\n            return this.findAttributeByPropertyNameAndTag(propertyName, opendolphin.Tag.value());\n        };\n        ClientPresentationModel.prototype.findAllAttributesByPropertyName = function (propertyName) {\n            var result = [];\n            if (!propertyName)\n                return null;\n            this.attributes.forEach(function (attribute) {\n                if (attribute.propertyName == propertyName) {\n                    result.push(attribute);\n                }\n            });\n            return result;\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyNameAndTag = function (propertyName, tag) {\n            if (!propertyName || !tag)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if ((this.attributes[i].propertyName == propertyName) && (this.attributes[i].tag == tag)) {\n                    return this.attributes[i];\n                }\n            }\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeByQualifier = function (qualifier) {\n            if (!qualifier)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].getQualifier() == qualifier) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeById = function (id) {\n            if (!id)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].id == id) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.syncWith = function (sourcePresentationModel) {\n            this.attributes.forEach(function (targetAttribute) {\n                var sourceAttribute = sourcePresentationModel.getAt(targetAttribute.propertyName, targetAttribute.tag);\n                if (sourceAttribute) {\n                    targetAttribute.syncWith(sourceAttribute);\n                }\n            });\n        };\n        return ClientPresentationModel;\n    })();\n    opendolphin.ClientPresentationModel = ClientPresentationModel;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientAttribute = (function () {\n        function ClientAttribute(propertyName, qualifier, value, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            this.propertyName = propertyName;\n            this.tag = tag;\n            this.dirty = false;\n            this.id = \"\" + (ClientAttribute.clientAttributeInstanceCount++) + \"C\";\n            this.valueChangeBus = new opendolphin.EventBus();\n            this.qualifierChangeBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n            this.baseValueChangeBus = new opendolphin.EventBus();\n            this.setValue(value);\n            this.setBaseValue(value);\n            this.setQualifier(qualifier);\n        }\n        /** a copy constructor with new id and no presentation model */\n        ClientAttribute.prototype.copy = function () {\n            var result = new ClientAttribute(this.propertyName, this.getQualifier(), this.getValue(), this.tag);\n            result.setBaseValue(this.getBaseValue());\n            return result;\n        };\n        ClientAttribute.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientAttribute.prototype.getBaseValue = function () {\n            return this.baseValue;\n        };\n        ClientAttribute.prototype.setPresentationModel = function (presentationModel) {\n            if (this.presentationModel) {\n                alert(\"You can not set a presentation model for an attribute that is already bound.\");\n            }\n            this.presentationModel = presentationModel;\n        };\n        ClientAttribute.prototype.getPresentationModel = function () {\n            return this.presentationModel;\n        };\n        ClientAttribute.prototype.getValue = function () {\n            return this.value;\n        };\n        ClientAttribute.prototype.setValue = function (newValue) {\n            var verifiedValue = ClientAttribute.checkValue(newValue);\n            if (this.value == verifiedValue)\n                return;\n            var oldValue = this.value;\n            this.value = verifiedValue;\n            this.setDirty(this.calculateDirty(this.baseValue, verifiedValue));\n            this.valueChangeBus.trigger({ 'oldValue': oldValue, 'newValue': verifiedValue });\n        };\n        ClientAttribute.prototype.calculateDirty = function (baseValue, value) {\n            if (baseValue == null) {\n                return value != null;\n            }\n            else {\n                return baseValue != value;\n            }\n        };\n        ClientAttribute.prototype.updateDirty = function () {\n            this.setDirty(this.calculateDirty(this.baseValue, this.value));\n        };\n        ClientAttribute.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n            if (this.presentationModel)\n                this.presentationModel.updateDirty();\n        };\n        ClientAttribute.prototype.setQualifier = function (newQualifier) {\n            if (this.qualifier == newQualifier)\n                return;\n            var oldQualifier = this.qualifier;\n            this.qualifier = newQualifier;\n            this.qualifierChangeBus.trigger({ 'oldValue': oldQualifier, 'newValue': newQualifier });\n        };\n        ClientAttribute.prototype.getQualifier = function () {\n            return this.qualifier;\n        };\n        ClientAttribute.prototype.setBaseValue = function (baseValue) {\n            if (this.baseValue == baseValue)\n                return;\n            var oldBaseValue = this.baseValue;\n            this.baseValue = baseValue;\n            this.setDirty(this.calculateDirty(baseValue, this.value));\n            this.baseValueChangeBus.trigger({ 'oldValue': oldBaseValue, 'newValue': baseValue });\n        };\n        ClientAttribute.prototype.rebase = function () {\n            this.setBaseValue(this.value);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.prototype.reset = function () {\n            this.setValue(this.baseValue);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.checkValue = function (value) {\n            if (value == null || value == undefined) {\n                return null;\n            }\n            var result = value;\n            if (result instanceof String || result instanceof Boolean || result instanceof Number) {\n                result = value.valueOf();\n            }\n            if (result instanceof ClientAttribute) {\n                console.log(\"An Attribute may not itself contain an attribute as a value. Assuming you forgot to call value.\");\n                result = this.checkValue(value.value);\n            }\n            var ok = false;\n            if (this.SUPPORTED_VALUE_TYPES.indexOf(typeof result) > -1 || result instanceof Date) {\n                ok = true;\n            }\n            if (!ok) {\n                throw new Error(\"Attribute values of this type are not allowed: \" + typeof value);\n            }\n            return result;\n        };\n        ClientAttribute.prototype.onValueChange = function (eventHandler) {\n            this.valueChangeBus.onEvent(eventHandler);\n            eventHandler({ \"oldValue\": this.value, \"newValue\": this.value });\n        };\n        ClientAttribute.prototype.onQualifierChange = function (eventHandler) {\n            this.qualifierChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onBaseValueChange = function (eventHandler) {\n            this.baseValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.syncWith = function (sourceAttribute) {\n            if (sourceAttribute) {\n                this.setQualifier(sourceAttribute.getQualifier()); // sequence is important\n                this.setBaseValue(sourceAttribute.getBaseValue());\n                this.setValue(sourceAttribute.value);\n            }\n        };\n        ClientAttribute.SUPPORTED_VALUE_TYPES = [\"string\", \"number\", \"boolean\"];\n        ClientAttribute.clientAttributeInstanceCount = 0;\n        return ClientAttribute;\n    })();\n    opendolphin.ClientAttribute = ClientAttribute;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var ValueChangedCommand = (function (_super) {\n        __extends(ValueChangedCommand, _super);\n        function ValueChangedCommand(attributeId, oldValue, newValue) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.oldValue = oldValue;\n            this.newValue = newValue;\n            this.id = \"ValueChanged\";\n            this.className = \"org.opendolphin.core.comm.ValueChangedCommand\";\n        }\n        return ValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.ValueChangedCommand = ValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var NamedCommand = (function (_super) {\n        __extends(NamedCommand, _super);\n        function NamedCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.NamedCommand\";\n        }\n        return NamedCommand;\n    })(opendolphin.Command);\n    opendolphin.NamedCommand = NamedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var EmptyNotification = (function (_super) {\n        __extends(EmptyNotification, _super);\n        function EmptyNotification() {\n            _super.call(this);\n            this.id = \"Empty\";\n            this.className = \"org.opendolphin.core.comm.EmptyNotification\";\n        }\n        return EmptyNotification;\n    })(opendolphin.Command);\n    opendolphin.EmptyNotification = EmptyNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"NamedCommand.ts\"/>\n/// <reference path=\"EmptyNotification.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /** A Batcher that does no batching but merely takes the first element of the queue as the single item in the batch */\n    var NoCommandBatcher = (function () {\n        function NoCommandBatcher() {\n        }\n        NoCommandBatcher.prototype.batch = function (queue) {\n            return [queue.shift()];\n        };\n        return NoCommandBatcher;\n    })();\n    opendolphin.NoCommandBatcher = NoCommandBatcher;\n    /** A batcher that batches the blinds (commands with no callback) and optionally also folds value changes */\n    var BlindCommandBatcher = (function () {\n        /** folding: whether we should try folding ValueChangedCommands */\n        function BlindCommandBatcher(folding, maxBatchSize) {\n            if (folding === void 0) { folding = true; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.folding = folding;\n            this.maxBatchSize = maxBatchSize;\n        }\n        BlindCommandBatcher.prototype.batch = function (queue) {\n            var result = [];\n            this.processNext(this.maxBatchSize, queue, result); // do not batch more than this.maxBatchSize commands to avoid stack overflow on recursion.\n            return result;\n        };\n        // recursive impl method to side-effect both queue and batch\n        BlindCommandBatcher.prototype.processNext = function (maxBatchSize, queue, batch) {\n            if (queue.length < 1 || maxBatchSize < 1)\n                return;\n            var candidate = queue.shift();\n            if (this.folding && candidate.command instanceof opendolphin.ValueChangedCommand && (!candidate.handler)) {\n                var found = null;\n                var canCmd = candidate.command;\n                for (var i = 0; i < batch.length && found == null; i++) {\n                    if (batch[i].command instanceof opendolphin.ValueChangedCommand) {\n                        var batchCmd = batch[i].command;\n                        if (canCmd.attributeId == batchCmd.attributeId && batchCmd.newValue == canCmd.oldValue) {\n                            found = batchCmd;\n                        }\n                    }\n                }\n                if (found) {\n                    found.newValue = canCmd.newValue; // change existing value, do not batch\n                }\n                else {\n                    batch.push(candidate); // we cannot merge, so batch the candidate\n                }\n            }\n            else {\n                batch.push(candidate);\n            }\n            if (!candidate.handler &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.NamedCommand\") &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.EmptyNotification\") // and no unknown client side effect\n            ) {\n                this.processNext(maxBatchSize - 1, queue, batch); // then we can proceed with batching\n            }\n        };\n        return BlindCommandBatcher;\n    })();\n    opendolphin.BlindCommandBatcher = BlindCommandBatcher;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Codec = (function () {\n        function Codec() {\n        }\n        Codec.prototype.encode = function (commands) {\n            return JSON.stringify(commands); // todo dk: look for possible API support for character encoding\n        };\n        Codec.prototype.decode = function (transmitted) {\n            if (typeof transmitted == 'string') {\n                return JSON.parse(transmitted);\n            }\n            else {\n                return transmitted;\n            }\n        };\n        return Codec;\n    })();\n    opendolphin.Codec = Codec;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var SignalCommand = (function (_super) {\n        __extends(SignalCommand, _super);\n        function SignalCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.SignalCommand\";\n        }\n        return SignalCommand;\n    })(opendolphin.Command);\n    opendolphin.SignalCommand = SignalCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CreatePresentationModelCommand = (function (_super) {\n        __extends(CreatePresentationModelCommand, _super);\n        function CreatePresentationModelCommand(presentationModel) {\n            _super.call(this);\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.id = \"CreatePresentationModel\";\n            this.className = \"org.opendolphin.core.comm.CreatePresentationModelCommand\";\n            this.pmId = presentationModel.id;\n            this.pmType = presentationModel.presentationModelType;\n            var attrs = this.attributes;\n            presentationModel.getAttributes().forEach(function (attr) {\n                attrs.push({\n                    propertyName: attr.propertyName,\n                    id: attr.id,\n                    qualifier: attr.getQualifier(),\n                    value: attr.getValue(),\n                    tag: attr.tag\n                });\n            });\n        }\n        return CreatePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.CreatePresentationModelCommand = CreatePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Map = (function () {\n        function Map() {\n            this.keys = [];\n            this.data = [];\n        }\n        Map.prototype.put = function (key, value) {\n            if (!this.containsKey(key)) {\n                this.keys.push(key);\n            }\n            this.data[this.keys.indexOf(key)] = value;\n        };\n        Map.prototype.get = function (key) {\n            return this.data[this.keys.indexOf(key)];\n        };\n        Map.prototype.remove = function (key) {\n            if (this.containsKey(key)) {\n                var index = this.keys.indexOf(key);\n                this.keys.splice(index, 1);\n                this.data.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        Map.prototype.isEmpty = function () {\n            return this.keys.length == 0;\n        };\n        Map.prototype.length = function () {\n            return this.keys.length;\n        };\n        Map.prototype.forEach = function (handler) {\n            for (var i = 0; i < this.keys.length; i++) {\n                handler(this.keys[i], this.data[i]);\n            }\n        };\n        Map.prototype.containsKey = function (key) {\n            return this.keys.indexOf(key) > -1;\n        };\n        Map.prototype.containsValue = function (value) {\n            return this.data.indexOf(value) > -1;\n        };\n        Map.prototype.values = function () {\n            return this.data.slice(0);\n        };\n        Map.prototype.keySet = function () {\n            return this.keys.slice(0);\n        };\n        return Map;\n    })();\n    opendolphin.Map = Map;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedAllPresentationModelsOfTypeNotification = (function (_super) {\n        __extends(DeletedAllPresentationModelsOfTypeNotification, _super);\n        function DeletedAllPresentationModelsOfTypeNotification(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeletedAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeletedAllPresentationModelsOfTypeNotification\";\n        }\n        return DeletedAllPresentationModelsOfTypeNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedAllPresentationModelsOfTypeNotification = DeletedAllPresentationModelsOfTypeNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedPresentationModelNotification = (function (_super) {\n        __extends(DeletedPresentationModelNotification, _super);\n        function DeletedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletedPresentationModelNotification\";\n        }\n        return DeletedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedPresentationModelNotification = DeletedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"CreatePresentationModelCommand.ts\"/>\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"ChangeAttributeMetadataCommand.ts\"/>\n/// <reference path=\"Attribute.ts\"/>\n/// <reference path=\"Map.ts\"/>\n/// <reference path=\"DeletedAllPresentationModelsOfTypeNotification.ts\"/>\n/// <reference path=\"EventBus.ts\"/>\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"DeletedPresentationModelNotification.ts\"/>\n/// <reference path=\"BaseValueChangedCommand.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    (function (Type) {\n        Type[Type[\"ADDED\"] = 'ADDED'] = \"ADDED\";\n        Type[Type[\"REMOVED\"] = 'REMOVED'] = \"REMOVED\";\n    })(opendolphin.Type || (opendolphin.Type = {}));\n    var Type = opendolphin.Type;\n    var ClientModelStore = (function () {\n        function ClientModelStore(clientDolphin) {\n            this.clientDolphin = clientDolphin;\n            this.presentationModels = new opendolphin.Map();\n            this.presentationModelsPerType = new opendolphin.Map();\n            this.attributesPerId = new opendolphin.Map();\n            this.attributesPerQualifier = new opendolphin.Map();\n            this.modelStoreChangeBus = new opendolphin.EventBus();\n        }\n        ClientModelStore.prototype.getClientDolphin = function () {\n            return this.clientDolphin;\n        };\n        ClientModelStore.prototype.registerModel = function (model) {\n            var _this = this;\n            if (model.clientSideOnly) {\n                return;\n            }\n            var connector = this.clientDolphin.getClientConnector();\n            var createPMCommand = new opendolphin.CreatePresentationModelCommand(model);\n            connector.send(createPMCommand, null);\n            model.getAttributes().forEach(function (attribute) {\n                _this.registerAttribute(attribute);\n            });\n        };\n        ClientModelStore.prototype.registerAttribute = function (attribute) {\n            var _this = this;\n            this.addAttributeById(attribute);\n            if (attribute.getQualifier()) {\n                this.addAttributeByQualifier(attribute);\n            }\n            // whenever an attribute changes its value, the server needs to be notified\n            // and all other attributes with the same qualifier are given the same value\n            attribute.onValueChange(function (evt) {\n                var valueChangeCommand = new opendolphin.ValueChangedCommand(attribute.id, evt.oldValue, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(valueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setValue(attribute.getValue());\n                    });\n                }\n            });\n            // all attributes with the same qualifier should have the same base value\n            attribute.onBaseValueChange(function (evt) {\n                var baseValueChangeCommand = new opendolphin.BaseValueChangedCommand(attribute.id);\n                _this.clientDolphin.getClientConnector().send(baseValueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setBaseValue(attribute.getBaseValue());\n                    });\n                }\n            });\n            attribute.onQualifierChange(function (evt) {\n                var changeAttrMetadataCmd = new opendolphin.ChangeAttributeMetadataCommand(attribute.id, opendolphin.Attribute.QUALIFIER_PROPERTY, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(changeAttrMetadataCmd, null);\n            });\n        };\n        ClientModelStore.prototype.add = function (model) {\n            if (!model) {\n                return false;\n            }\n            if (this.presentationModels.containsKey(model.id)) {\n                console.log(\"There already is a PM with id \" + model.id);\n            }\n            var added = false;\n            if (!this.presentationModels.containsValue(model)) {\n                this.presentationModels.put(model.id, model);\n                this.addPresentationModelByType(model);\n                this.registerModel(model);\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.ADDED, 'clientPresentationModel': model });\n                added = true;\n            }\n            return added;\n        };\n        ClientModelStore.prototype.remove = function (model) {\n            var _this = this;\n            if (!model) {\n                return false;\n            }\n            var removed = false;\n            if (this.presentationModels.containsValue(model)) {\n                this.removePresentationModelByType(model);\n                this.presentationModels.remove(model.id);\n                model.getAttributes().forEach(function (attribute) {\n                    _this.removeAttributeById(attribute);\n                    if (attribute.getQualifier()) {\n                        _this.removeAttributeByQualifier(attribute);\n                    }\n                });\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.REMOVED, 'clientPresentationModel': model });\n                removed = true;\n            }\n            return removed;\n        };\n        ClientModelStore.prototype.findAttributesByFilter = function (filter) {\n            var matches = [];\n            this.presentationModels.forEach(function (key, model) {\n                model.getAttributes().forEach(function (attr) {\n                    if (filter(attr)) {\n                        matches.push(attr);\n                    }\n                });\n            });\n            return matches;\n        };\n        ClientModelStore.prototype.addPresentationModelByType = function (model) {\n            if (!model) {\n                return;\n            }\n            var type = model.presentationModelType;\n            if (!type) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(type);\n            if (!presentationModels) {\n                presentationModels = [];\n                this.presentationModelsPerType.put(type, presentationModels);\n            }\n            if (!(presentationModels.indexOf(model) > -1)) {\n                presentationModels.push(model);\n            }\n        };\n        ClientModelStore.prototype.removePresentationModelByType = function (model) {\n            if (!model || !(model.presentationModelType)) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(model.presentationModelType);\n            if (!presentationModels) {\n                return;\n            }\n            if (presentationModels.length > -1) {\n                presentationModels.splice(presentationModels.indexOf(model), 1);\n            }\n            if (presentationModels.length === 0) {\n                this.presentationModelsPerType.remove(model.presentationModelType);\n            }\n        };\n        ClientModelStore.prototype.listPresentationModelIds = function () {\n            return this.presentationModels.keySet().slice(0);\n        };\n        ClientModelStore.prototype.listPresentationModels = function () {\n            return this.presentationModels.values();\n        };\n        ClientModelStore.prototype.findPresentationModelById = function (id) {\n            return this.presentationModels.get(id);\n        };\n        ClientModelStore.prototype.findAllPresentationModelByType = function (type) {\n            if (!type || !this.presentationModelsPerType.containsKey(type)) {\n                return [];\n            }\n            return this.presentationModelsPerType.get(type).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            var _this = this;\n            var presentationModels = this.findAllPresentationModelByType(presentationModelType);\n            presentationModels.forEach(function (pm) {\n                _this.deletePresentationModel(pm, false);\n            });\n            this.clientDolphin.getClientConnector().send(new opendolphin.DeletedAllPresentationModelsOfTypeNotification(presentationModelType), undefined);\n        };\n        ClientModelStore.prototype.deletePresentationModel = function (model, notify) {\n            if (!model) {\n                return;\n            }\n            if (this.containsPresentationModel(model.id)) {\n                this.remove(model);\n                if (!notify || model.clientSideOnly) {\n                    return;\n                }\n                this.clientDolphin.getClientConnector().send(new opendolphin.DeletedPresentationModelNotification(model.id), null);\n            }\n        };\n        ClientModelStore.prototype.containsPresentationModel = function (id) {\n            return this.presentationModels.containsKey(id);\n        };\n        ClientModelStore.prototype.addAttributeById = function (attribute) {\n            if (!attribute || this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.put(attribute.id, attribute);\n        };\n        ClientModelStore.prototype.removeAttributeById = function (attribute) {\n            if (!attribute || !this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.remove(attribute.id);\n        };\n        ClientModelStore.prototype.findAttributeById = function (id) {\n            return this.attributesPerId.get(id);\n        };\n        ClientModelStore.prototype.addAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                attributes = [];\n                this.attributesPerQualifier.put(attribute.getQualifier(), attributes);\n            }\n            if (!(attributes.indexOf(attribute) > -1)) {\n                attributes.push(attribute);\n            }\n        };\n        ClientModelStore.prototype.removeAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                return;\n            }\n            if (attributes.length > -1) {\n                attributes.splice(attributes.indexOf(attribute), 1);\n            }\n            if (attributes.length === 0) {\n                this.attributesPerQualifier.remove(attribute.getQualifier());\n            }\n        };\n        ClientModelStore.prototype.findAllAttributesByQualifier = function (qualifier) {\n            if (!qualifier || !this.attributesPerQualifier.containsKey(qualifier)) {\n                return [];\n            }\n            return this.attributesPerQualifier.get(qualifier).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.onModelStoreChange = function (eventHandler) {\n            this.modelStoreChangeBus.onEvent(eventHandler);\n        };\n        ClientModelStore.prototype.onModelStoreChangeForType = function (presentationModelType, eventHandler) {\n            this.modelStoreChangeBus.onEvent(function (pmStoreEvent) {\n                if (pmStoreEvent.clientPresentationModel.presentationModelType == presentationModelType) {\n                    eventHandler(pmStoreEvent);\n                }\n            });\n        };\n        return ClientModelStore;\n    })();\n    opendolphin.ClientModelStore = ClientModelStore;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"EmptyNotification.ts\" />\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientModelStore.ts\" />\n/// <reference path=\"ClientConnector.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"AttributeCreatedNotification.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientDolphin = (function () {\n        function ClientDolphin() {\n        }\n        ClientDolphin.prototype.setClientConnector = function (clientConnector) {\n            this.clientConnector = clientConnector;\n        };\n        ClientDolphin.prototype.getClientConnector = function () {\n            return this.clientConnector;\n        };\n        ClientDolphin.prototype.send = function (commandName, onFinished) {\n            this.clientConnector.send(new opendolphin.NamedCommand(commandName), onFinished);\n        };\n        ClientDolphin.prototype.sendEmpty = function (onFinished) {\n            this.clientConnector.send(new opendolphin.EmptyNotification(), onFinished);\n        };\n        // factory method for attributes\n        ClientDolphin.prototype.attribute = function (propertyName, qualifier, value, tag) {\n            return new opendolphin.ClientAttribute(propertyName, qualifier, value, tag);\n        };\n        // factory method for presentation models\n        ClientDolphin.prototype.presentationModel = function (id, type) {\n            var attributes = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                attributes[_i - 2] = arguments[_i];\n            }\n            var model = new opendolphin.ClientPresentationModel(id, type);\n            if (attributes && attributes.length > 0) {\n                attributes.forEach(function (attribute) {\n                    model.addAttribute(attribute);\n                });\n            }\n            this.getClientModelStore().add(model);\n            return model;\n        };\n        ClientDolphin.prototype.setClientModelStore = function (clientModelStore) {\n            this.clientModelStore = clientModelStore;\n        };\n        ClientDolphin.prototype.getClientModelStore = function () {\n            return this.clientModelStore;\n        };\n        ClientDolphin.prototype.listPresentationModelIds = function () {\n            return this.getClientModelStore().listPresentationModelIds();\n        };\n        ClientDolphin.prototype.listPresentationModels = function () {\n            return this.getClientModelStore().listPresentationModels();\n        };\n        ClientDolphin.prototype.findAllPresentationModelByType = function (presentationModelType) {\n            return this.getClientModelStore().findAllPresentationModelByType(presentationModelType);\n        };\n        ClientDolphin.prototype.getAt = function (id) {\n            return this.findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.findPresentationModelById = function (id) {\n            return this.getClientModelStore().findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.deletePresentationModel = function (modelToDelete) {\n            this.getClientModelStore().deletePresentationModel(modelToDelete, true);\n        };\n        ClientDolphin.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            this.getClientModelStore().deleteAllPresentationModelOfType(presentationModelType);\n        };\n        ClientDolphin.prototype.updatePresentationModelQualifier = function (presentationModel) {\n            var _this = this;\n            presentationModel.getAttributes().forEach(function (sourceAttribute) {\n                _this.updateAttributeQualifier(sourceAttribute);\n            });\n        };\n        ClientDolphin.prototype.updateAttributeQualifier = function (sourceAttribute) {\n            if (!sourceAttribute.getQualifier())\n                return;\n            var attributes = this.getClientModelStore().findAllAttributesByQualifier(sourceAttribute.getQualifier());\n            attributes.forEach(function (targetAttribute) {\n                if (targetAttribute.tag != sourceAttribute.tag)\n                    return; // attributes with same qualifier and tag\n                targetAttribute.setValue(sourceAttribute.getValue()); // should always have the same value\n                targetAttribute.setBaseValue(sourceAttribute.getBaseValue()); // and same base value and so dirtyness\n            });\n        };\n        ClientDolphin.prototype.tag = function (presentationModel, propertyName, value, tag) {\n            var clientAttribute = new opendolphin.ClientAttribute(propertyName, null, value, tag);\n            this.addAttributeToModel(presentationModel, clientAttribute);\n            return clientAttribute;\n        };\n        ClientDolphin.prototype.addAttributeToModel = function (presentationModel, clientAttribute) {\n            presentationModel.addAttribute(clientAttribute);\n            this.getClientModelStore().registerAttribute(clientAttribute);\n            if (!presentationModel.clientSideOnly) {\n                this.clientConnector.send(new opendolphin.AttributeCreatedNotification(presentationModel.id, clientAttribute.id, clientAttribute.propertyName, clientAttribute.getValue(), clientAttribute.getQualifier(), clientAttribute.tag), null);\n            }\n        };\n        ////// push support ///////\n        ClientDolphin.prototype.startPushListening = function (pushActionName, releaseActionName) {\n            this.clientConnector.setPushListener(new opendolphin.NamedCommand(pushActionName));\n            this.clientConnector.setReleaseCommand(new opendolphin.SignalCommand(releaseActionName));\n            this.clientConnector.setPushEnabled(true);\n            this.clientConnector.listen();\n        };\n        ClientDolphin.prototype.stopPushListening = function () {\n            this.clientConnector.setPushEnabled(false);\n        };\n        return ClientDolphin;\n    })();\n    opendolphin.ClientDolphin = ClientDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var PresentationModelResetedCommand = (function (_super) {\n        __extends(PresentationModelResetedCommand, _super);\n        function PresentationModelResetedCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'PresentationModelReseted';\n            this.className = \"org.opendolphin.core.comm.PresentationModelResetedCommand\";\n        }\n        return PresentationModelResetedCommand;\n    })(opendolphin.Command);\n    opendolphin.PresentationModelResetedCommand = PresentationModelResetedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SavedPresentationModelNotification = (function (_super) {\n        __extends(SavedPresentationModelNotification, _super);\n        function SavedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'SavedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SavedPresentationModelNotification\";\n        }\n        return SavedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.SavedPresentationModelNotification = SavedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var InitializeAttributeCommand = (function (_super) {\n        __extends(InitializeAttributeCommand, _super);\n        function InitializeAttributeCommand(pmId, pmType, propertyName, qualifier, newValue, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.pmType = pmType;\n            this.propertyName = propertyName;\n            this.qualifier = qualifier;\n            this.newValue = newValue;\n            this.tag = tag;\n            this.id = 'InitializeAttribute';\n            this.className = \"org.opendolphin.core.comm.InitializeAttributeCommand\";\n        }\n        return InitializeAttributeCommand;\n    })(opendolphin.Command);\n    opendolphin.InitializeAttributeCommand = InitializeAttributeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SwitchPresentationModelCommand = (function (_super) {\n        __extends(SwitchPresentationModelCommand, _super);\n        function SwitchPresentationModelCommand(pmId, sourcePmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.sourcePmId = sourcePmId;\n            this.id = 'SwitchPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SwitchPresentationModelCommand\";\n        }\n        return SwitchPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.SwitchPresentationModelCommand = SwitchPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeleteAllPresentationModelsOfTypeCommand = (function (_super) {\n        __extends(DeleteAllPresentationModelsOfTypeCommand, _super);\n        function DeleteAllPresentationModelsOfTypeCommand(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeleteAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeleteAllPresentationModelsOfTypeCommand\";\n        }\n        return DeleteAllPresentationModelsOfTypeCommand;\n    })(opendolphin.Command);\n    opendolphin.DeleteAllPresentationModelsOfTypeCommand = DeleteAllPresentationModelsOfTypeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletePresentationModelCommand = (function (_super) {\n        __extends(DeletePresentationModelCommand, _super);\n        function DeletePresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletePresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletePresentationModelCommand\";\n        }\n        return DeletePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.DeletePresentationModelCommand = DeletePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DataCommand = (function (_super) {\n        __extends(DataCommand, _super);\n        function DataCommand(data) {\n            _super.call(this);\n            this.data = data;\n            this.id = \"Data\";\n            this.className = \"org.opendolphin.core.comm.DataCommand\";\n        }\n        return DataCommand;\n    })(opendolphin.Command);\n    opendolphin.DataCommand = DataCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"CommandBatcher.ts\" />\n/// <reference path=\"Codec.ts\" />\n/// <reference path=\"CallNamedActionCommand.ts\" />\n/// <reference path=\"ClientDolphin.ts\" />\n/// <reference path=\"AttributeMetadataChangedCommand.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"PresentationModelResetedCommand.ts\" />\n/// <reference path=\"SavedPresentationModelNotification.ts\" />\n/// <reference path=\"InitializeAttributeCommand.ts\" />\n/// <reference path=\"SwitchPresentationModelCommand.ts\" />\n/// <reference path=\"BaseValueChangedCommand.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeletePresentationModelCommand.ts\" />\n/// <reference path=\"CreatePresentationModelCommand.ts\" />\n/// <reference path=\"DataCommand.ts\" />\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientConnector = (function () {\n        function ClientConnector(transmitter, clientDolphin, slackMS, maxBatchSize) {\n            if (slackMS === void 0) { slackMS = 0; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.commandQueue = [];\n            this.currentlySending = false;\n            this.pushEnabled = false;\n            this.waiting = false;\n            this.transmitter = transmitter;\n            this.clientDolphin = clientDolphin;\n            this.slackMS = slackMS;\n            this.codec = new opendolphin.Codec();\n            this.commandBatcher = new opendolphin.BlindCommandBatcher(true, maxBatchSize);\n        }\n        ClientConnector.prototype.setCommandBatcher = function (newBatcher) {\n            this.commandBatcher = newBatcher;\n        };\n        ClientConnector.prototype.setPushEnabled = function (enabled) {\n            this.pushEnabled = enabled;\n        };\n        ClientConnector.prototype.setPushListener = function (newListener) {\n            this.pushListener = newListener;\n        };\n        ClientConnector.prototype.setReleaseCommand = function (newCommand) {\n            this.releaseCommand = newCommand;\n        };\n        ClientConnector.prototype.send = function (command, onFinished) {\n            this.commandQueue.push({ command: command, handler: onFinished });\n            if (this.currentlySending) {\n                this.release(); // there is not point in releasing if we do not send atm\n                return;\n            }\n            this.doSendNext();\n        };\n        ClientConnector.prototype.doSendNext = function () {\n            var _this = this;\n            if (this.commandQueue.length < 1) {\n                if (this.pushEnabled) {\n                    this.enqueuePushCommand();\n                }\n                else {\n                    this.currentlySending = false;\n                    return;\n                }\n            }\n            this.currentlySending = true;\n            var cmdsAndHandlers = this.commandBatcher.batch(this.commandQueue);\n            var callback = cmdsAndHandlers[cmdsAndHandlers.length - 1].handler;\n            var commands = cmdsAndHandlers.map(function (cah) { return cah.command; });\n            this.transmitter.transmit(commands, function (response) {\n                //console.log(\"server response: [\" + response.map(it => it.id).join(\", \") + \"] \");\n                var touchedPMs = [];\n                response.forEach(function (command) {\n                    var touched = _this.handle(command);\n                    if (touched)\n                        touchedPMs.push(touched);\n                });\n                if (callback) {\n                    callback.onFinished(touchedPMs); // todo: make them unique?\n                }\n                // recursive call: fetch the next in line but allow a bit of slack such that\n                // document events can fire, rendering is done and commands can batch up\n                setTimeout(function () { return _this.doSendNext(); }, _this.slackMS);\n            });\n        };\n        ClientConnector.prototype.handle = function (command) {\n            if (command.id == \"Data\") {\n                return this.handleDataCommand(command);\n            }\n            else if (command.id == \"DeletePresentationModel\") {\n                return this.handleDeletePresentationModelCommand(command);\n            }\n            else if (command.id == \"DeleteAllPresentationModelsOfType\") {\n                return this.handleDeleteAllPresentationModelOfTypeCommand(command);\n            }\n            else if (command.id == \"CreatePresentationModel\") {\n                return this.handleCreatePresentationModelCommand(command);\n            }\n            else if (command.id == \"ValueChanged\") {\n                return this.handleValueChangedCommand(command);\n            }\n            else if (command.id == \"BaseValueChanged\") {\n                return this.handleBaseValueChangedCommand(command);\n            }\n            else if (command.id == \"SwitchPresentationModel\") {\n                return this.handleSwitchPresentationModelCommand(command);\n            }\n            else if (command.id == \"InitializeAttribute\") {\n                return this.handleInitializeAttributeCommand(command);\n            }\n            else if (command.id == \"SavedPresentationModel\") {\n                return this.handleSavedPresentationModelNotification(command);\n            }\n            else if (command.id == \"PresentationModelReseted\") {\n                return this.handlePresentationModelResetedCommand(command);\n            }\n            else if (command.id == \"AttributeMetadataChanged\") {\n                return this.handleAttributeMetadataChangedCommand(command);\n            }\n            else if (command.id == \"CallNamedAction\") {\n                return this.handleCallNamedActionCommand(command);\n            }\n            else {\n                console.log(\"Cannot handle, unknown command \" + command);\n            }\n            return null;\n        };\n        ClientConnector.prototype.handleDataCommand = function (serverCommand) {\n            return serverCommand.data;\n        };\n        ClientConnector.prototype.handleDeletePresentationModelCommand = function (serverCommand) {\n            var model = this.clientDolphin.findPresentationModelById(serverCommand.pmId);\n            if (!model)\n                return null;\n            this.clientDolphin.getClientModelStore().deletePresentationModel(model, true);\n            return model;\n        };\n        ClientConnector.prototype.handleDeleteAllPresentationModelOfTypeCommand = function (serverCommand) {\n            this.clientDolphin.deleteAllPresentationModelOfType(serverCommand.pmType);\n            return null;\n        };\n        ClientConnector.prototype.handleCreatePresentationModelCommand = function (serverCommand) {\n            var _this = this;\n            if (this.clientDolphin.getClientModelStore().containsPresentationModel(serverCommand.pmId)) {\n                throw new Error(\"There already is a presentation model with id \" + serverCommand.pmId + \"  known to the client.\");\n            }\n            var attributes = [];\n            serverCommand.attributes.forEach(function (attr) {\n                var clientAttribute = _this.clientDolphin.attribute(attr.propertyName, attr.qualifier, attr.value, attr.tag ? attr.tag : opendolphin.Tag.value());\n                clientAttribute.setBaseValue(attr.baseValue);\n                if (attr.id && attr.id.match(\".*S$\")) {\n                    clientAttribute.id = attr.id;\n                }\n                attributes.push(clientAttribute);\n            });\n            var clientPm = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n            clientPm.addAttributes(attributes);\n            if (serverCommand.clientSideOnly) {\n                clientPm.clientSideOnly = true;\n            }\n            this.clientDolphin.getClientModelStore().add(clientPm);\n            this.clientDolphin.updatePresentationModelQualifier(clientPm);\n            clientPm.updateAttributeDirtyness();\n            clientPm.updateDirty();\n            return clientPm;\n        };\n        ClientConnector.prototype.handleValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot update old value \" + serverCommand.oldValue + \" to new value \" + serverCommand.newValue);\n                return null;\n            }\n            if (clientAttribute.getValue() == serverCommand.newValue) {\n                //console.log(\"nothing to do. new value == old value\");\n                return null;\n            }\n            // Below was the code that would enforce that value changes only appear when the proper oldValue is given.\n            // While that seemed appropriate at first, there are actually valid command sequences where the oldValue is not properly set.\n            // We leave the commented code in the codebase to allow for logging/debugging such cases.\n            //            if(clientAttribute.getValue() != serverCommand.oldValue) {\n            //                console.log(\"attribute with id \"+serverCommand.attributeId+\" and value \" + clientAttribute.getValue() +\n            //                            \" was set to value \" + serverCommand.newValue + \" even though the change was based on an outdated old value of \" + serverCommand.oldValue);\n            //            }\n            clientAttribute.setValue(serverCommand.newValue);\n            return null;\n        };\n        ClientConnector.prototype.handleBaseValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot set base value.\");\n                return null;\n            }\n            clientAttribute.rebase();\n            return null;\n        };\n        ClientConnector.prototype.handleSwitchPresentationModelCommand = function (serverCommand) {\n            var switchPm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!switchPm) {\n                console.log(\"switch model with id \" + serverCommand.pmId + \" not found, cannot switch.\");\n                return null;\n            }\n            var sourcePm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.sourcePmId);\n            if (!sourcePm) {\n                console.log(\"source model with id \" + serverCommand.sourcePmId + \" not found, cannot switch.\");\n                return null;\n            }\n            switchPm.syncWith(sourcePm);\n            return switchPm;\n        };\n        ClientConnector.prototype.handleInitializeAttributeCommand = function (serverCommand) {\n            var attribute = new opendolphin.ClientAttribute(serverCommand.propertyName, serverCommand.qualifier, serverCommand.newValue, serverCommand.tag);\n            if (serverCommand.qualifier) {\n                var attributesCopy = this.clientDolphin.getClientModelStore().findAllAttributesByQualifier(serverCommand.qualifier);\n                if (attributesCopy) {\n                    if (!serverCommand.newValue) {\n                        var attr = attributesCopy.shift();\n                        if (attr) {\n                            attribute.setValue(attr.getValue());\n                        }\n                    }\n                    else {\n                        attributesCopy.forEach(function (attr) {\n                            attr.setValue(attribute.getValue());\n                        });\n                    }\n                }\n            }\n            var presentationModel;\n            if (serverCommand.pmId) {\n                presentationModel = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            }\n            if (!presentationModel) {\n                presentationModel = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n                this.clientDolphin.getClientModelStore().add(presentationModel);\n            }\n            this.clientDolphin.addAttributeToModel(presentationModel, attribute);\n            this.clientDolphin.updatePresentationModelQualifier(presentationModel);\n            return presentationModel;\n        };\n        ClientConnector.prototype.handleSavedPresentationModelNotification = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot rebase.\");\n                return null;\n            }\n            model.rebase();\n            return model;\n        };\n        ClientConnector.prototype.handlePresentationModelResetedCommand = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot reset.\");\n                return null;\n            }\n            model.reset();\n            return model;\n        };\n        ClientConnector.prototype.handleAttributeMetadataChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute)\n                return null;\n            clientAttribute[serverCommand.metadataName] = serverCommand.value;\n            return null;\n        };\n        ClientConnector.prototype.handleCallNamedActionCommand = function (serverCommand) {\n            this.clientDolphin.send(serverCommand.actionName, null);\n            return null;\n        };\n        ///////////// push support ///////////////\n        ClientConnector.prototype.listen = function () {\n            if (!this.pushEnabled)\n                return;\n            if (this.waiting)\n                return;\n            // todo: how to issue a warning if no pushListener is set?\n            if (!this.currentlySending) {\n                this.doSendNext();\n            }\n        };\n        ClientConnector.prototype.enqueuePushCommand = function () {\n            var me = this;\n            this.waiting = true;\n            this.commandQueue.push({\n                command: this.pushListener,\n                handler: {\n                    onFinished: function (models) { me.waiting = false; },\n                    onFinishedData: null\n                }\n            });\n        };\n        ClientConnector.prototype.release = function () {\n            if (!this.waiting)\n                return;\n            this.waiting = false;\n            // todo: how to issue a warning if no releaseCommand is set?\n            this.transmitter.signal(this.releaseCommand);\n        };\n        return ClientConnector;\n    })();\n    opendolphin.ClientConnector = ClientConnector;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"DolphinBuilder.ts\"/>\n/**\n * JS-friendly facade to avoid too many dependencies in plain JS code.\n * The name of this file is also used for the initial lookup of the\n * one javascript file that contains all the dolphin code.\n * Changing the name requires the build support and all users\n * to be updated as well.\n * Dierk Koenig\n */\nvar opendolphin;\n(function (opendolphin) {\n    // factory method for the initialized dolphin\n    // Deprecated ! Use 'makeDolphin() instead\n    function dolphin(url, reset, slackMS) {\n        if (slackMS === void 0) { slackMS = 300; }\n        return makeDolphin().url(url).reset(reset).slackMS(slackMS).build();\n    }\n    opendolphin.dolphin = dolphin;\n    // factory method to build an initialized dolphin\n    function makeDolphin() {\n        return new opendolphin.DolphinBuilder();\n    }\n    opendolphin.makeDolphin = makeDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /**\n     * A transmitter that is not transmitting at all.\n     * It may serve as a stand-in when no real transmitter is needed.\n     */\n    var NoTransmitter = (function () {\n        function NoTransmitter() {\n        }\n        NoTransmitter.prototype.transmit = function (commands, onDone) {\n            // do nothing special\n            onDone([]);\n        };\n        NoTransmitter.prototype.signal = function (command) {\n            // do nothing\n        };\n        return NoTransmitter;\n    })();\n    opendolphin.NoTransmitter = NoTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"Codec.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var HttpTransmitter = (function () {\n        function HttpTransmitter(url, reset, charset, errorHandler, supportCORS) {\n            if (reset === void 0) { reset = true; }\n            if (charset === void 0) { charset = \"UTF-8\"; }\n            if (errorHandler === void 0) { errorHandler = null; }\n            if (supportCORS === void 0) { supportCORS = false; }\n            this.url = url;\n            this.charset = charset;\n            this.HttpCodes = {\n                finished: 4,\n                success: 200\n            };\n            this.errorHandler = errorHandler;\n            this.supportCORS = supportCORS;\n            this.http = new XMLHttpRequest();\n            this.sig = new XMLHttpRequest();\n            if (this.supportCORS) {\n                if (\"withCredentials\" in this.http) {\n                    this.http.withCredentials = true; // NOTE: doing this for non CORS requests has no impact\n                    this.sig.withCredentials = true;\n                }\n            }\n            this.codec = new opendolphin.Codec();\n            if (reset) {\n                this.invalidate();\n            }\n        }\n        HttpTransmitter.prototype.transmit = function (commands, onDone) {\n            var _this = this;\n            this.http.onerror = function (evt) {\n                _this.handleError('onerror', \"\");\n                onDone([]);\n            };\n            this.http.onreadystatechange = function (evt) {\n                if (_this.http.readyState == _this.HttpCodes.finished) {\n                    if (_this.http.status == _this.HttpCodes.success) {\n                        var responseText = _this.http.responseText;\n                        if (responseText.trim().length > 0) {\n                            try {\n                                var responseCommands = _this.codec.decode(responseText);\n                                onDone(responseCommands);\n                            }\n                            catch (err) {\n                                console.log(\"Error occurred parsing responseText: \", err);\n                                console.log(\"Incorrect responseText: \", responseText);\n                                _this.handleError('application', \"HttpTransmitter: Incorrect responseText: \" + responseText);\n                                onDone([]);\n                            }\n                        }\n                        else {\n                            _this.handleError('application', \"HttpTransmitter: empty responseText\");\n                            onDone([]);\n                        }\n                    }\n                    else {\n                        _this.handleError('application', \"HttpTransmitter: HTTP Status != 200\");\n                        onDone([]);\n                    }\n                }\n            };\n            this.http.open('POST', this.url, true);\n            if (\"overrideMimeType\" in this.http) {\n                this.http.overrideMimeType(\"application/json; charset=\" + this.charset); // todo make injectable\n            }\n            this.http.send(this.codec.encode(commands));\n        };\n        HttpTransmitter.prototype.handleError = function (kind, message) {\n            var errorEvent = { kind: kind, url: this.url, httpStatus: this.http.status, message: message };\n            if (this.errorHandler) {\n                this.errorHandler(errorEvent);\n            }\n            else {\n                console.log(\"Error occurred: \", errorEvent);\n            }\n        };\n        HttpTransmitter.prototype.signal = function (command) {\n            this.sig.open('POST', this.url, true);\n            this.sig.send(this.codec.encode([command]));\n        };\n        HttpTransmitter.prototype.invalidate = function () {\n            this.http.open('POST', this.url + 'invalidate?', false);\n            this.http.send();\n        };\n        return HttpTransmitter;\n    })();\n    opendolphin.HttpTransmitter = HttpTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"OpenDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ClientModelStore.ts\"/>\n/// <reference path=\"NoTransmitter.ts\"/>\n/// <reference path=\"HttpTransmitter.ts\"/>\n/// <reference path=\"ClientAttribute.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var DolphinBuilder = (function () {\n        function DolphinBuilder() {\n            this.reset_ = false;\n            this.slackMS_ = 300;\n            this.maxBatchSize_ = 50;\n            this.supportCORS_ = false;\n        }\n        DolphinBuilder.prototype.url = function (url) {\n            this.url_ = url;\n            return this;\n        };\n        DolphinBuilder.prototype.reset = function (reset) {\n            this.reset_ = reset;\n            return this;\n        };\n        DolphinBuilder.prototype.slackMS = function (slackMS) {\n            this.slackMS_ = slackMS;\n            return this;\n        };\n        DolphinBuilder.prototype.maxBatchSize = function (maxBatchSize) {\n            this.maxBatchSize_ = maxBatchSize;\n            return this;\n        };\n        DolphinBuilder.prototype.supportCORS = function (supportCORS) {\n            this.supportCORS_ = supportCORS;\n            return this;\n        };\n        DolphinBuilder.prototype.errorHandler = function (errorHandler) {\n            this.errorHandler_ = errorHandler;\n            return this;\n        };\n        DolphinBuilder.prototype.build = function () {\n            console.log(\"OpenDolphin js found\");\n            var clientDolphin = new opendolphin.ClientDolphin();\n            var transmitter;\n            if (this.url_ != null && this.url_.length > 0) {\n                transmitter = new opendolphin.HttpTransmitter(this.url_, this.reset_, \"UTF-8\", this.errorHandler_, this.supportCORS_);\n            }\n            else {\n                transmitter = new opendolphin.NoTransmitter();\n            }\n            clientDolphin.setClientConnector(new opendolphin.ClientConnector(transmitter, clientDolphin, this.slackMS_, this.maxBatchSize_));\n            clientDolphin.setClientModelStore(new opendolphin.ClientModelStore(clientDolphin));\n            console.log(\"ClientDolphin initialized\");\n            return clientDolphin;\n        };\n        return DolphinBuilder;\n    })();\n    opendolphin.DolphinBuilder = DolphinBuilder;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var GetPresentationModelCommand = (function (_super) {\n        __extends(GetPresentationModelCommand, _super);\n        function GetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'GetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.GetPresentationModelCommand\";\n        }\n        return GetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.GetPresentationModelCommand = GetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ResetPresentationModelCommand = (function (_super) {\n        __extends(ResetPresentationModelCommand, _super);\n        function ResetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'ResetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.ResetPresentationModelCommand\";\n        }\n        return ResetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.ResetPresentationModelCommand = ResetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n\nmodule.exports = opendolphin;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Map = require('../bower_components/core.js/library/fn/map');\nvar utils = require('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\nfunction BeanManager(classRepository) {\n    checkMethod('BeanManager(classRepository)');\n    checkParam(classRepository, 'classRepository');\n\n    this.classRepository = classRepository;\n    this.addedHandlers = new Map();\n    this.removedHandlers = new Map();\n    this.updatedHandlers = new Map();\n    this.arrayUpdatedHandlers = new Map();\n    this.allAddedHandlers = [];\n    this.allRemovedHandlers = [];\n    this.allUpdatedHandlers = [];\n    this.allArrayUpdatedHandlers = [];\n\n    var self = this;\n    this.classRepository.onBeanAdded(function(type, bean) {\n        var handlerList = self.addedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanAdded-handler for type', type, e);\n                }\n            });\n        }\n        self.allAddedHandlers.forEach(function (handler) {\n            try {\n                handler(bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanAdded-handler', e);\n            }\n        });\n    });\n    this.classRepository.onBeanRemoved(function(type, bean) {\n        var handlerList = self.removedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function(handler) {\n                try {\n                    handler(bean);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanRemoved-handler for type', type, e);\n                }\n            });\n        }\n        self.allRemovedHandlers.forEach(function(handler) {\n            try {\n                handler(bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanRemoved-handler', e);\n            }\n        });\n    });\n    this.classRepository.onBeanUpdate(function(type, bean, propertyName, newValue, oldValue) {\n        var handlerList = self.updatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean, propertyName, newValue, oldValue);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanUpdate-handler for type', type, e);\n                }\n            });\n        }\n        self.allUpdatedHandlers.forEach(function (handler) {\n            try {\n                handler(bean, propertyName, newValue, oldValue);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanUpdate-handler', e);\n            }\n        });\n    });\n    this.classRepository.onArrayUpdate(function(type, bean, propertyName, index, count, newElement) {\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean, propertyName, index, count, newElement);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onArrayUpdate-handler for type', type, e);\n                }\n            });\n        }\n        self.allArrayUpdatedHandlers.forEach(function (handler) {\n            try {\n                handler(bean, propertyName, index, count, newElement);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onArrayUpdate-handler', e);\n            }\n        });\n    });\n\n}\n\n\nBeanManager.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    checkMethod('BeanManager.notifyBeanChange(bean, propertyName, newValue)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n\n    return this.classRepository.notifyBeanChange(bean, propertyName, newValue);\n};\n\n\nBeanManager.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    checkMethod('BeanManager.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n    checkParam(index, 'index');\n    checkParam(count, 'count');\n    checkParam(removedElements, 'removedElements');\n\n    this.classRepository.notifyArrayChange(bean, propertyName, index, count, removedElements);\n};\n\n\nBeanManager.prototype.isManaged = function(bean) {\n    checkMethod('BeanManager.isManaged(bean)');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.isManaged() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.create = function(type) {\n    checkMethod('BeanManager.create(type)');\n    checkParam(type, 'type');\n\n    // TODO: Implement dolphin.create() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.add = function(type, bean) {\n    checkMethod('BeanManager.add(type, bean)');\n    checkParam(type, 'type');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.add() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.addAll = function(type, collection) {\n    checkMethod('BeanManager.addAll(type, collection)');\n    checkParam(type, 'type');\n    checkParam(collection, 'collection');\n\n    // TODO: Implement dolphin.addAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.remove = function(bean) {\n    checkMethod('BeanManager.remove(bean)');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.remove() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeAll = function(collection) {\n    checkMethod('BeanManager.removeAll(collection)');\n    checkParam(collection, 'collection');\n\n    // TODO: Implement dolphin.removeAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeIf = function(predicate) {\n    checkMethod('BeanManager.removeIf(predicate)');\n    checkParam(predicate, 'predicate');\n\n    // TODO: Implement dolphin.removeIf() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.onAdded = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onAdded(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allAddedHandlers = self.allAddedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allAddedHandlers = self.allAddedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onAdded(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.addedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.addedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.addedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.addedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onRemoved = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onRemoved(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allRemovedHandlers = self.allRemovedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allRemovedHandlers = self.allRemovedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onRemoved(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.removedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.removedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.removedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onBeanUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onBeanUpdate(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allUpdatedHandlers = self.allUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allUpdatedHandlers = self.allUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onBeanUpdate(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.updatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.updatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.updatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.updatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onArrayUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onArrayUpdate(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onArrayUpdate(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.arrayUpdatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.arrayUpdatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.arrayUpdatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\n\nexports.BeanManager = BeanManager;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Platform, console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Map = require('../bower_components/core.js/library/fn/map');\nvar opendolphin = require('../libsrc/opendolphin.js');\n\nvar utils = require('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nvar blocked = null;\n\nfunction fromDolphin(classRepository, type, value) {\n    return ! exists(value)? null\n        : type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, value) {\n    return typeof value === 'object' && value !== null? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction sendListAdd(dolphin, modelId, propertyName, pos, element) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('pos', null, pos),\n        dolphin.attribute('element', null, element)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_ADD @@@'].concat(attributes));\n}\n\nfunction sendListRemove(dolphin, modelId, propertyName, from, to) {\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('from', null, from),\n        dolphin.attribute('to', null, to)\n    ];\n    dolphin.presentationModel.apply(dolphin, [null, '@@@ LIST_DEL @@@'].concat(attributes));\n}\n\nfunction validateList(classRepository, type, bean, propertyName) {\n    var list = bean[propertyName];\n    if (!exists(list)) {\n        classRepository.propertyUpdateHandlers.forEach(function(handler) {\n            try {\n                handler(type, bean, propertyName, [], undefined);\n            } catch(e) {\n                console.warn('An exception occurred while calling an onBeanUpdate-handler', e);\n            }\n        });\n    }\n}\n\nfunction block(bean, propertyName) {\n    if (exists(blocked)) {\n        throw new Error('Trying to create a block while another block exists');\n    }\n    blocked = {\n        bean: bean,\n        propertyName: propertyName\n    };\n}\n\nfunction isBlocked(bean, propertyName) {\n    return exists(blocked) && blocked.bean === bean && blocked.propertyName === propertyName;\n}\n\nfunction unblock() {\n    blocked = null;\n}\n\n\nfunction ClassRepository(dolphin) {\n    checkMethod('ClassRepository(dolphin)');\n    checkParam(dolphin, 'dolphin');\n\n    this.dolphin = dolphin;\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n    this.beanAddedHandlers = [];\n    this.beanRemovedHandlers = [];\n    this.propertyUpdateHandlers = [];\n    this.arrayUpdateHandlers = [];\n}\n\n\nClassRepository.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    checkMethod('ClassRepository.notifyBeanChange(bean, propertyName, newValue)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n\n    var modelId = this.beanToDolphin.get(bean);\n    if (exists(modelId)) {\n        var model = this.dolphin.findPresentationModelById(modelId);\n        if (exists(model)) {\n            var classInfo = this.classes.get(model.presentationModelType);\n            var type = classInfo[propertyName];\n            var attribute = model.findAttributeByPropertyName(propertyName);\n            if (exists(type) && exists(attribute)) {\n                var oldValue = attribute.getValue();\n                attribute.setValue(toDolphin(this, newValue));\n                return fromDolphin(this, type, oldValue);\n            }\n        }\n    }\n};\n\n\nClassRepository.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    checkMethod('ClassRepository.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n    checkParam(index, 'index');\n    checkParam(count, 'count');\n    checkParam(removedElements, 'removedElements');\n\n    if (isBlocked(bean, propertyName)) {\n        return;\n    }\n    var modelId = this.beanToDolphin.get(bean);\n    var array = bean[propertyName];\n    if (exists(modelId) && exists(array)) {\n        if (Array.isArray(removedElements) && removedElements.length > 0) {\n            sendListRemove(this.dolphin, modelId, propertyName, index, index + removedElements.length);\n        }\n        for (var i = index; i < index + count; i++) {\n            sendListAdd(this.dolphin, modelId, propertyName, i, toDolphin(this, array[i]));\n        }\n    }\n};\n\n\nClassRepository.prototype.onBeanAdded = function(handler) {\n    checkMethod('ClassRepository.onBeanAdded(handler)');\n    checkParam(handler, 'handler');\n    this.beanAddedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanRemoved = function(handler) {\n    checkMethod('ClassRepository.onBeanRemoved(handler)');\n    checkParam(handler, 'handler');\n    this.beanRemovedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanUpdate = function(handler) {\n    checkMethod('ClassRepository.onBeanUpdate(handler)');\n    checkParam(handler, 'handler');\n    this.propertyUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onArrayUpdate = function(handler) {\n    checkMethod('ClassRepository.onArrayUpdate(handler)');\n    checkParam(handler, 'handler');\n    this.arrayUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.registerClass = function (model) {\n    checkMethod('ClassRepository.registerClass(model)');\n    checkParam(model, 'model');\n\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.filter(function(attribute) {\n        return attribute.propertyName.search(/^@@@ /) < 0;\n    }).forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    checkMethod('ClassRepository.unregisterClass(model)');\n    checkParam(model, 'model');\n\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    checkMethod('ClassRepository.load(model)');\n    checkParam(model, 'model');\n\n    var self = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return (attribute.tag === opendolphin.Tag.value()) && (attribute.propertyName.search(/^@@@ /) < 0);\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                var oldValue = fromDolphin(self, classInfo[attribute.propertyName], event.oldValue);\n                var newValue = fromDolphin(self, classInfo[attribute.propertyName], event.newValue);\n                self.propertyUpdateHandlers.forEach(function(handler) {\n                    try {\n                        handler(model.presentationModelType, bean, attribute.propertyName, newValue, oldValue);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onBeanUpdate-handler', e);\n                    }\n                });\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    this.beanAddedHandlers.forEach(function(handler) {\n        try {\n            handler(model.presentationModelType, bean);\n        } catch(e) {\n            console.warn('An exception occurred while calling an onBeanAdded-handler', e);\n        }\n    });\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    checkMethod('ClassRepository.unload(model)');\n    checkParam(model, 'model');\n\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    if (exists(bean)) {\n        this.beanRemovedHandlers.forEach(function(handler) {\n            try {\n                handler(model.presentationModelType, bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling an onBeanRemoved-handler', e);\n            }\n        });\n    }\n    return bean;\n};\n\n\nClassRepository.prototype.addListEntry = function(model) {\n    checkMethod('ClassRepository.addListEntry(model)');\n    checkParam(model, 'model');\n\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    try {\n                        handler(type, bean, attribute.value, pos.value, 0, entry);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onArrayUpdate-handler', e);\n                    }\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.delListEntry = function(model) {\n    checkMethod('ClassRepository.delListEntry(model)');\n    checkParam(model, 'model');\n\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to)) {\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean)) {\n            var type = model.presentationModelType;\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    try {\n                        handler(type, bean, attribute.value, from.value, to.value - from.value);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onArrayUpdate-handler', e);\n                    }\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.setListEntry = function(model) {\n    checkMethod('ClassRepository.setListEntry(model)');\n    checkParam(model, 'model');\n\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var pos = model.findAttributeByPropertyName('pos');\n    var element = model.findAttributeByPropertyName('element');\n\n    if (exists(source) && exists(attribute) && exists(pos) && exists(element)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    try {\n                        handler(type, bean, attribute.value, pos.value, 1, entry);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onArrayUpdate-handler', e);\n                    }\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    }else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\nClassRepository.prototype.mapDolphinToBean = function(value, type) {\n    return fromDolphin(this, type, value);\n};\n\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar utils = require('./utils.js');\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar INIT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'initClientContext';\nvar DISCONNECT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'disconnectClientContext';\n\nfunction ClientContext(dolphin, beanManager, controllerManager, connector) {\n    checkMethod('ClientContext(dolphin, beanManager, controllerManager, connector)');\n    checkParam(dolphin, 'dolphin');\n    checkParam(beanManager, 'beanManager');\n    checkParam(controllerManager, 'controllerManager');\n    checkParam(connector, 'connector');\n\n    this.dolphin = dolphin;\n    this.beanManager = beanManager;\n    this._controllerManager = controllerManager;\n    this._connector = connector;\n\n    this._connector.invoke(INIT_COMMAND_NAME);\n}\n\n\nClientContext.prototype.createController = function(name) {\n    checkMethod('ClientContext.createController(name)');\n    checkParam(name, 'name');\n\n    return this._controllerManager.createController(name);\n};\n\n\nClientContext.prototype.disconnect = function() {\n    // TODO: Implement ClientContext.disconnect [DP-46]\n    var self = this;\n    this.dolphin.stopPushListening();\n    this._controllerManager.destroy().then(function() {\n        self._connector.invoke(DISCONNECT_COMMAND_NAME);\n        self.dolphin = null;\n        self.beanManager = null;\n        self._controllerManager = null;\n        self._connector = null;\n    });\n};\n\n\nexports.ClientContext = ClientContext;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Promise = require('../bower_components/core.js/library/fn/promise');\nvar opendolphin = require('../libsrc/opendolphin.js');\nvar utils = require('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar POLL_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'longPoll';\nvar RELEASE_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'release';\n\nvar DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nvar ACTION_CALL_BEAN = '@@@ CONTROLLER_ACTION_CALL_BEAN @@@';\nvar HIGHLANDER_BEAN = '@@@ HIGHLANDER_BEAN @@@';\nvar DOLPHIN_LIST_ADD = '@@@ LIST_ADD @@@';\nvar DOLPHIN_LIST_DEL = '@@@ LIST_DEL @@@';\nvar DOLPHIN_LIST_SET = '@@@ LIST_SET @@@';\nvar SOURCE_SYSTEM = '@@@ SOURCE_SYSTEM @@@';\nvar SOURCE_SYSTEM_CLIENT = 'client';\nvar SOURCE_SYSTEM_SERVER = 'server';\n\n\n\nvar initializer;\n\nfunction Connector(url, dolphin, classRepository, config) {\n    checkMethod('Connector(url, dolphin, classRepository, config)');\n    checkParam(url, 'url');\n    checkParam(dolphin, 'dolphin');\n    checkParam(classRepository, 'classRepository');\n\n    var self = this;\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.highlanderPMResolver = function() {};\n    this.highlanderPMPromise = new Promise(function(resolve) {\n        self.highlanderPMResolver = resolve;\n    });\n\n    dolphin.getClientModelStore().onModelStoreChange(function (event) {\n        var model = event.clientPresentationModel;\n        var sourceSystem = model.findAttributeByPropertyName(SOURCE_SYSTEM);\n        if (exists(sourceSystem) && sourceSystem.value === SOURCE_SYSTEM_SERVER) {\n            if (event.eventType === opendolphin.Type.ADDED) {\n                self.onModelAdded(model);\n            } else if (event.eventType === opendolphin.Type.REMOVED) {\n                self.onModelRemoved(model);\n            }\n        }\n    });\n\n    if (!exists(config) || !exists(config.serverPush) || config.serverPush === true) {\n        setTimeout(function() {\n            dolphin.startPushListening(POLL_COMMAND_NAME, RELEASE_COMMAND_NAME);\n        }, 500);\n    }\n\n    initializer = new Promise(function(resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.withCredentials = true;\n\n        req.onload = function() {\n            if (req.status === 200) {\n                resolve();\n            }\n            else {\n                reject(Error(req.statusText));\n            }\n        };\n\n        req.onerror = function() {\n            reject(Error(\"Network Error\"));\n        };\n\n        req.open('POST', url + 'invalidate?');\n        req.send();\n    });\n}\n\n\nConnector.prototype.onModelAdded = function(model) {\n    checkMethod('Connector.onModelAdded(model)');\n    checkParam(model, 'model');\n\n    var type = model.presentationModelType;\n    switch (type) {\n        case ACTION_CALL_BEAN:\n            // ignore\n            break;\n        case DOLPHIN_BEAN:\n            this.classRepository.registerClass(model);\n            break;\n        case HIGHLANDER_BEAN:\n            this.highlanderPMResolver(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n            this.classRepository.addListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_DEL:\n            this.classRepository.delListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        case DOLPHIN_LIST_SET:\n            this.classRepository.setListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        default:\n            this.classRepository.load(model);\n            break;\n    }\n};\n\n\nConnector.prototype.onModelRemoved = function(model) {\n    checkMethod('Connector.onModelRemoved(model)');\n    checkParam(model, 'model');\n\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            this.classRepository.unregisterClass(model);\n            break;\n        case DOLPHIN_LIST_ADD:\n        case DOLPHIN_LIST_DEL:\n        case DOLPHIN_LIST_SET:\n            // do nothing\n            break;\n        default:\n            this.classRepository.unload(model);\n            break;\n    }\n};\n\n\nConnector.prototype.invoke = function(command) {\n    checkMethod('Connector.invoke(command)');\n    checkParam(command, 'command');\n\n    var dolphin = this.dolphin;\n    return new Promise(function(resolve) {\n        //initializer.then(function () {\n            dolphin.send(command, {\n                onFinished: function() {\n                    resolve();\n                }\n            });\n        //});\n    });\n};\n\n\nConnector.prototype.getHighlanderPM = function() {\n    return this.highlanderPMPromise;\n};\n\n\n\nexports.Connector = Connector;\nexports.SOURCE_SYSTEM = SOURCE_SYSTEM;\nexports.SOURCE_SYSTEM_CLIENT = SOURCE_SYSTEM_CLIENT;\nexports.SOURCE_SYSTEM_SERVER = SOURCE_SYSTEM_SERVER;\nexports.ACTION_CALL_BEAN = ACTION_CALL_BEAN;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Promise = require('../bower_components/core.js/library/fn/promise');\nvar Set = require('../bower_components/core.js/library/fn/set');\nvar utils = require('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar ControllerProxy = require('./controllerproxy.js').ControllerProxy;\n\nvar DOLPHIN_BEAN_TYPE = require('./classrepo.js').DOLPHIN_BEAN;\n\nvar SOURCE_SYSTEM = require('./connector.js').SOURCE_SYSTEM;\nvar SOURCE_SYSTEM_CLIENT = require('./connector.js').SOURCE_SYSTEM_CLIENT;\nvar ACTION_CALL_BEAN = require('./connector.js').ACTION_CALL_BEAN;\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar REGISTER_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'registerController';\nvar CALL_CONTROLLER_ACTION_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'callControllerAction';\nvar DESTROY_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'destroyController';\n\nvar CONTROLLER_NAME = 'controllerName';\nvar CONTROLLER_ID = 'controllerId';\nvar MODEL = 'model';\nvar ACTION_NAME = 'actionName';\nvar ERROR_CODE = 'errorCode';\nvar PARAM_PREFIX = '_';\n\n\nfunction ControllerManager(dolphin, classRepository, connector) {\n    checkMethod('ControllerManager(dolphin, classRepository, connector)');\n    checkParam(dolphin, 'dolphin');\n    checkParam(classRepository, 'classRepository');\n    checkParam(connector, 'connector');\n\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.connector = connector;\n    this.controllers = new Set();\n}\n\n\nControllerManager.prototype.createController = function(name) {\n    checkMethod('ControllerManager.createController(name)');\n    checkParam(name, 'name');\n\n    var self = this;\n    var controllerId, modelId, model, controller;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_NAME).setValue(name);\n            self.connector.invoke(REGISTER_CONTROLLER_COMMAND_NAME).then(function() {\n                controllerId = highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).getValue();\n                modelId = highlanderPM.findAttributeByPropertyName(MODEL).getValue();\n                model = self.classRepository.mapDolphinToBean(modelId, DOLPHIN_BEAN_TYPE);\n                controller = new ControllerProxy(controllerId, model, self);\n                self.controllers.add(controller);\n                resolve(controller);\n            });\n        });\n    });\n};\n\n\nControllerManager.prototype.invokeAction = function(controllerId, actionName, params) {\n    checkMethod('ControllerManager.invokeAction(controllerId, actionName, params)');\n    checkParam(controllerId, 'controllerId');\n    checkParam(actionName, 'actionName');\n\n    var self = this;\n    return new Promise(function(resolve, reject) {\n\n        var attributes = [\n            self.dolphin.attribute(SOURCE_SYSTEM, null, SOURCE_SYSTEM_CLIENT),\n            self.dolphin.attribute(CONTROLLER_ID, null, controllerId),\n            self.dolphin.attribute(ACTION_NAME, null, actionName),\n            self.dolphin.attribute(ERROR_CODE)\n        ];\n\n        if (exists(params)) {\n            for (var prop in params) {\n                if (params.hasOwnProperty(prop)) {\n                    var param = self.classRepository.mapParamToDolphin(params[prop]);\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.value, 'VALUE'));\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.type, 'VALUE_TYPE'));\n                }\n            }\n        }\n\n        var pm = self.dolphin.presentationModel.apply(self.dolphin, [null, ACTION_CALL_BEAN].concat(attributes));\n\n        self.connector.invoke(CALL_CONTROLLER_ACTION_COMMAND_NAME, params).then(function() {\n            var isError = pm.findAttributeByPropertyName(ERROR_CODE).getValue();\n            if (isError) {\n                reject(new Error(\"ControllerAction caused an error\"));\n            } else {\n                resolve();\n            }\n            self.dolphin.deletePresentationModel(pm);\n        });\n    });\n};\n\n\nControllerManager.prototype.destroyController = function(controller) {\n    checkMethod('ControllerManager.destroyController(controller)');\n    checkParam(controller, 'controller');\n\n    var self = this;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            self.controllers.delete(controller);\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).setValue(controller.controllerId);\n            self.connector.invoke(DESTROY_CONTROLLER_COMMAND_NAME).then(resolve);\n        });\n    });\n};\n\n\nControllerManager.prototype.destroy = function() {\n    var controllersCopy = this.controllers;\n    var promises = [];\n    this.controllers = new Set();\n    controllersCopy.forEach(function (controller) {\n        try {\n            promises.push(controller.destroy());\n        } catch (e) {\n            // ignore\n        }\n    });\n    return Promise.all(promises);\n};\n\n\n\nexports.ControllerManager = ControllerManager;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Set = require('../bower_components/core.js/library/fn/set');\nvar utils = require('./utils.js');\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\n\nfunction ControllerProxy(controllerId, model, manager) {\n    checkMethod('ControllerProxy(controllerId, model, manager)');\n    checkParam(controllerId, 'controllerId');\n    checkParam(model, 'model');\n    checkParam(manager, 'manager');\n\n    this.controllerId = controllerId;\n    this.model = model;\n    this.manager = manager;\n    this.destroyed = false;\n    this.onDestroyedHandlers = new Set();\n}\n\n\nControllerProxy.prototype.invoke = function(name, params) {\n    checkMethod('ControllerProxy.invoke(name, params)');\n    checkParam(name, 'name');\n\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    return this.manager.invokeAction(this.controllerId, name, params);\n};\n\n\nControllerProxy.prototype.destroy = function() {\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    this.destroyed = true;\n    this.onDestroyedHandlers.forEach(function(handler) {\n        try {\n            handler(this);\n        } catch(e) {\n            console.warn('An exception occurred while calling an onDestroyed-handler', e);\n        }\n    }, this);\n    return this.manager.destroyController(this);\n};\n\n\nControllerProxy.prototype.onDestroyed = function(handler) {\n    checkMethod('ControllerProxy.onDestroyed(handler)');\n    checkParam(handler, 'handler');\n\n    var self = this;\n    this.onDestroyedHandlers.add(handler);\n    return {\n        unsubscribe: function() {\n            self.onDestroyedHandlers.delete(handler);\n        }\n    };\n};\n\n\n\nexports.ControllerProxy = ControllerProxy;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar opendolphin = require('../libsrc/opendolphin.js');\n\nvar utils = require('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\nvar Connector = require('./connector.js').Connector;\nvar BeanManager = require('./beanmanager.js').BeanManager;\nvar ClassRepository = require('./classrepo.js').ClassRepository;\nvar ControllerManager = require('./controllermanager.js').ControllerManager;\nvar ClientContext = require('./clientcontext.js').ClientContext;\n\nexports.connect = function(url, config) {\n    checkMethod('connect(url, config)');\n    checkParam(url, 'url');\n\n    var builder = opendolphin.makeDolphin().url(url).reset(false).slackMS(4).supportCORS(true);\n    if (exists(config) && exists(config.errorHandler)) {\n        builder.errorHandler(config.errorHandler);\n    }\n    var dolphin = builder.build();\n\n    var classRepository = new ClassRepository(dolphin);\n    var beanManager = new BeanManager(classRepository);\n    var connector = new Connector(url, dolphin, classRepository, config);\n    var controllerManager = new ControllerManager(dolphin, classRepository, connector);\n\n    return new ClientContext(dolphin, beanManager, controllerManager, connector);\n};\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n ////////////////////\n// Array.forEach()\n////////////////////\nif (!Array.prototype.forEach) {\n\n    Array.prototype.forEach = function(callback, thisArg) {\n\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n\n\n////////////////////\n// Array.filter()\n////////////////////\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun/*, thisArg*/) {\n        'use strict';\n\n        if (this === void 0 || this === null) {\n            throw new TypeError();\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n\n                // NOTE: Technically this should Object.defineProperty at\n                //       the next index, as push can be affected by\n                //       properties on Object.prototype and Array.prototype.\n                //       But that method's new, and collisions should be\n                //       rare, so use the more-compatible alternative.\n                if (fun.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar checkMethodName;\n\nvar exists = function(object) {\n    return typeof object !== 'undefined' && object !== null;\n};\n\nmodule.exports.exists = exists;\n\nmodule.exports.checkMethod = function(name) {\n    checkMethodName = name;\n};\n\nmodule.exports.checkParam = function(param, parameterName) {\n    if (!exists(param)) {\n        throw new Error('The parameter ' + parameterName + ' is mandatory in ' + checkMethodName);\n    }\n};\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nmodule.exports = require('../modules/$.core').Map;","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","module.exports = function(){ /* empty */ };","var isObject = require('./$.is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./$.cof')\n  , TAG = require('./$.wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","'use strict';\nvar $            = require('./$')\n  , hide         = require('./$.hide')\n  , redefineAll  = require('./$.redefine-all')\n  , ctx          = require('./$.ctx')\n  , strictNew    = require('./$.strict-new')\n  , defined      = require('./$.defined')\n  , forOf        = require('./$.for-of')\n  , $iterDefine  = require('./$.iter-define')\n  , step         = require('./$.iter-step')\n  , ID           = require('./$.uid')('id')\n  , $has         = require('./$.has')\n  , isObject     = require('./$.is-object')\n  , setSpecies   = require('./$.set-species')\n  , DESCRIPTORS  = require('./$.descriptors')\n  , isExtensible = Object.isExtensible || isObject\n  , SIZE         = DESCRIPTORS ? '_s' : 'size'\n  , id           = 0;\n\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!$has(it, ID)){\n    // can't set id to frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add id\n    if(!create)return 'E';\n    // add missing object id\n    hide(it, ID, ++id);\n  // return object id with prefix\n  } return 'O' + it[ID];\n};\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      strictNew(that, C, NAME);\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar forOf   = require('./$.for-of')\n  , classof = require('./$.classof');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    var arr = [];\n    forOf(this, false, arr.push, arr);\n    return arr;\n  };\n};","'use strict';\nvar $              = require('./$')\n  , global         = require('./$.global')\n  , $export        = require('./$.export')\n  , fails          = require('./$.fails')\n  , hide           = require('./$.hide')\n  , redefineAll    = require('./$.redefine-all')\n  , forOf          = require('./$.for-of')\n  , strictNew      = require('./$.strict-new')\n  , isObject       = require('./$.is-object')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , DESCRIPTORS    = require('./$.descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n  } else {\n    C = wrapper(function(target, iterable){\n      strictNew(target, C, NAME);\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};","var core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./$.fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var global    = require('./$.global')\n  , core      = require('./$.core')\n  , ctx       = require('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","var ctx         = require('./$.ctx')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , anObject    = require('./$.an-object')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that){\n  var iterFn = getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var $          = require('./$')\n  , createDesc = require('./$.property-desc');\nmodule.exports = require('./$.descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./$.cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// check on default Array iterator\nvar Iterators  = require('./$.iterators')\n  , ITERATOR   = require('./$.wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","// call something on iterator step with safe closing on error\nvar anObject = require('./$.an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};","'use strict';\nvar $              = require('./$')\n  , descriptor     = require('./$.property-desc')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./$.hide')(IteratorPrototype, require('./$.wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./$.library')\n  , $export        = require('./$.export')\n  , redefine       = require('./$.redefine')\n  , hide           = require('./$.hide')\n  , has            = require('./$.has')\n  , Iterators      = require('./$.iterators')\n  , $iterCreate    = require('./$.iter-create')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , getProto       = require('./$').getProto\n  , ITERATOR       = require('./$.wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , methods, key;\n  // Fix native\n  if($native){\n    var IteratorPrototype = getProto($default.call(new Base));\n    // Set @@toStringTag to native iterators\n    setToStringTag(IteratorPrototype, TAG, true);\n    // FF fix\n    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    // fix Array#{values, @@iterator}.name in V8 / FF\n    if(DEF_VALUES && $native.name !== VALUES){\n      VALUES_BUG = true;\n      $default = function values(){ return $native.call(this); };\n    }\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n      keys:    IS_SET      ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","module.exports = {};","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};","module.exports = true;","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var redefine = require('./$.redefine');\nmodule.exports = function(target, src){\n  for(var key in src)redefine(target, key, src[key]);\n  return target;\n};","module.exports = require('./$.hide');","'use strict';\nvar core        = require('./$.core')\n  , $           = require('./$')\n  , DESCRIPTORS = require('./$.descriptors')\n  , SPECIES     = require('./$.wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};","var def = require('./$').setDesc\n  , has = require('./$.has')\n  , TAG = require('./$.wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","var global = require('./$.global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","module.exports = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};","var toInteger = require('./$.to-integer')\n  , defined   = require('./$.defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./$.iobject')\n  , defined = require('./$.defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.15 ToLength\nvar toInteger = require('./$.to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var store  = require('./$.shared')('wks')\n  , uid    = require('./$.uid')\n  , Symbol = require('./$.global').Symbol;\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n};","var classof   = require('./$.classof')\n  , ITERATOR  = require('./$.wks')('iterator')\n  , Iterators = require('./$.iterators');\nmodule.exports = require('./$.core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};","'use strict';\nvar addToUnscopables = require('./$.add-to-unscopables')\n  , step             = require('./$.iter-step')\n  , Iterators        = require('./$.iterators')\n  , toIObject        = require('./$.to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./$.iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","'use strict';\nvar strong = require('./$.collection-strong');\n\n// 23.1 Map Objects\nrequire('./$.collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","'use strict';\nvar $at  = require('./$.string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./$.iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./$.export');\n\n$export($export.P, 'Map', {toJSON: require('./$.collection-to-json')('Map')});","require('./es6.array.iterator');\nvar Iterators = require('./$.iterators');\nIterators.NodeList = Iterators.HTMLCollection = Iterators.Array;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Polymer, console */\n\"use strict\";\n\nvar Binder = require('./binder.js').Binder;\n\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\n\nfunction polymer1_1hack(element, path) {\n    // This is a temporary hack to deal with Polymer's API consistency concerning arrays and paths.\n    // An observer uses keys in an array, while the get() and set() methods expect the index.\n    // This is hopefully fixed in Polymer 1.2.\n    do {\n        var pathElements = path.match(/^([^\\.]+)\\.(.*)$/);\n        var key = pathElements !== null? pathElements[1] : path;\n        path = pathElements !== null? pathElements[2] : null;\n\n        if (Array.isArray(element)) {\n            var arrayKey = parseInt(key);\n            if (isNaN(arrayKey)) {\n                element = element[key];\n            } else {\n                var collection = Polymer.Collection.get(element);\n                element = collection.getItem(arrayKey);\n            }\n        } else {\n            element = element[key];\n        }\n    } while (path !== null && exists(element));\n\n    return element;\n}\nfunction navigateToBean(element, path) {\n    var navigation = path.match(/^(.*)\\.[^\\.]*$/);\n    if (! exists(navigation)) {\n        return element;\n    } else {\n        return polymer1_1hack(element, navigation[1]);\n        //return element.get(navigation[1], element);\n    }\n}\n\n\nfunction setupCreateBehavior(clientContext) {\n\n    var binder = new Binder(clientContext.beanManager);\n\n    return function(controllerName) {\n        var state = 'INITIALIZING';\n        return {\n\n            properties: {\n                model: {\n                    type: Object,\n                    value: function() { return {}; }\n                }\n            },\n\n            observers: ['_dolphinObserver(model.*)'],\n\n            created: function() {\n                var self = this;\n                clientContext.createController(controllerName).then(function(controller) {\n                    self._controller = controller;\n                    state = 'READY';\n                    self.set('model', controller.model);\n                    controller.onDestroyed(function() {\n                        state = 'DESTROYED';\n                        self.set('model', null);\n                    });\n                });\n            },\n\n            invoke: function(actionName, params) {\n                // TODO Call this after init has finished\n                if (state !== 'READY') {\n                    console.warn('Controller.invoke() called before init() finished');\n                    return;\n                }\n                return this._controller.invoke(actionName, params);\n            },\n\n            _dolphinObserver: function(event) {\n                if (state !== 'READY') {\n                    return;\n                }\n                var path = event.path;\n                var bean, propertyName, i, j;\n                var newValue = event.value;\n\n                if (exists(newValue) && exists(newValue.indexSplices)) {\n                    path = path.substr(0, path.length - \".splices\".length);\n                    bean = navigateToBean(this, path);\n                    if (exists(bean)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var n = newValue.indexSplices.length;\n                        for (i = 0; i < n; i++) {\n                            var change = newValue.indexSplices[i];\n                            clientContext.beanManager.notifyArrayChange(bean, propertyName[0], change.index, change.addedCount, change.removed);\n\n                            var array = bean[propertyName[0]];\n                            for (j = 0; j < change.removed.length; j++) {\n                                binder.unbind(this, path + '.' + (change.index + j), change.removed[j]);\n                            }\n                            for (j = change.index + change.addedCount; j < array.length; j++) {\n                                var oldPos = j - change.addedCount + change.removed.length;\n                                binder.unbind(this, path + '.' + oldPos, array[j]);\n                            }\n                            for (j = change.index; j < array.length; j++) {\n                                binder.bind(this, path + '.' + j, array[j]);\n                            }\n                        }\n                    }\n                } else {\n                    bean = navigateToBean(this, path);\n                    if (exists(bean) && !Array.isArray(bean) && !Array.isArray(newValue)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var oldValue = clientContext.beanManager.notifyBeanChange(bean, propertyName[0], newValue);\n                        if (exists(oldValue)) {\n                            binder.unbind(this, path, oldValue);\n                        }\n                        if (exists(newValue)) {\n                            binder.bind(this, path, newValue);\n                        }\n                    }\n                }\n            }\n        };\n    };\n}\n\n\n\nexports.setupCreateBehavior = setupCreateBehavior;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar Map  = require('../bower_components/core.js/library/fn/map');\n\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\nfunction bindScope(scope, fn) {\n    return function () {\n        fn.apply(scope, arguments);\n    };\n}\n\nfunction deepEqual(array1, array2) {\n    if (array1 === array2 || (!exists(array1) && !exists(array2))) {\n        return true;\n    }\n    if (exists(array1) !== exists(array2)) {\n        return false;\n    }\n    var n = array1.length;\n    if (array2.length !== n) {\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\nfunction Binder(beanManager) {\n    this.listeners = new Map();\n\n    beanManager.onBeanUpdate(bindScope(this, this.onBeanUpdateHandler));\n    beanManager.onArrayUpdate(bindScope(this, this.onArrayUpdateHandler));\n}\n\n\nBinder.prototype.onBeanUpdateHandler = function(bean, propertyName, newValue, oldValue) {\n    if (oldValue === newValue) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        element.set(path, newValue);\n    } else {\n        bean[propertyName] = newValue;\n    }\n};\n\n\nBinder.prototype.onArrayUpdateHandler = function(bean, propertyName, index, count, newElements) {\n    var array = bean[propertyName];\n    var oldElements = array.slice(index, index + count);\n    if (deepEqual(newElements, oldElements)) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        if (typeof newElements === 'undefined') {\n            element.splice(path, index, count);\n        } else {\n            element.splice(path, index, count, newElements);\n        }\n    } else {\n        if (typeof newElements === 'undefined') {\n            array.splice(index, count);\n        } else {\n            array.splice(index, count, newElements);\n        }\n    }\n};\n\n\nBinder.prototype.bind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (!exists(listenerList)) {\n        listenerList = [];\n        this.listeners.set(value, listenerList);\n    }\n    listenerList.push({element: element, rootPath: rootPath});\n\n    if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n            this.bind(element, rootPath + '.' + i, value[i]);\n        }\n    } else if (typeof value === 'object') {\n        for (var propertyName in value) {\n            if (value.hasOwnProperty(propertyName)) {\n                this.bind(element, rootPath + '.' + propertyName, value[propertyName]);\n            }\n        }\n    }\n};\n\nBinder.prototype.unbind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (exists(listenerList)) {\n        var n = listenerList.length;\n        for (var i = 0; i < n; i++) {\n            var entry = listenerList[i];\n            if (entry.element === element && entry.rootPath === rootPath) {\n                listenerList.splice(i, 1);\n\n                if (Array.isArray(value)) {\n                    for (var j = 0; j < value.length; j++) {\n                        this.unbind(element, rootPath + '.' + j, value[j]);\n                    }\n                } else if (typeof value === 'object') {\n                    for (var propertyName in value) {\n                        if (value.hasOwnProperty(propertyName)) {\n                            this.unbind(element, rootPath + '.' + propertyName, value[propertyName]);\n                        }\n                    }\n                }\n                return;\n            }\n        }\n    }\n};\n\n\n\nexports.Binder = Binder;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar connect = require('../bower_components/dolphin-js/dist/dolphin.js').connect;\nvar setupCreateBehavior = require('./behavior.js').setupCreateBehavior;\n\n\nexports.connect = function(url, config) {\n    var clientContext = connect(url, config);\n    clientContext.createBehavior = setupCreateBehavior(clientContext);\n    return clientContext;\n};\n"],"sourceRoot":"/source/"}