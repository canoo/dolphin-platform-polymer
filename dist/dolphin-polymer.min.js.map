{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bower_components/core.js/library/fn/map.js","dolphin-polymer.min.js","bower_components/core.js/library/modules/$.a-function.js","bower_components/core.js/library/modules/$.add-to-unscopables.js","bower_components/core.js/library/modules/$.an-object.js","bower_components/core.js/library/modules/$.classof.js","bower_components/core.js/library/modules/$.cof.js","bower_components/core.js/library/modules/$.collection-strong.js","bower_components/core.js/library/modules/$.collection-to-json.js","bower_components/core.js/library/modules/$.collection.js","bower_components/core.js/library/modules/$.core.js","bower_components/core.js/library/modules/$.ctx.js","bower_components/core.js/library/modules/$.defined.js","bower_components/core.js/library/modules/$.descriptors.js","bower_components/core.js/library/modules/$.export.js","bower_components/core.js/library/modules/$.fails.js","bower_components/core.js/library/modules/$.for-of.js","bower_components/core.js/library/modules/$.global.js","bower_components/core.js/library/modules/$.has.js","bower_components/core.js/library/modules/$.hide.js","bower_components/core.js/library/modules/$.iobject.js","bower_components/core.js/library/modules/$.is-array-iter.js","bower_components/core.js/library/modules/$.is-object.js","bower_components/core.js/library/modules/$.iter-call.js","bower_components/core.js/library/modules/$.iter-create.js","bower_components/core.js/library/modules/$.iter-define.js","bower_components/core.js/library/modules/$.iter-step.js","bower_components/core.js/library/modules/$.iterators.js","bower_components/core.js/library/modules/$.js","bower_components/core.js/library/modules/$.library.js","bower_components/core.js/library/modules/$.property-desc.js","bower_components/core.js/library/modules/$.redefine-all.js","bower_components/core.js/library/modules/$.redefine.js","bower_components/core.js/library/modules/$.set-species.js","bower_components/core.js/library/modules/$.set-to-string-tag.js","bower_components/core.js/library/modules/$.shared.js","bower_components/core.js/library/modules/$.strict-new.js","bower_components/core.js/library/modules/$.string-at.js","bower_components/core.js/library/modules/$.to-integer.js","bower_components/core.js/library/modules/$.to-iobject.js","bower_components/core.js/library/modules/$.to-length.js","bower_components/core.js/library/modules/$.uid.js","bower_components/core.js/library/modules/$.wks.js","bower_components/core.js/library/modules/core.get-iterator-method.js","bower_components/core.js/library/modules/es6.array.iterator.js","bower_components/core.js/library/modules/es6.map.js","bower_components/core.js/library/modules/es6.string.iterator.js","bower_components/core.js/library/modules/es7.map.to-json.js","bower_components/core.js/library/modules/web.dom.iterable.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/node_modules/browser-pack/_prelude.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/fn/map.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/fn/promise.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/fn/set.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_a-function.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_add-to-unscopables.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_an-instance.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_an-object.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_array-from-iterable.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_classof.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_cof.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_collection-strong.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_collection-to-json.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_collection.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_core.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_ctx.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_defined.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_descriptors.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_dom-create.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_export.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_fails.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_for-of.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_global.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_has.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_hide.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_html.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_invoke.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iobject.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_is-array-iter.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_is-object.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-call.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-create.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-define.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-detect.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iter-step.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_iterators.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_library.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_meta.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_microtask.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_property-desc.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_redefine-all.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_redefine.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_set-proto.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_set-species.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_set-to-string-tag.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_shared.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_species-constructor.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_string-at.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_task.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_to-integer.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_to-iobject.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_to-length.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_uid.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/_wks.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/core.get-iterator-method.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.array.iterator.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.map.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.promise.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.set.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es6.string.iterator.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es7.map.to-json.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/es7.set.to-json.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/bower_components/core.js/library/modules/web.dom.iterable.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/libsrc/opendolphin.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/beanmanager.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/classrepo.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/clientcontext.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/codec.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/connector.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/controllermanager.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/controllerproxy.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/dolphin.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/polyfills.js","bower_components/dolphin-js/dist/bower_components/dolphin-js/dist/src/utils.js","src/behavior.js","src/binder.js","src/dolphin-polymer-api.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dolphin","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","Map","../modules/$.core","../modules/es6.map","../modules/es6.object.to-string","../modules/es6.string.iterator","../modules/es7.map.to-json","../modules/web.dom.iterable",2,"it","TypeError",3,4,"isObject","./$.is-object",5,"cof","TAG","ARG","arguments","O","T","B","undefined","Object","callee","./$.cof","./$.wks",6,"toString","slice",7,"$","hide","redefineAll","ctx","strictNew","defined","forOf","$iterDefine","step","ID","$has","setSpecies","DESCRIPTORS","isExtensible","SIZE","id","fastKey","create","getEntry","that","key","entry","index","_i","_f","k","getConstructor","wrapper","NAME","IS_MAP","ADDER","C","iterable","_l","prototype","clear","data","p","delete","next","prev","forEach","callbackfn","v","has","setDesc","get","def","value","setStrong","iterated","kind","_t","_k","./$","./$.ctx","./$.defined","./$.descriptors","./$.for-of","./$.has","./$.hide","./$.iter-define","./$.iter-step","./$.redefine-all","./$.set-species","./$.strict-new","./$.uid",8,"classof","arr","push","./$.classof",9,"$export","fails","setToStringTag","methods","common","IS_WEAK","Base","proto","entries","target","_c","each","split","KEY","IS_ADDER","b","result","size","G","W","F","./$.export","./$.fails","./$.global","./$.set-to-string-tag",10,"core","version","__e",11,"aFunction","fn","c","apply","./$.a-function",12,13,"defineProperty",14,"PROTOTYPE","type","name","source","own","out","IS_FORCED","IS_GLOBAL","IS_STATIC","S","IS_PROTO","P","IS_BIND","IS_WRAP","param","Function","./$.core",15,"exec",16,"isArrayIter","anObject","toLength","getIterFn","iterator","iterFn","done","./$.an-object","./$.is-array-iter","./$.iter-call","./$.to-length","./core.get-iterator-method",17,"Math","__g",18,"hasOwnProperty",19,"createDesc","object","./$.property-desc",20,"propertyIsEnumerable",21,"Iterators","ITERATOR","ArrayProto","Array","./$.iterators",22,23,"ret",24,"descriptor","IteratorPrototype","Constructor",25,"LIBRARY","redefine","$iterCreate","getProto","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","DEFAULT","IS_SET","FORCED","getMethod","DEF_VALUES","VALUES_BUG","$native","$default","values","./$.iter-create","./$.library","./$.redefine",26,27,28,"$Object","getPrototypeOf","isEnum","getDesc","getOwnPropertyDescriptor","setDescs","defineProperties","getKeys","getNames","getOwnPropertyNames","getSymbols","getOwnPropertySymbols",29,30,"bitmap","enumerable","configurable","writable",31,"src",32,33,"SPECIES",34,"tag","stat",35,"SHARED","store",36,37,"toInteger","TO_STRING","pos","String","charCodeAt","charAt","./$.to-integer",38,"ceil","floor","isNaN",39,"IObject","./$.iobject",40,"min",41,"px","random","concat",42,"uid","Symbol","./$.shared",43,"getIteratorMethod",44,"addToUnscopables","toIObject","Arguments","./$.add-to-unscopables","./$.to-iobject",45,"strong","set","./$.collection","./$.collection-strong",46,47,"$at","point","./$.string-at",48,"toJSON","./$.collection-to-json",49,"NodeList","HTMLCollection","./es6.array.iterator",50,"../modules/_core","Promise","../modules/es6.promise","Set","../modules/es6.set","../modules/es7.set.to-json","forbiddenField","./_is-object","iter","./_for-of","./_cof","./_wks","anInstance","./_","./_an-instance","./_ctx","./_defined","./_descriptors","./_hide","./_iter-define","./_iter-step","./_meta","./_redefine-all","./_set-species","from","./_array-from-iterable","./_classof","meta","NEED","./_export","./_fails","./_global","./_set-to-string-tag","./_a-function","document","is","createElement","expProto","virtual","R","U","./_core","./_an-object","./_is-array-iter","./_iter-call","./_to-length","./_property-desc","documentElement","args","un","./_iterators","$entries","$anyNative","./_has","./_iter-create","./_library","./_redefine","SAFE_CLOSING","riter","skipClosing","safe","META","FREEZE","preventExtensions","setMeta","w","getWeak","onFreeze","./_uid","head","last","notify","macrotask","Observer","MutationObserver","WebKitMutationObserver","process","isNode","flush","parent","domain","exit","enter","nextTick","toggle","node","createTextNode","observe","characterData","resolve","then","task","./_task","check","setPrototypeOf","test","buggy","__proto__","D","constructor","./_to-integer","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","counter","queue","ONREADYSTATECHANGE","run","listner","event","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","./_dom-create","./_html","./_invoke",51,"./_iobject",52,53,54,"USE_SYMBOL","./_shared",55,56,"./_add-to-unscopables","./_to-iobject",57,"./_collection","./_collection-strong",58,59,"Internal","GenericPromiseCapability","Wrapper","setProto","speciesConstructor","microtask","PROMISE","$Promise","empty","testResolve","sub","promise","USE_NATIVE","works","SubPromise","x","thenableThenGotten","sameConstructor","isThenable","newPromiseCapability","PromiseCapability","reject","$$resolve","$$reject","perform","error","isReject","_n","chain","_v","ok","_s","reaction","handler","fail","_h","onHandleUnhandled","onUnhandled","isUnhandled","console","emit","onunhandledrejection","reason","_a","onrejectionhandled","$reject","_d","_w","$resolve","executor","err","onFulfilled","onRejected","catch","capability","all","abrupt","remaining","results","alreadyCalled","race","./_iter-detect","./_microtask","./_set-proto","./_species-constructor",60,"add",61,"./_string-at",62,"./_collection-to-json",63,64,"TO_STRING_TAG","ArrayValues","Collection",65,"opendolphin","Attribute","QUALIFIER_PROPERTY","DIRTY_PROPERTY","BASE_VALUE","VALUE","Command","Tag","label","tooltip","mandatory","visible","enabled","regex","widgetHint","valueType","__extends","d","__","AttributeCreatedNotification","_super","pmId","attributeId","propertyName","newValue","qualifier","className","AttributeMetadataChangedCommand","metadataName","BaseValueChangedCommand","CallNamedActionCommand","actionName","ChangeAttributeMetadataCommand","EventBus","eventHandlers","onEvent","eventHandler","trigger","handle","presentationModelInstanceCount","ClientPresentationModel","presentationModelType","attributes","clientSideOnly","dirty","invalidBus","dirtyValueChangeBus","copy","getAttributes","attribute","attributeCopy","addAttribute","addAttributes","_this","attr","indexOf","findAttributeByPropertyNameAndTag","getQualifier","findAttributeByQualifier","setPresentationModel","updateDirty","onValueChange","evt","isDirty","setDirty","updateAttributeDirtyness","oldVal","oldValue","reset","rebase","onDirty","onInvalidated","handleInvalidate","getAt","findAttributeByPropertyName","findAllAttributesByPropertyName","findAttributeById","syncWith","sourcePresentationModel","targetAttribute","sourceAttribute","ClientAttribute","clientAttributeInstanceCount","valueChangeBus","qualifierChangeBus","baseValueChangeBus","setValue","setBaseValue","setQualifier","getValue","getBaseValue","baseValue","presentationModel","alert","getPresentationModel","verifiedValue","checkValue","calculateDirty","newQualifier","oldQualifier","oldBaseValue","Boolean","Number","valueOf","log","SUPPORTED_VALUE_TYPES","Date","onQualifierChange","onBaseValueChange","ValueChangedCommand","NamedCommand","EmptyNotification","NoCommandBatcher","batch","shift","BlindCommandBatcher","folding","maxBatchSize","processNext","candidate","command","found","canCmd","batchCmd","Codec","encode","commands","JSON","stringify","decode","transmitted","parse","SignalCommand","CreatePresentationModelCommand","pmType","attrs","put","containsKey","remove","splice","isEmpty","containsValue","keySet","DeletedAllPresentationModelsOfTypeNotification","DeletedPresentationModelNotification","Type","ClientModelStore","clientDolphin","presentationModels","presentationModelsPerType","attributesPerId","attributesPerQualifier","modelStoreChangeBus","getClientDolphin","registerModel","model","connector","getClientConnector","createPMCommand","send","registerAttribute","addAttributeById","addAttributeByQualifier","valueChangeCommand","findAttributesByFilter","baseValueChangeCommand","changeAttrMetadataCmd","added","addPresentationModelByType","eventType","ADDED","clientPresentationModel","removed","removePresentationModelByType","removeAttributeById","removeAttributeByQualifier","REMOVED","filter","matches","listPresentationModelIds","listPresentationModels","findPresentationModelById","findAllPresentationModelByType","deleteAllPresentationModelOfType","pm","deletePresentationModel","containsPresentationModel","findAllAttributesByQualifier","onModelStoreChange","onModelStoreChangeForType","pmStoreEvent","ClientDolphin","setClientConnector","clientConnector","commandName","onFinished","sendEmpty","getClientModelStore","setClientModelStore","clientModelStore","modelToDelete","updatePresentationModelQualifier","updateAttributeQualifier","clientAttribute","addAttributeToModel","startPushListening","pushActionName","releaseActionName","setPushListener","setReleaseCommand","setPushEnabled","listen","stopPushListening","PresentationModelResetedCommand","SavedPresentationModelNotification","InitializeAttributeCommand","SwitchPresentationModelCommand","sourcePmId","DeleteAllPresentationModelsOfTypeCommand","DeletePresentationModelCommand","DataCommand","ClientConnector","transmitter","slackMS","commandQueue","currentlySending","pushEnabled","waiting","codec","commandBatcher","setCommandBatcher","newBatcher","newListener","pushListener","newCommand","releaseCommand","release","doSendNext","enqueuePushCommand","cmdsAndHandlers","callback","map","cah","transmit","response","touchedPMs","touched","handleDataCommand","handleDeletePresentationModelCommand","handleDeleteAllPresentationModelOfTypeCommand","handleCreatePresentationModelCommand","handleValueChangedCommand","handleBaseValueChangedCommand","handleSwitchPresentationModelCommand","handleInitializeAttributeCommand","handleSavedPresentationModelNotification","handlePresentationModelResetedCommand","handleAttributeMetadataChangedCommand","handleCallNamedActionCommand","serverCommand","match","clientPm","switchPm","sourcePm","attributesCopy","me","models","onFinishedData","signal","url","makeDolphin","build","DolphinBuilder","NoTransmitter","onDone","HttpTransmitter","charset","errorHandler","supportCORS","HttpCodes","finished","success","http","XMLHttpRequest","sig","withCredentials","invalidate","onerror","handleError","onreadystatechange","readyState","status","responseText","trim","responseCommands","open","overrideMimeType","message","errorEvent","httpStatus","reset_","slackMS_","maxBatchSize_","supportCORS_","url_","errorHandler_","GetPresentationModelCommand","ResetPresentationModelCommand",66,"BeanManager","classRepository","checkMethod","checkParam","addedHandlers","removedHandlers","updatedHandlers","arrayUpdatedHandlers","allAddedHandlers","allRemovedHandlers","allUpdatedHandlers","allArrayUpdatedHandlers","onBeanAdded","bean","handlerList","exists","warn","onBeanRemoved","onBeanUpdate","onArrayUpdate","count","newElements","utils","notifyBeanChange","notifyArrayChange","removedElements","isManaged","addAll","collection","removeAll","removeIf","predicate","onAdded","unsubscribe","onRemoved","../bower_components/core.js/library/fn/map","./polyfills.js","./utils.js",67,"fromDolphin","DOLPHIN_BEAN","beanFromDolphin","toDolphin","beanToDolphin","sendListSplice","modelId","to","element","validateList","list","propertyUpdateHandlers","block","blocked","isBlocked","unblock","ClassRepository","classes","classInfos","beanAddedHandlers","beanRemovedHandlers","arrayUpdateHandlers","UNKNOWN","BASIC_TYPE","classInfo","array","removedElementsCount","isArray","registerClass","search","unregisterClass","load","unload","spliceListEntry","mapParamToDolphin","mapDolphinToBean","../libsrc/opendolphin.js",68,"ClientContext","beanManager","controllerManager","_controllerManager","_connector","INIT_COMMAND_NAME","DOLPHIN_PLATFORM_PREFIX","DISCONNECT_COMMAND_NAME","createController","disconnect","destroy",69,"encodeCreatePresentationModelCommand","decodeCreatePresentationModelCommand","encodeValueChangedCommand","decodeValueChangedCommand",70,"Connector","config","highlanderPMResolver","highlanderPMPromise","sourceSystem","SOURCE_SYSTEM","SOURCE_SYSTEM_SERVER","onModelAdded","onModelRemoved","serverPush","POLL_COMMAND_NAME","RELEASE_COMMAND_NAME","initializer","req","onload","statusText","ACTION_CALL_BEAN","HIGHLANDER_BEAN","DOLPHIN_LIST_SPLICE","SOURCE_SYSTEM_CLIENT","getHighlanderPM","../bower_components/core.js/library/fn/promise",71,"ControllerManager","controllers","ControllerProxy","DOLPHIN_BEAN_TYPE","REGISTER_CONTROLLER_COMMAND_NAME","CALL_CONTROLLER_ACTION_COMMAND_NAME","DESTROY_CONTROLLER_COMMAND_NAME","CONTROLLER_NAME","CONTROLLER_ID","MODEL","ACTION_NAME","ERROR_CODE","PARAM_PREFIX","controllerId","controller","highlanderPM","invokeAction","params","prop","isError","destroyController","controllersCopy","promises","../bower_components/core.js/library/fn/set","./classrepo.js","./connector.js","./controllerproxy.js",72,"manager","destroyed","onDestroyedHandlers","onDestroyed",73,"connect","builder","./beanmanager.js","./clientcontext.js","./codec.js","./controllermanager.js",74,"thisArg","len","kValue","fun","res","val",75,"checkMethodName","parameterName","polymer1_1hack","path","pathElements","arrayKey","parseInt","Polymer","getItem","navigateToBean","navigation","arrayKeyBug","setupCreateBehavior","clientContext","binder","Binder","controllerName","state","properties","observers","created","_controller","_dolphinObserver","j","indexSplices","substr","change","addedCount","unbind","oldPos","bind","./binder.js","bindScope","scope","deepEqual","array1","array2","listeners","onBeanUpdateHandler","onArrayUpdateHandler","listenerList","rootPath","oldElements","createBehavior","../bower_components/dolphin-js/dist/dolphin.js","./behavior.js"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,QAAAV,MAAA,WAAA,GAAAG,EAAA,OAAA,SAAAQ,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAC,EAAAzB,EAAAD,GCAA0B,EAAA,mCACAA,EAAA,kCACAA,EAAA,+BACAA,EAAA,sBACAA,EAAA,8BACAzB,EAAAD,QAAA0B,EAAA,qBAAAC,MCEGC,oBAAoB,GAAGC,qBAAqB,GAAGC,kCAAkC,GAAGC,iCAAiC,GAAGC,6BAA6B,GAAGC,8BAA8B,KAAKC,GAAG,SAASR,EAAQzB,EAAOD,GCPzNC,EAAAD,QAAA,SAAAmC,GACA,GAAA,kBAAAA,GAAA,KAAAC,WAAAD,EAAA,sBACA,OAAAA,SDUME,GAAG,SAASX,EAAQzB,EAAOD,GEZjCC,EAAAD,QAAA,kBFcMsC,GAAG,SAASZ,EAAQzB,EAAOD,GGdjC,GAAAuC,GAAAb,EAAA,gBACAzB,GAAAD,QAAA,SAAAmC,GACA,IAAAI,EAAAJ,GAAA,KAAAC,WAAAD,EAAA,qBACA,OAAAA,MHiBGK,gBAAgB,KAAKC,GAAG,SAASf,EAAQzB,EAAOD,GInBnD,GAAA0C,GAAAhB,EAAA,WACAiB,EAAAjB,EAAA,WAAA,eAEAkB,EAAA,aAAAF,EAAA,WAAA,MAAAG,cAEA5C,GAAAD,QAAA,SAAAmC,GACA,GAAAW,GAAAC,EAAAC,CACA,OAAAC,UAAAd,EAAA,YAAA,OAAAA,EAAA,OAEA,iBAAAY,GAAAD,EAAAI,OAAAf,IAAAQ,IAAAI,EAEAH,EAAAF,EAAAI,GAEA,WAAAE,EAAAN,EAAAI,KAAA,kBAAAA,GAAAK,OAAA,YAAAH,KJuBGI,UAAU,EAAEC,UAAU,KAAKC,GAAG,SAAS5B,EAAQzB,EAAOD,GKrCzD,GAAAuD,MAAAA,QAEAtD,GAAAD,QAAA,SAAAmC,GACA,MAAAoB,GAAAhC,KAAAY,GAAAqB,MAAA,EAAA,ULwCMC,GAAG,SAAS/B,EAAQzB,EAAOD,GM3CjC,YACA,IAAA0D,GAAAhC,EAAA,OACAiC,EAAAjC,EAAA,YACAkC,EAAAlC,EAAA,oBACAmC,EAAAnC,EAAA,WACAoC,EAAApC,EAAA,kBACAqC,EAAArC,EAAA,eACAsC,EAAAtC,EAAA,cACAuC,EAAAvC,EAAA,mBACAwC,EAAAxC,EAAA,iBACAyC,EAAAzC,EAAA,WAAA,MACA0C,EAAA1C,EAAA,WACAa,EAAAb,EAAA,iBACA2C,EAAA3C,EAAA,mBACA4C,EAAA5C,EAAA,mBACA6C,EAAArB,OAAAqB,cAAAhC,EACAiC,EAAAF,EAAA,KAAA,OACAG,EAAA,EAEAC,EAAA,SAAAvC,EAAAwC,GAEA,IAAApC,EAAAJ,GAAA,MAAA,gBAAAA,GAAAA,GAAA,gBAAAA,GAAA,IAAA,KAAAA,CACA,KAAAiC,EAAAjC,EAAAgC,GAAA,CAEA,IAAAI,EAAApC,GAAA,MAAA,GAEA,KAAAwC,EAAA,MAAA,GAEAhB,GAAAxB,EAAAgC,IAAAM,GAEA,MAAA,IAAAtC,EAAAgC,IAGAS,EAAA,SAAAC,EAAAC,GAEA,GAAAC,GAAAC,EAAAN,EAAAI,EACA,IAAA,MAAAE,EAAA,MAAAH,GAAAI,GAAAD,EAEA,KAAAD,EAAAF,EAAAK,GAAAH,EAAAA,EAAAA,EAAAnE,EACA,GAAAmE,EAAAI,GAAAL,EAAA,MAAAC,GAIA9E,GAAAD,SACAoF,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAA,SAAAR,EAAAa,GACA5B,EAAAe,EAAAY,EAAAH,GACAT,EAAAI,GAAAvB,EAAAiB,OAAA,MACAE,EAAAK,GAAAjC,OACA4B,EAAAc,GAAA1C,OACA4B,EAAAL,GAAA,EACAvB,QAAAyC,GAAA1B,EAAA0B,EAAAH,EAAAV,EAAAW,GAAAX,IAqDA,OAnDAjB,GAAA6B,EAAAG,WAGAC,MAAA,WACA,IAAA,GAAAhB,GAAArE,KAAAsF,EAAAjB,EAAAI,GAAAF,EAAAF,EAAAK,GAAAH,EAAAA,EAAAA,EAAAnE,EACAmE,EAAAlE,GAAA,EACAkE,EAAAgB,IAAAhB,EAAAgB,EAAAhB,EAAAgB,EAAAnF,EAAAqC,cACA6C,GAAAf,EAAA5D,EAEA0D,GAAAK,GAAAL,EAAAc,GAAA1C,OACA4B,EAAAL,GAAA,GAIAwB,SAAA,SAAAlB,GACA,GAAAD,GAAArE,KACAuE,EAAAH,EAAAC,EAAAC,EACA,IAAAC,EAAA,CACA,GAAAkB,GAAAlB,EAAAnE,EACAsF,EAAAnB,EAAAgB,QACAlB,GAAAI,GAAAF,EAAA5D,GACA4D,EAAAlE,GAAA,EACAqF,IAAAA,EAAAtF,EAAAqF,GACAA,IAAAA,EAAAF,EAAAG,GACArB,EAAAK,IAAAH,IAAAF,EAAAK,GAAAe,GACApB,EAAAc,IAAAZ,IAAAF,EAAAc,GAAAO,GACArB,EAAAL,KACA,QAAAO,GAIAoB,QAAA,SAAAC,GAGA,IAFA,GACArB,GADAhF,EAAA8D,EAAAuC,EAAAvD,UAAArB,OAAA,EAAAqB,UAAA,GAAAI,OAAA,GAEA8B,EAAAA,EAAAA,EAAAnE,EAAAJ,KAAA0E,IAGA,IAFAnF,EAAAgF,EAAAsB,EAAAtB,EAAAI,EAAA3E,MAEAuE,GAAAA,EAAAlE,GAAAkE,EAAAA,EAAAgB,GAKAO,IAAA,SAAAxB,GACA,QAAAF,EAAApE,KAAAsE,MAGAR,GAAAZ,EAAA6C,QAAAd,EAAAG,UAAA,QACAY,IAAA,WACA,MAAAzC,GAAAvD,KAAAgE,OAGAiB,GAEAgB,IAAA,SAAA5B,EAAAC,EAAA4B,GACA,GACAR,GAAAlB,EADAD,EAAAH,EAAAC,EAAAC,EAoBA,OAjBAC,GACAA,EAAAsB,EAAAK,GAGA7B,EAAAc,GAAAZ,GACA5D,EAAA6D,EAAAN,EAAAI,GAAA,GACAK,EAAAL,EACAuB,EAAAK,EACAX,EAAAG,EAAArB,EAAAc,GACA/E,EAAAqC,OACApC,GAAA,GAEAgE,EAAAK,KAAAL,EAAAK,GAAAH,GACAmB,IAAAA,EAAAtF,EAAAmE,GACAF,EAAAL,KAEA,MAAAQ,IAAAH,EAAAI,GAAAD,GAAAD,IACAF,GAEAD,SAAAA,EACA+B,UAAA,SAAAlB,EAAAH,EAAAC,GAGAtB,EAAAwB,EAAAH,EAAA,SAAAsB,EAAAC,GACArG,KAAAsG,GAAAF,EACApG,KAAAuG,GAAAF,EACArG,KAAAmF,GAAA1C,QACA,WAKA,IAJA,GAAA4B,GAAArE,KACAqG,EAAAhC,EAAAkC,GACAhC,EAAAF,EAAAc,GAEAZ,GAAAA,EAAAlE,GAAAkE,EAAAA,EAAAgB,CAEA,OAAAlB,GAAAiC,KAAAjC,EAAAc,GAAAZ,EAAAA,EAAAA,EAAAnE,EAAAiE,EAAAiC,GAAA5B,IAMA,QAAA2B,EAAA3C,EAAA,EAAAa,EAAAI,GACA,UAAA0B,EAAA3C,EAAA,EAAAa,EAAAsB,GACAnC,EAAA,GAAAa,EAAAI,EAAAJ,EAAAsB,KANAxB,EAAAiC,GAAA7D,OACAiB,EAAA,KAMAqB,EAAA,UAAA,UAAAA,GAAA,GAGAlB,EAAAiB,ON+CG0B,MAAM,GAAGC,UAAU,GAAGC,cAAc,GAAGC,kBAAkB,GAAGC,aAAa,GAAGC,UAAU,GAAGC,WAAW,GAAG9E,gBAAgB,GAAG+E,kBAAkB,GAAGC,gBAAgB,GAAGC,mBAAmB,GAAGC,kBAAkB,GAAGC,iBAAiB,GAAGC,UAAU,KAAKC,GAAG,SAASnG,EAAQzB,EAAOD,GO1M9Q,GAAAgE,GAAAtC,EAAA,cACAoG,EAAApG,EAAA,cACAzB,GAAAD,QAAA,SAAAsF,GACA,MAAA,YACA,GAAAwC,EAAAtH,OAAA8E,EAAA,KAAAlD,WAAAkD,EAAA,wBACA,IAAAyC,KAEA,OADA/D,GAAAxD,MAAA,EAAAuH,EAAAC,KAAAD,GACAA,MP+MGE,cAAc,EAAEb,aAAa,KAAKc,GAAG,SAASxG,EAAQzB,EAAOD,GQvNhE,YACA,IAAA0D,GAAAhC,EAAA,OACApB,EAAAoB,EAAA,cACAyG,EAAAzG,EAAA,cACA0G,EAAA1G,EAAA,aACAiC,EAAAjC,EAAA,YACAkC,EAAAlC,EAAA,oBACAsC,EAAAtC,EAAA,cACAoC,EAAApC,EAAA,kBACAa,EAAAb,EAAA,iBACA2G,EAAA3G,EAAA,yBACA4C,EAAA5C,EAAA,kBAEAzB,GAAAD,QAAA,SAAAsF,EAAAD,EAAAiD,EAAAC,EAAAhD,EAAAiD,GACA,GAAAC,GAAAnI,EAAAgF,GACAG,EAAAgD,EACAjD,EAAAD,EAAA,MAAA,MACAmD,EAAAjD,GAAAA,EAAAG,UACA9C,IAmCA,OAlCAwB,IAAA,kBAAAmB,KAAA+C,GAAAE,EAAAvC,UAAAiC,EAAA,YACA,GAAA3C,IAAAkD,UAAA1C,WAMAR,EAAAJ,EAAA,SAAAuD,EAAAlD,GACA5B,EAAA8E,EAAAnD,EAAAH,GACAsD,EAAAC,GAAA,GAAAJ,GACAxF,QAAAyC,GAAA1B,EAAA0B,EAAAH,EAAAqD,EAAApD,GAAAoD,KAEAlF,EAAAoF,KAAAvH,KAAA,2DAAAwH,MAAA,KAAA,SAAAC,GACA,GAAAC,GAAA,OAAAD,GAAA,OAAAA,CACAA,KAAAN,MAAAF,GAAA,SAAAQ,IAAArF,EAAA8B,EAAAG,UAAAoD,EAAA,SAAA/H,EAAAiI,GACA,IAAAD,GAAAT,IAAAjG,EAAAtB,GAAA,MAAA,OAAA+H,EAAA/F,QAAA,CACA,IAAAkG,GAAA3I,KAAAqI,GAAAG,GAAA,IAAA/H,EAAA,EAAAA,EAAAiI,EACA,OAAAD,GAAAzI,KAAA2I,MAGA,QAAAT,IAAAhF,EAAA6C,QAAAd,EAAAG,UAAA,QACAY,IAAA,WACA,MAAAhG,MAAAqI,GAAAO,UAlBA3D,EAAA8C,EAAAnD,eAAAC,EAAAC,EAAAC,EAAAC,GACA5B,EAAA6B,EAAAG,UAAA0C,IAsBAD,EAAA5C,EAAAH,GAEAxC,EAAAwC,GAAAG,EACA0C,EAAAA,EAAAkB,EAAAlB,EAAAmB,EAAAnB,EAAAoB,EAAAzG,GAEA0F,GAAAD,EAAA5B,UAAAlB,EAAAH,EAAAC,GAEAE,KR0NGuB,MAAM,GAAGG,kBAAkB,GAAGqC,aAAa,GAAGC,YAAY,GAAGrC,aAAa,GAAGsC,aAAa,GAAGpC,WAAW,GAAG9E,gBAAgB,GAAGiF,mBAAmB,GAAGkC,wBAAwB,GAAGhC,iBAAiB,KAAKiC,IAAI,SAASlI,EAAQzB,EAAOD,GS/QpO,GAAA6J,GAAA5J,EAAAD,SAAA8J,QAAA,QACA,iBAAAC,OAAAA,IAAAF,QTiRMG,IAAI,SAAStI,EAAQzB,EAAOD,GUjRlC,GAAAiK,GAAAvI,EAAA,iBACAzB,GAAAD,QAAA,SAAAkK,EAAArF,EAAArD,GAEA,GADAyI,EAAAC,GACAjH,SAAA4B,EAAA,MAAAqF,EACA,QAAA1I,GACA,IAAA,GAAA,MAAA,UAAAP,GACA,MAAAiJ,GAAA3I,KAAAsD,EAAA5D,GAEA,KAAA,GAAA,MAAA,UAAAA,EAAAiI,GACA,MAAAgB,GAAA3I,KAAAsD,EAAA5D,EAAAiI,GAEA,KAAA,GAAA,MAAA,UAAAjI,EAAAiI,EAAAiB,GACA,MAAAD,GAAA3I,KAAAsD,EAAA5D,EAAAiI,EAAAiB,IAGA,MAAA,YACA,MAAAD,GAAAE,MAAAvF,EAAAhC,eVsRGwH,iBAAiB,IAAIC,IAAI,SAAS5I,EAAQzB,EAAOD,GWtSpDC,EAAAD,QAAA,SAAAmC,GACA,GAAAc,QAAAd,EAAA,KAAAC,WAAA,yBAAAD,EACA,OAAAA,SX0SMoI,IAAI,SAAS7I,EAAQzB,EAAOD,GY5SlCC,EAAAD,SAAA0B,EAAA,aAAA,WACA,MAAA,IAAAwB,OAAAsH,kBAAA,KAAAhE,IAAA,WAAA,MAAA,MAAAvF,MZgTGwI,YAAY,KAAKgB,IAAI,SAAS/I,EAAQzB,EAAOD,GalThD,GAAAM,GAAAoB,EAAA,cACAmI,EAAAnI,EAAA,YACAmC,EAAAnC,EAAA,WACAgJ,EAAA,YAEAvC,EAAA,SAAAwC,EAAAC,EAAAC,GACA,GAQA/F,GAAAgG,EAAAC,EARAC,EAAAL,EAAAxC,EAAAoB,EACA0B,EAAAN,EAAAxC,EAAAkB,EACA6B,EAAAP,EAAAxC,EAAAgD,EACAC,EAAAT,EAAAxC,EAAAkD,EACAC,EAAAX,EAAAxC,EAAAnF,EACAuI,EAAAZ,EAAAxC,EAAAmB,EACAtJ,EAAAiL,EAAApB,EAAAA,EAAAe,KAAAf,EAAAe,OACAhC,EAAAqC,EAAA3K,EAAA4K,EAAA5K,EAAAsK,IAAAtK,EAAAsK,QAAAF,EAEAO,KAAAJ,EAAAD,EACA,KAAA9F,IAAA+F,GAEAC,GAAAE,GAAApC,GAAA9D,IAAA8D,GACAkC,GAAAhG,IAAA9E,KAEA+K,EAAAD,EAAAlC,EAAA9D,GAAA+F,EAAA/F,GAEA9E,EAAA8E,GAAAmG,GAAA,kBAAArC,GAAA9D,GAAA+F,EAAA/F,GAEAwG,GAAAR,EAAAjH,EAAAkH,EAAAzK,GAEAiL,GAAA3C,EAAA9D,IAAAiG,EAAA,SAAAtF,GACA,GAAA8D,GAAA,SAAAiC,GACA,MAAAhL,gBAAAiF,GAAA,GAAAA,GAAA+F,GAAA/F,EAAA+F,GAGA,OADAjC,GAAAmB,GAAAjF,EAAAiF,GACAnB,GAEAwB,GAAAK,GAAA,kBAAAL,GAAAlH,EAAA4H,SAAAlK,KAAAwJ,GAAAA,EACAK,KAAApL,EAAA0K,KAAA1K,EAAA0K,QAAA5F,GAAAiG,IAIA5C,GAAAoB,EAAA,EACApB,EAAAkB,EAAA,EACAlB,EAAAgD,EAAA,EACAhD,EAAAkD,EAAA,EACAlD,EAAAnF,EAAA,GACAmF,EAAAmB,EAAA,GACArJ,EAAAD,QAAAmI,IboTGuD,WAAW,GAAGzE,UAAU,GAAGyC,aAAa,KAAKiC,IAAI,SAASjK,EAAQzB,EAAOD,GcjW5EC,EAAAD,QAAA,SAAA4L,GACA,IACA,QAAAA,IACA,MAAAlL,GACA,OAAA,SdqWMmL,IAAI,SAASnK,EAAQzB,EAAOD,GezWlC,GAAA6D,GAAAnC,EAAA,WACAH,EAAAG,EAAA,iBACAoK,EAAApK,EAAA,qBACAqK,EAAArK,EAAA,iBACAsK,EAAAtK,EAAA,iBACAuK,EAAAvK,EAAA,6BACAzB,GAAAD,QAAA,SAAA0F,EAAAiD,EAAAuB,EAAArF,GACA,GAGArD,GAAA0C,EAAAgI,EAHAC,EAAAF,EAAAvG,GACA3F,EAAA8D,EAAAqG,EAAArF,EAAA8D,EAAA,EAAA,GACA3D,EAAA,CAEA,IAAA,kBAAAmH,GAAA,KAAA/J,WAAAsD,EAAA,oBAEA,IAAAoG,EAAAK,GAAA,IAAA3K,EAAAwK,EAAAtG,EAAAlE,QAAAA,EAAAwD,EAAAA,IACA2D,EAAA5I,EAAAgM,EAAA7H,EAAAwB,EAAAV,IAAA,GAAAd,EAAA,IAAAnE,EAAA2F,EAAAV,QACA,KAAAkH,EAAAC,EAAA5K,KAAAmE,KAAAxB,EAAAgI,EAAAjG,QAAAmG,MACA7K,EAAA2K,EAAAnM,EAAAmE,EAAAwC,MAAAiC,Mf6WG0D,gBAAgB,EAAEpF,UAAU,GAAGqF,oBAAoB,GAAGC,gBAAgB,GAAGC,gBAAgB,GAAGC,6BAA6B,KAAKC,IAAI,SAAShL,EAAQzB,EAAOD,GgB5X7J,GAAAM,GAAAL,EAAAD,QAAA,mBAAAK,SAAAA,OAAAsM,MAAAA,KACAtM,OAAA,mBAAAE,OAAAA,KAAAoM,MAAAA,KAAApM,KAAAkL,SAAA,gBACA,iBAAAmB,OAAAA,IAAAtM,QhB+XMuM,IAAI,SAASnL,EAAQzB,EAAOD,GiBlYlC,GAAA8M,MAAAA,cACA7M,GAAAD,QAAA,SAAAmC,EAAA2C,GACA,MAAAgI,GAAAvL,KAAAY,EAAA2C,SjBqYMiI,IAAI,SAASrL,EAAQzB,EAAOD,GkBvYlC,GAAA0D,GAAAhC,EAAA,OACAsL,EAAAtL,EAAA,oBACAzB,GAAAD,QAAA0B,EAAA,mBAAA,SAAAuL,EAAAnI,EAAA4B,GACA,MAAAhD,GAAA6C,QAAA0G,EAAAnI,EAAAkI,EAAA,EAAAtG,KACA,SAAAuG,EAAAnI,EAAA4B,GAEA,MADAuG,GAAAnI,GAAA4B,EACAuG,KlB0YGjG,MAAM,GAAGG,kBAAkB,GAAG+F,oBAAoB,KAAKC,IAAI,SAASzL,EAAQzB,EAAOD,GmB/YtF,GAAA0C,GAAAhB,EAAA,UACAzB,GAAAD,QAAAkD,OAAA,KAAAkK,qBAAA,GAAAlK,OAAA,SAAAf,GACA,MAAA,UAAAO,EAAAP,GAAAA,EAAA4G,MAAA,IAAA7F,OAAAf,MnBmZGiB,UAAU,IAAIiK,IAAI,SAAS3L,EAAQzB,EAAOD,GoBrZ7C,GAAAsN,GAAA5L,EAAA,iBACA6L,EAAA7L,EAAA,WAAA,YACA8L,EAAAC,MAAA7H,SAEA3F,GAAAD,QAAA,SAAAmC,GACA,MAAAc,UAAAd,IAAAmL,EAAAG,QAAAtL,GAAAqL,EAAAD,KAAApL,MpByZGuL,gBAAgB,GAAGrK,UAAU,KAAKsK,IAAI,SAASjM,EAAQzB,EAAOD,GqB/ZjEC,EAAAD,QAAA,SAAAmC,GACA,MAAA,gBAAAA,GAAA,OAAAA,EAAA,kBAAAA,SrBkaMyL,IAAI,SAASlM,EAAQzB,EAAOD,GsBlalC,GAAA+L,GAAArK,EAAA,gBACAzB,GAAAD,QAAA,SAAAkM,EAAAhC,EAAAxD,EAAAiC,GACA,IACA,MAAAA,GAAAuB,EAAA6B,EAAArF,GAAA,GAAAA,EAAA,IAAAwD,EAAAxD,GAEA,MAAAhG,GACA,GAAAmN,GAAA3B,EAAA,SAEA,MADAjJ,UAAA4K,GAAA9B,EAAA8B,EAAAtM,KAAA2K,IACAxL,MtBuaG2L,gBAAgB,IAAIyB,IAAI,SAASpM,EAAQzB,EAAOD,GuBhbnD,YACA,IAAA0D,GAAAhC,EAAA,OACAqM,EAAArM,EAAA,qBACA2G,EAAA3G,EAAA,yBACAsM,IAGAtM,GAAA,YAAAsM,EAAAtM,EAAA,WAAA,YAAA,WAAA,MAAAlB,QAEAP,EAAAD,QAAA,SAAAiO,EAAA3I,EAAAW,GACAgI,EAAArI,UAAAlC,EAAAiB,OAAAqJ,GAAA/H,KAAA8H,EAAA,EAAA9H,KACAoC,EAAA4F,EAAA3I,EAAA,gBvBmbG0B,MAAM,GAAGM,WAAW,GAAG4F,oBAAoB,GAAGvD,wBAAwB,GAAGtG,UAAU,KAAK6K,IAAI,SAASxM,EAAQzB,EAAOD,GwB9bvH,YACA,IAAAmO,GAAAzM,EAAA,eACAyG,EAAAzG,EAAA,cACA0M,EAAA1M,EAAA,gBACAiC,EAAAjC,EAAA,YACA4E,EAAA5E,EAAA,WACA4L,EAAA5L,EAAA,iBACA2M,EAAA3M,EAAA,mBACA2G,EAAA3G,EAAA,yBACA4M,EAAA5M,EAAA,OAAA4M,SACAf,EAAA7L,EAAA,WAAA,YACA6M,OAAAC,MAAA,WAAAA,QACAC,EAAA,aACAC,EAAA,OACAC,EAAA,SAEAC,EAAA,WAAA,MAAApO,MAEAP,GAAAD,QAAA,SAAAyI,EAAAnD,EAAA2I,EAAAhI,EAAA4I,EAAAC,EAAAC,GACAV,EAAAJ,EAAA3I,EAAAW,EACA,IAaAqC,GAAAxD,EAbAkK,EAAA,SAAAnI,GACA,IAAA0H,GAAA1H,IAAA6B,GAAA,MAAAA,GAAA7B,EACA,QAAAA,GACA,IAAA6H,GAAA,MAAA,YAAA,MAAA,IAAAT,GAAAzN,KAAAqG,GACA,KAAA8H,GAAA,MAAA,YAAA,MAAA,IAAAV,GAAAzN,KAAAqG,IACA,MAAA,YAAA,MAAA,IAAAoH,GAAAzN,KAAAqG,KAEAlE,EAAA2C,EAAA,YACA2J,EAAAJ,GAAAF,EACAO,GAAA,EACAxG,EAAAD,EAAA7C,UACAuJ,EAAAzG,EAAA6E,IAAA7E,EAAA+F,IAAAI,GAAAnG,EAAAmG,GACAO,EAAAD,GAAAH,EAAAH,EAGA,IAAAM,EAAA,CACA,GAAAnB,GAAAM,EAAAc,EAAA7N,KAAA,GAAAkH,IAEAJ,GAAA2F,EAAArL,GAAA,IAEAwL,GAAA7H,EAAAoC,EAAA+F,IAAA9K,EAAAqK,EAAAT,EAAAqB,GAEAK,GAAAE,EAAAvE,OAAA+D,IACAO,GAAA,EACAE,EAAA,WAAA,MAAAD,GAAA5N,KAAAf,QAUA,GANA2N,IAAAY,IAAAR,IAAAW,GAAAxG,EAAA6E,IACA5J,EAAA+E,EAAA6E,EAAA6B,GAGA9B,EAAAhI,GAAA8J,EACA9B,EAAA3K,GAAAiM,EACAC,EAMA,GALAvG,GACA+G,OAAAJ,EAAAG,EAAAJ,EAAAL,GACAH,KAAAM,EAAAM,EAAAJ,EAAAN,GACA/F,QAAAsG,EAAAD,EAAA,WAAAI,GAEAL,EAAA,IAAAjK,IAAAwD,GACAxD,IAAA4D,IAAA0F,EAAA1F,EAAA5D,EAAAwD,EAAAxD,QACAqD,GAAAA,EAAAkD,EAAAlD,EAAAoB,GAAAgF,GAAAW,GAAA5J,EAAAgD,EAEA,OAAAA,MxBicGtB,MAAM,GAAGwC,aAAa,GAAGnC,UAAU,GAAGC,WAAW,GAAGgI,kBAAkB,GAAG5B,gBAAgB,GAAG6B,cAAc,GAAGC,eAAe,GAAG7F,wBAAwB,GAAGtG,UAAU,KAAKoM,IAAI,SAAS/N,EAAQzB,EAAOD,GyBjgBxMC,EAAAD,QAAA,SAAAoM,EAAA1F,GACA,OAAAA,MAAAA,EAAA0F,OAAAA,SzBogBMsD,IAAI,SAAShO,EAAQzB,EAAOD,G0BrgBlCC,EAAAD,gB1BugBM2P,IAAI,SAASjO,EAAQzB,EAAOD,G2BvgBlC,GAAA4P,GAAA1M,MACAjD,GAAAD,SACA2E,OAAAiL,EAAAjL,OACA2J,SAAAsB,EAAAC,eACAC,UAAA1C,qBACA2C,QAAAH,EAAAI,yBACAzJ,QAAAqJ,EAAApF,eACAyF,SAAAL,EAAAM,iBACAC,QAAAP,EAAApB,KACA4B,SAAAR,EAAAS,oBACAC,WAAAV,EAAAW,sBACAzH,QAAA3C,c3B0gBMqK,IAAI,SAAS9O,EAAQzB,EAAOD,G4BrhBlCC,EAAAD,SAAA,O5BuhBMyQ,IAAI,SAAS/O,EAAQzB,EAAOD,G6BvhBlCC,EAAAD,QAAA,SAAA0Q,EAAAhK,GACA,OACAiK,aAAA,EAAAD,GACAE,eAAA,EAAAF,GACAG,WAAA,EAAAH,GACAhK,MAAAA,S7B2hBMoK,IAAI,SAASpP,EAAQzB,EAAOD,G8BhiBlC,GAAAoO,GAAA1M,EAAA,eACAzB,GAAAD,QAAA,SAAA4I,EAAAmI,GACA,IAAA,GAAAjM,KAAAiM,GAAA3C,EAAAxF,EAAA9D,EAAAiM,EAAAjM,GACA,OAAA8D,M9BmiBG4G,eAAe,KAAKwB,IAAI,SAAStP,EAAQzB,EAAOD,G+BtiBnDC,EAAAD,QAAA0B,EAAA,c/BwiBG4F,WAAW,KAAK2J,IAAI,SAASvP,EAAQzB,EAAOD,GgCxiB/C,YACA,IAAA6J,GAAAnI,EAAA,YACAgC,EAAAhC,EAAA,OACA4C,EAAA5C,EAAA,mBACAwP,EAAAxP,EAAA,WAAA,UAEAzB,GAAAD,QAAA,SAAAgJ,GACA,GAAAvD,GAAAoE,EAAAb,EACA1E,IAAAmB,IAAAA,EAAAyL,IAAAxN,EAAA6C,QAAAd,EAAAyL,GACAN,cAAA,EACApK,IAAA,WAAA,MAAAhG,YhC4iBGwG,MAAM,GAAG0E,WAAW,GAAGvE,kBAAkB,GAAG9D,UAAU,KAAK8N,IAAI,SAASzP,EAAQzB,EAAOD,GiCtjB1F,GAAAyG,GAAA/E,EAAA,OAAA6E,QACAD,EAAA5E,EAAA,WACAiB,EAAAjB,EAAA,WAAA,cAEAzB,GAAAD,QAAA,SAAAmC,EAAAiP,EAAAC,GACAlP,IAAAmE,EAAAnE,EAAAkP,EAAAlP,EAAAA,EAAAyD,UAAAjD,IAAA8D,EAAAtE,EAAAQ,GAAAiO,cAAA,EAAAlK,MAAA0K,OjCyjBGpK,MAAM,GAAGK,UAAU,GAAGhE,UAAU,KAAKiO,IAAI,SAAS5P,EAAQzB,EAAOD,GkC9jBpE,GAAAM,GAAAoB,EAAA,cACA6P,EAAA,qBACAC,EAAAlR,EAAAiR,KAAAjR,EAAAiR,MACAtR,GAAAD,QAAA,SAAA8E,GACA,MAAA0M,GAAA1M,KAAA0M,EAAA1M,UlCikBG4E,aAAa,KAAK+H,IAAI,SAAS/P,EAAQzB,EAAOD,GmCrkBjDC,EAAAD,QAAA,SAAAmC,EAAA8L,EAAArD,GACA,KAAAzI,YAAA8L,IAAA,KAAA7L,WAAAwI,EAAA,4BACA,OAAAzI,SnCwkBMuP,IAAI,SAAShQ,EAAQzB,EAAOD,GoC1kBlC,GAAA2R,GAAAjQ,EAAA,kBACAqC,EAAArC,EAAA,cAGAzB,GAAAD,QAAA,SAAA4R,GACA,MAAA,UAAA/M,EAAAgN,GACA,GAGA5Q,GAAAiI,EAHApI,EAAAgR,OAAA/N,EAAAc,IACA1D,EAAAwQ,EAAAE,GACAvQ,EAAAR,EAAAU,MAEA,OAAA,GAAAL,GAAAA,GAAAG,EAAAsQ,EAAA,GAAA3O,QACAhC,EAAAH,EAAAiR,WAAA5Q,GACA,MAAAF,GAAAA,EAAA,OAAAE,EAAA,IAAAG,IAAA4H,EAAApI,EAAAiR,WAAA5Q,EAAA,IAAA,OAAA+H,EAAA,MACA0I,EAAA9Q,EAAAkR,OAAA7Q,GAAAF,EACA2Q,EAAA9Q,EAAA0C,MAAArC,EAAAA,EAAA,IAAAF,EAAA,OAAA,KAAAiI,EAAA,OAAA,WpC8kBGhC,cAAc,GAAG+K,iBAAiB,KAAKC,IAAI,SAASxQ,EAAQzB,EAAOD,GqC3lBtE,GAAAmS,GAAAxF,KAAAwF,KACAC,EAAAzF,KAAAyF,KACAnS,GAAAD,QAAA,SAAAmC,GACA,MAAAkQ,OAAAlQ,GAAAA,GAAA,GAAAA,EAAA,EAAAiQ,EAAAD,GAAAhQ,SrC+lBMmQ,IAAI,SAAS5Q,EAAQzB,EAAOD,GsClmBlC,GAAAuS,GAAA7Q,EAAA,eACAqC,EAAArC,EAAA,cACAzB,GAAAD,QAAA,SAAAmC,GACA,MAAAoQ,GAAAxO,EAAA5B,OtCsmBG+E,cAAc,GAAGsL,cAAc,KAAKC,IAAI,SAAS/Q,EAAQzB,EAAOD,GuCzmBnE,GAAA2R,GAAAjQ,EAAA,kBACAgR,EAAA/F,KAAA+F,GACAzS,GAAAD,QAAA,SAAAmC,GACA,MAAAA,GAAA,EAAAuQ,EAAAf,EAAAxP,GAAA,kBAAA,KvC6mBG8P,iBAAiB,KAAKU,IAAI,SAASjR,EAAQzB,EAAOD,GwCjnBrD,GAAAyE,GAAA,EACAmO,EAAAjG,KAAAkG,QACA5S,GAAAD,QAAA,SAAA8E,GACA,MAAA,UAAAgO,OAAA7P,SAAA6B,EAAA,GAAAA,EAAA,QAAAL,EAAAmO,GAAArP,SAAA,WxConBMwP,IAAI,SAASrR,EAAQzB,EAAOD,GyCvnBlC,GAAAwR,GAAA9P,EAAA,cAAA,OACAsR,EAAAtR,EAAA,WACAuR,EAAAvR,EAAA,cAAAuR,MACAhT,GAAAD,QAAA,SAAA4K,GACA,MAAA4G,GAAA5G,KAAA4G,EAAA5G,GACAqI,GAAAA,EAAArI,KAAAqI,GAAAD,GAAA,UAAApI,OzC0nBGlB,aAAa,GAAGwJ,aAAa,GAAGtL,UAAU,KAAKuL,IAAI,SAASzR,EAAQzB,EAAOD,G0C/nB9E,GAAA8H,GAAApG,EAAA,eACA6L,EAAA7L,EAAA,WAAA,YACA4L,EAAA5L,EAAA,gBACAzB,GAAAD,QAAA0B,EAAA,YAAA0R,kBAAA,SAAAjR,GACA,MAAAc,SAAAd,EAAAA,EAAAoL,IACApL,EAAA,eACAmL,EAAAxF,EAAA3F,IAFA,U1CooBG8F,cAAc,EAAEyD,WAAW,GAAGgC,gBAAgB,GAAGrK,UAAU,KAAKgQ,IAAI,SAAS3R,EAAQzB,EAAOD,G2CxoB/F,YACA,IAAAsT,GAAA5R,EAAA,0BACAwC,EAAAxC,EAAA,iBACA4L,EAAA5L,EAAA,iBACA6R,EAAA7R,EAAA,iBAMAzB,GAAAD,QAAA0B,EAAA,mBAAA+L,MAAA,QAAA,SAAA7G,EAAAC,GACArG,KAAAsG,GAAAyM,EAAA3M,GACApG,KAAAyE,GAAA,EACAzE,KAAAuG,GAAAF,GAEA,WACA,GAAA/D,GAAAtC,KAAAsG,GACAD,EAAArG,KAAAuG,GACA/B,EAAAxE,KAAAyE,IACA,QAAAnC,GAAAkC,GAAAlC,EAAAtB,QACAhB,KAAAsG,GAAA7D,OACAiB,EAAA,IAEA,QAAA2C,EAAA3C,EAAA,EAAAc,GACA,UAAA6B,EAAA3C,EAAA,EAAApB,EAAAkC,IACAd,EAAA,GAAAc,EAAAlC,EAAAkC,MACA,UAGAsI,EAAAkG,UAAAlG,EAAAG,MAEA6F,EAAA,QACAA,EAAA,UACAA,EAAA,a3C0oBGG,yBAAyB,EAAElM,kBAAkB,GAAGC,gBAAgB,GAAGkG,gBAAgB,GAAGgG,iBAAiB,KAAKC,IAAI,SAASjS,EAAQzB,EAAOD,G4C3qB3I,YACA,IAAA4T,GAAAlS,EAAA,wBAGAA,GAAA,kBAAA,MAAA,SAAA8E,GACA,MAAA,YAAA,MAAAA,GAAAhG,KAAAqC,UAAArB,OAAA,EAAAqB,UAAA,GAAAI,WAGAuD,IAAA,SAAA1B,GACA,GAAAC,GAAA6O,EAAAhP,SAAApE,KAAAsE,EACA,OAAAC,IAAAA,EAAAsB,GAGAwN,IAAA,SAAA/O,EAAA4B,GACA,MAAAkN,GAAAnN,IAAAjG,KAAA,IAAAsE,EAAA,EAAAA,EAAA4B,KAEAkN,GAAA,K5C6qBGE,iBAAiB,EAAEC,wBAAwB,IAAIC,IAAI,SAAStS,EAAQzB,EAAOD,SAExEiU,IAAI,SAASvS,EAAQzB,EAAOD,G6C/rBlC,YACA,IAAAkU,GAAAxS,EAAA,kBAAA,EAGAA,GAAA,mBAAAoQ,OAAA,SAAA,SAAAlL,GACApG,KAAAsG,GAAAgL,OAAAlL,GACApG,KAAAyE,GAAA,GAEA,WACA,GAEAkP,GAFArR,EAAAtC,KAAAsG,GACA9B,EAAAxE,KAAAyE,EAEA,OAAAD,IAAAlC,EAAAtB,QAAAkF,MAAAzD,OAAAmJ,MAAA,IACA+H,EAAAD,EAAApR,EAAAkC,GACAxE,KAAAyE,IAAAkP,EAAA3S,QACAkF,MAAAyN,EAAA/H,MAAA,Q7CksBG7E,kBAAkB,GAAG6M,gBAAgB,KAAKC,IAAI,SAAS3S,EAAQzB,EAAOD,G8ChtBzE,GAAAmI,GAAAzG,EAAA,aAEAyG,GAAAA,EAAAkD,EAAA,OAAAiJ,OAAA5S,EAAA,0BAAA,W9CmtBG6S,yBAAyB,EAAE/K,aAAa,KAAKgL,IAAI,SAAS9S,EAAQzB,EAAOD,G+CttB5E0B,EAAA,uBACA,IAAA4L,GAAA5L,EAAA,gBACA4L,GAAAmH,SAAAnH,EAAAoH,eAAApH,EAAAG,Q/CwtBGC,gBAAgB,GAAGiH,uBAAuB,KAAKC,IAAI,SAASlT,EAAQzB,EAAOD,IAC9E,SAAWM,IgD3tBX,SAAAP,GAAA,GAAA,gBAAAC,IAAA,mBAAAC,GAAAA,EAAAD,QAAAD,QAAA,IAAA,kBAAAG,IAAAA,EAAAC,IAAAD,KAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,GAAAA,EAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,QAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAS,IAAAA,CAAA,KAAAV,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAO,IAAAA,EAAAX,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAC,EAAAzB,EAAAD,GCAA0B,EAAA,mCACAA,EAAA,kCACAA,EAAA,+BACAA,EAAA,sBACAA,EAAA,8BACAzB,EAAAD,QAAA0B,EAAA,oBAAAC,MjD8tBGkT,mBAAmB,GAAGhT,qBAAqB,GAAGC,kCAAkC,GAAGC,iCAAiC,GAAGC,6BAA6B,GAAGC,8BAA8B,KAAKC,GAAG,SAASR,EAAQzB,EAAOD,GkDnuBxN0B,EAAA,mCACAA,EAAA,kCACAA,EAAA,+BACAA,EAAA,0BACAzB,EAAAD,QAAA0B,EAAA,oBAAAoT,UlDquBGD,mBAAmB,GAAG/S,kCAAkC,GAAGiT,yBAAyB,GAAGhT,iCAAiC,GAAGE,8BAA8B,KAAKI,GAAG,SAASX,EAAQzB,EAAOD,GmDzuB5L0B,EAAA,mCACAA,EAAA,kCACAA,EAAA,+BACAA,EAAA,sBACAA,EAAA,8BACAzB,EAAAD,QAAA0B,EAAA,oBAAAsT,MnD2uBGH,mBAAmB,GAAG/S,kCAAkC,GAAGmT,qBAAqB,GAAGlT,iCAAiC,GAAGmT,6BAA6B,GAAGjT,8BAA8B,KAAKK,GAAG,SAASZ,EAAQzB,EAAOD,GoDhvBxN,GAAA4P,GAAA1M,MACAjD,GAAAD,SACA2E,OAAAiL,EAAAjL,OACA2J,SAAAsB,EAAAC,eACAC,UAAA1C,qBACA2C,QAAAH,EAAAI,yBACAzJ,QAAAqJ,EAAApF,eACAyF,SAAAL,EAAAM,iBACAC,QAAAP,EAAApB,KACA4B,SAAAR,EAAAS,oBACAC,WAAAV,EAAAW,sBACAzH,QAAA3C,cpDmvBM1D,GAAG,SAASf,EAAQzB,EAAOD,GqD9vBjCC,EAAAD,QAAA,SAAAmC,GACA,GAAA,kBAAAA,GAAA,KAAAC,WAAAD,EAAA,sBACA,OAAAA,SrDiwBMmB,GAAG,SAAS5B,EAAQzB,EAAOD,GsDnwBjCC,EAAAD,QAAA,kBtDqwBMyD,GAAG,SAAS/B,EAAQzB,EAAOD,GuDrwBjCC,EAAAD,QAAA,SAAAmC,EAAA8L,EAAArD,EAAAuK,GACA,KAAAhT,YAAA8L,KAAAhL,SAAAkS,GAAAA,IAAAhT,GACA,KAAAC,WAAAwI,EAAA,0BACA,OAAAzI,SvDwwBM0F,GAAG,SAASnG,EAAQzB,EAAOD,GwD3wBjC,GAAAuC,GAAAb,EAAA,eACAzB,GAAAD,QAAA,SAAAmC,GACA,IAAAI,EAAAJ,GAAA,KAAAC,WAAAD,EAAA,qBACA,OAAAA,MxD8wBGiT,eAAe,KAAKlN,GAAG,SAASxG,EAAQzB,EAAOD,GyDjxBlD,GAAAgE,GAAAtC,EAAA,YAEAzB,GAAAD,QAAA,SAAAqV,EAAA9H,GACA,GAAApE,KAEA,OADAnF,GAAAqR,GAAA,EAAAlM,EAAAnB,KAAAmB,EAAAoE,GACApE,KzDqxBGmM,YAAY,KAAK1L,IAAI,SAASlI,EAAQzB,EAAOD,G0DzxBhD,GAAA0C,GAAAhB,EAAA,UACAiB,EAAAjB,EAAA,UAAA,eAEAkB,EAAA,aAAAF,EAAA,WAAA,MAAAG,cAEA5C,GAAAD,QAAA,SAAAmC,GACA,GAAAW,GAAAC,EAAAC,CACA,OAAAC,UAAAd,EAAA,YAAA,OAAAA,EAAA,OAEA,iBAAAY,GAAAD,EAAAI,OAAAf,IAAAQ,IAAAI,EAEAH,EAAAF,EAAAI,GAEA,WAAAE,EAAAN,EAAAI,KAAA,kBAAAA,GAAAK,OAAA,YAAAH,K1D6xBGuS,SAAS,GAAGC,SAAS,KAAKxL,IAAI,SAAStI,EAAQzB,EAAOD,G2D3yBzD,GAAAuD,MAAAA,QAEAtD,GAAAD,QAAA,SAAAmC,GACA,MAAAoB,GAAAhC,KAAAY,GAAAqB,MAAA,EAAA,U3D8yBM8G,IAAI,SAAS5I,EAAQzB,EAAOD,G4DjzBlC,YACA,IAAA0D,GAAAhC,EAAA,OAEAkC,GADAlC,EAAA,WACAA,EAAA,oBACAmC,EAAAnC,EAAA,UACA+T,EAAA/T,EAAA,kBACAqC,EAAArC,EAAA,cACAsC,EAAAtC,EAAA,aACAuC,EAAAvC,EAAA,kBACAwC,EAAAxC,EAAA,gBACA2C,EAAA3C,EAAA,kBACA4C,EAAA5C,EAAA,kBACAgD,EAAAhD,EAAA,WAAAgD,QACAF,EAAAF,EAAA,KAAA,OAEAM,EAAA,SAAAC,EAAAC,GAEA,GAAAC,GAAAC,EAAAN,EAAAI,EACA,IAAA,MAAAE,EAAA,MAAAH,GAAAI,GAAAD,EAEA,KAAAD,EAAAF,EAAAK,GAAAH,EAAAA,EAAAA,EAAAnE,EACA,GAAAmE,EAAAI,GAAAL,EAAA,MAAAC,GAIA9E,GAAAD,SACAoF,eAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAA,SAAAR,EAAAa,GACA+P,EAAA5Q,EAAAY,EAAAH,EAAA,MACAT,EAAAI,GAAAvB,EAAAiB,OAAA,MACAE,EAAAK,GAAAjC,OACA4B,EAAAc,GAAA1C,OACA4B,EAAAL,GAAA,EACAvB,QAAAyC,GAAA1B,EAAA0B,EAAAH,EAAAV,EAAAW,GAAAX,IAsDA,OApDAjB,GAAA6B,EAAAG,WAGAC,MAAA,WACA,IAAA,GAAAhB,GAAArE,KAAAsF,EAAAjB,EAAAI,GAAAF,EAAAF,EAAAK,GAAAH,EAAAA,EAAAA,EAAAnE,EACAmE,EAAAlE,GAAA,EACAkE,EAAAgB,IAAAhB,EAAAgB,EAAAhB,EAAAgB,EAAAnF,EAAAqC,cACA6C,GAAAf,EAAA5D,EAEA0D,GAAAK,GAAAL,EAAAc,GAAA1C,OACA4B,EAAAL,GAAA,GAIAwB,SAAA,SAAAlB,GACA,GAAAD,GAAArE,KACAuE,EAAAH,EAAAC,EAAAC,EACA,IAAAC,EAAA,CACA,GAAAkB,GAAAlB,EAAAnE,EACAsF,EAAAnB,EAAAgB,QACAlB,GAAAI,GAAAF,EAAA5D,GACA4D,EAAAlE,GAAA,EACAqF,IAAAA,EAAAtF,EAAAqF,GACAA,IAAAA,EAAAF,EAAAG,GACArB,EAAAK,IAAAH,IAAAF,EAAAK,GAAAe,GACApB,EAAAc,IAAAZ,IAAAF,EAAAc,GAAAO,GACArB,EAAAL,KACA,QAAAO,GAIAoB,QAAA,SAAAC,GACAqP,EAAAjV,KAAAiF,EAAA,UAGA,KAFA,GACAV,GADAhF,EAAA8D,EAAAuC,EAAAvD,UAAArB,OAAA,EAAAqB,UAAA,GAAAI,OAAA,GAEA8B,EAAAA,EAAAA,EAAAnE,EAAAJ,KAAA0E,IAGA,IAFAnF,EAAAgF,EAAAsB,EAAAtB,EAAAI,EAAA3E,MAEAuE,GAAAA,EAAAlE,GAAAkE,EAAAA,EAAAgB,GAKAO,IAAA,SAAAxB,GACA,QAAAF,EAAApE,KAAAsE,MAGAR,GAAAZ,EAAA6C,QAAAd,EAAAG,UAAA,QACAY,IAAA,WACA,MAAAzC,GAAAvD,KAAAgE,OAGAiB,GAEAgB,IAAA,SAAA5B,EAAAC,EAAA4B,GACA,GACAR,GAAAlB,EADAD,EAAAH,EAAAC,EAAAC,EAoBA,OAjBAC,GACAA,EAAAsB,EAAAK,GAGA7B,EAAAc,GAAAZ,GACA5D,EAAA6D,EAAAN,EAAAI,GAAA,GACAK,EAAAL,EACAuB,EAAAK,EACAX,EAAAG,EAAArB,EAAAc,GACA/E,EAAAqC,OACApC,GAAA,GAEAgE,EAAAK,KAAAL,EAAAK,GAAAH,GACAmB,IAAAA,EAAAtF,EAAAmE,GACAF,EAAAL,KAEA,MAAAQ,IAAAH,EAAAI,GAAAD,GAAAD,IACAF,GAEAD,SAAAA,EACA+B,UAAA,SAAAlB,EAAAH,EAAAC,GAGAtB,EAAAwB,EAAAH,EAAA,SAAAsB,EAAAC,GACArG,KAAAsG,GAAAF,EACApG,KAAAuG,GAAAF,EACArG,KAAAmF,GAAA1C,QACA,WAKA,IAJA,GAAA4B,GAAArE,KACAqG,EAAAhC,EAAAkC,GACAhC,EAAAF,EAAAc,GAEAZ,GAAAA,EAAAlE,GAAAkE,EAAAA,EAAAgB,CAEA,OAAAlB,GAAAiC,KAAAjC,EAAAc,GAAAZ,EAAAA,EAAAA,EAAAnE,EAAAiE,EAAAiC,GAAA5B,IAMA,QAAA2B,EAAA3C,EAAA,EAAAa,EAAAI,GACA,UAAA0B,EAAA3C,EAAA,EAAAa,EAAAsB,GACAnC,EAAA,GAAAa,EAAAI,EAAAJ,EAAAsB,KANAxB,EAAAiC,GAAA7D,OACAiB,EAAA,KAMAqB,EAAA,UAAA,UAAAA,GAAA,GAGAlB,EAAAiB,O5DqzBGoQ,MAAM,EAAEC,iBAAiB,EAAEC,SAAS,GAAGC,aAAa,GAAGC,iBAAiB,GAAGR,YAAY,GAAGS,UAAU,GAAGC,iBAAiB,GAAGC,eAAe,GAAGC,UAAU,GAAGC,kBAAkB,GAAGC,iBAAiB,KAAK7L,IAAI,SAAS7I,EAAQzB,EAAOD,G6D/7BpO,GAAA8H,GAAApG,EAAA,cACA2U,EAAA3U,EAAA,yBACAzB,GAAAD,QAAA,SAAAsF,GACA,MAAA,YACA,GAAAwC,EAAAtH,OAAA8E,EAAA,KAAAlD,WAAAkD,EAAA,wBACA,OAAA+Q,GAAA7V,U7Do8BG8V,yBAAyB,EAAEC,aAAa,KAAK9L,IAAI,SAAS/I,EAAQzB,EAAOD,G8D18B5E,YACA,IAAA0D,GAAAhC,EAAA,OACApB,EAAAoB,EAAA,aACAyG,EAAAzG,EAAA,aACA8U,EAAA9U,EAAA,WACA0G,EAAA1G,EAAA,YACAiC,EAAAjC,EAAA,WACAkC,EAAAlC,EAAA,mBACAsC,EAAAtC,EAAA,aACA+T,EAAA/T,EAAA,kBACAa,EAAAb,EAAA,gBACA2G,EAAA3G,EAAA,wBACA4C,EAAA5C,EAAA,iBAEAzB,GAAAD,QAAA,SAAAsF,EAAAD,EAAAiD,EAAAC,EAAAhD,EAAAiD,GACA,GAAAC,GAAAnI,EAAAgF,GACAG,EAAAgD,EACAjD,EAAAD,EAAA,MAAA,MACAmD,EAAAjD,GAAAA,EAAAG,UACA9C,IAqCA,OApCAwB,IAAA,kBAAAmB,KAAA+C,GAAAE,EAAAvC,UAAAiC,EAAA,YACA,GAAA3C,IAAAkD,UAAA1C,WAOAR,EAAAJ,EAAA,SAAAuD,EAAAlD,GACA+P,EAAA7M,EAAAnD,EAAAH,EAAA,MACAsD,EAAAC,GAAA,GAAAJ,GACAxF,QAAAyC,GAAA1B,EAAA0B,EAAAH,EAAAqD,EAAApD,GAAAoD,KAEAlF,EAAAoF,KAAAvH,KAAA,kEAAAwH,MAAA,KAAA,SAAAC,GACA,GAAAC,GAAA,OAAAD,GAAA,OAAAA,CACAA,KAAAN,MAAAF,GAAA,SAAAQ,IAAArF,EAAA8B,EAAAG,UAAAoD,EAAA,SAAA/H,EAAAiI,GAEA,GADAuM,EAAAjV,KAAAiF,EAAAuD,IACAC,GAAAT,IAAAjG,EAAAtB,GAAA,MAAA,OAAA+H,EAAA/F,QAAA,CACA,IAAAkG,GAAA3I,KAAAqI,GAAAG,GAAA,IAAA/H,EAAA,EAAAA,EAAAiI,EACA,OAAAD,GAAAzI,KAAA2I,MAGA,QAAAT,IAAAhF,EAAA6C,QAAAd,EAAAG,UAAA,QACAY,IAAA,WACA,MAAAhG,MAAAqI,GAAAO,UApBA3D,EAAA8C,EAAAnD,eAAAC,EAAAC,EAAAC,EAAAC,GACA5B,EAAA6B,EAAAG,UAAA0C,GACAkO,EAAAC,MAAA,GAuBApO,EAAA5C,EAAAH,GAEAxC,EAAAwC,GAAAG,EACA0C,EAAAA,EAAAkB,EAAAlB,EAAAmB,EAAAnB,EAAAoB,EAAAzG,GAEA0F,GAAAD,EAAA5B,UAAAlB,EAAAH,EAAAC,GAEAE,K9D68BGiQ,MAAM,EAAEC,iBAAiB,EAAEG,iBAAiB,GAAGY,YAAY,GAAGC,WAAW,GAAGrB,YAAY,GAAGsB,YAAY,GAAGb,UAAU,GAAGX,eAAe,GAAGc,UAAU,GAAGC,kBAAkB,GAAGU,uBAAuB,KAAKlL,IAAI,SAASjK,EAAQzB,EAAOD,G+DrgCtO,GAAA6J,GAAA5J,EAAAD,SAAA8J,QAAA,QACA,iBAAAC,OAAAA,IAAAF,Q/DugCMgC,IAAI,SAASnK,EAAQzB,EAAOD,GgEvgClC,GAAAiK,GAAAvI,EAAA,gBACAzB,GAAAD,QAAA,SAAAkK,EAAArF,EAAArD,GAEA,GADAyI,EAAAC,GACAjH,SAAA4B,EAAA,MAAAqF,EACA,QAAA1I,GACA,IAAA,GAAA,MAAA,UAAAP,GACA,MAAAiJ,GAAA3I,KAAAsD,EAAA5D,GAEA,KAAA,GAAA,MAAA,UAAAA,EAAAiI,GACA,MAAAgB,GAAA3I,KAAAsD,EAAA5D,EAAAiI,GAEA,KAAA,GAAA,MAAA,UAAAjI,EAAAiI,EAAAiB,GACA,MAAAD,GAAA3I,KAAAsD,EAAA5D,EAAAiI,EAAAiB,IAGA,MAAA,YACA,MAAAD,GAAAE,MAAAvF,EAAAhC,ehE4gCGiU,gBAAgB,IAAIpK,IAAI,SAAShL,EAAQzB,EAAOD,GiE5hCnDC,EAAAD,QAAA,SAAAmC,GACA,GAAAc,QAAAd,EAAA,KAAAC,WAAA,yBAAAD,EACA,OAAAA,SjEgiCM0K,IAAI,SAASnL,EAAQzB,EAAOD,GkEliClCC,EAAAD,SAAA0B,EAAA,YAAA,WACA,MAAA,IAAAwB,OAAAsH,kBAAA,KAAAhE,IAAA,WAAA,MAAA,MAAAvF,MlEsiCG0V,WAAW,KAAK5J,IAAI,SAASrL,EAAQzB,EAAOD,GmExiC/C,GAAAuC,GAAAb,EAAA,gBACAqV,EAAArV,EAAA,aAAAqV,SAEAC,EAAAzU,EAAAwU,IAAAxU,EAAAwU,EAAAE,cACAhX,GAAAD,QAAA,SAAAmC,GACA,MAAA6U,GAAAD,EAAAE,cAAA9U,SnE2iCGyU,YAAY,GAAGxB,eAAe,KAAKjI,IAAI,SAASzL,EAAQzB,EAAOD,GoEhjClE,GAAAM,GAAAoB,EAAA,aACAmI,EAAAnI,EAAA,WACAmC,EAAAnC,EAAA,UACAiC,EAAAjC,EAAA,WACAgJ,EAAA,YAEAvC,EAAA,SAAAwC,EAAAC,EAAAC,GACA,GASA/F,GAAAgG,EAAAC,EATAC,EAAAL,EAAAxC,EAAAoB,EACA0B,EAAAN,EAAAxC,EAAAkB,EACA6B,EAAAP,EAAAxC,EAAAgD,EACAC,EAAAT,EAAAxC,EAAAkD,EACAC,EAAAX,EAAAxC,EAAAnF,EACAuI,EAAAZ,EAAAxC,EAAAmB,EACAtJ,EAAAiL,EAAApB,EAAAA,EAAAe,KAAAf,EAAAe,OACAsM,EAAAlX,EAAA0K,GACA9B,EAAAqC,EAAA3K,EAAA4K,EAAA5K,EAAAsK,IAAAtK,EAAAsK,QAAAF,EAEAO,KAAAJ,EAAAD,EACA,KAAA9F,IAAA+F,GAEAC,GAAAE,GAAApC,GAAA3F,SAAA2F,EAAA9D,GACAgG,GAAAhG,IAAA9E,KAEA+K,EAAAD,EAAAlC,EAAA9D,GAAA+F,EAAA/F,GAEA9E,EAAA8E,GAAAmG,GAAA,kBAAArC,GAAA9D,GAAA+F,EAAA/F,GAEAwG,GAAAR,EAAAjH,EAAAkH,EAAAzK,GAEAiL,GAAA3C,EAAA9D,IAAAiG,EAAA,SAAAtF,GACA,GAAA8D,GAAA,SAAAtI,EAAAiI,EAAAiB,GACA,GAAA3J,eAAAiF,GAAA,CACA,OAAA5C,UAAArB,QACA,IAAA,GAAA,MAAA,IAAAiE,EACA,KAAA,GAAA,MAAA,IAAAA,GAAAxE,EACA,KAAA,GAAA,MAAA,IAAAwE,GAAAxE,EAAAiI,GACA,MAAA,IAAAzD,GAAAxE,EAAAiI,EAAAiB,GACA,MAAA1E,GAAA2E,MAAA5J,KAAAqC,WAGA,OADA0G,GAAAmB,GAAAjF,EAAAiF,GACAnB,GAEAwB,GAAAK,GAAA,kBAAAL,GAAAlH,EAAA4H,SAAAlK,KAAAwJ,GAAAA,EAEAK,KACApL,EAAAmX,UAAAnX,EAAAmX,aAAArS,GAAAiG,EAEAJ,EAAAxC,EAAAiP,GAAAF,IAAAA,EAAApS,IAAAnB,EAAAuT,EAAApS,EAAAiG,KAKA5C,GAAAoB,EAAA,EACApB,EAAAkB,EAAA,EACAlB,EAAAgD,EAAA,EACAhD,EAAAkD,EAAA,EACAlD,EAAAnF,EAAA,GACAmF,EAAAmB,EAAA,GACAnB,EAAAkP,EAAA,GACAlP,EAAAiP,EAAA,IACAnX,EAAAD,QAAAmI,IpEkjCGmP,UAAU,GAAG1B,SAAS,GAAGgB,YAAY,GAAGb,UAAU,KAAK1I,IAAI,SAAS3L,EAAQzB,EAAOD,GqE9mCtFC,EAAAD,QAAA,SAAA4L,GACA,IACA,QAAAA,IACA,MAAAlL,GACA,OAAA,SrEknCMiN,IAAI,SAASjM,EAAQzB,EAAOD,GsEtnClC,GAAA6D,GAAAnC,EAAA,UACAH,EAAAG,EAAA,gBACAoK,EAAApK,EAAA,oBACAqK,EAAArK,EAAA,gBACAsK,EAAAtK,EAAA,gBACAuK,EAAAvK,EAAA,6BACAzB,GAAAD,QAAA,SAAA0F,EAAAiD,EAAAuB,EAAArF,EAAA0I,GACA,GAGA/L,GAAA0C,EAAAgI,EAHAC,EAAAoB,EAAA,WAAA,MAAA7H,IAAAuG,EAAAvG,GACA3F,EAAA8D,EAAAqG,EAAArF,EAAA8D,EAAA,EAAA,GACA3D,EAAA,CAEA,IAAA,kBAAAmH,GAAA,KAAA/J,WAAAsD,EAAA,oBAEA,IAAAoG,EAAAK,GAAA,IAAA3K,EAAAwK,EAAAtG,EAAAlE,QAAAA,EAAAwD,EAAAA,IACA2D,EAAA5I,EAAAgM,EAAA7H,EAAAwB,EAAAV,IAAA,GAAAd,EAAA,IAAAnE,EAAA2F,EAAAV,QACA,KAAAkH,EAAAC,EAAA5K,KAAAmE,KAAAxB,EAAAgI,EAAAjG,QAAAmG,MACA7K,EAAA2K,EAAAnM,EAAAmE,EAAAwC,MAAAiC,MtE0nCG4O,eAAe,EAAE3B,SAAS,GAAG4B,mBAAmB,GAAGC,eAAe,GAAGC,eAAe,GAAGjL,6BAA6B,KAAKmB,IAAI,SAASlM,EAAQzB,EAAOD,GuEzoCxJ,GAAAM,GAAAL,EAAAD,QAAA,mBAAAK,SAAAA,OAAAsM,MAAAA,KACAtM,OAAA,mBAAAE,OAAAA,KAAAoM,MAAAA,KAAApM,KAAAkL,SAAA,gBACA,iBAAAmB,OAAAA,IAAAtM,QvE4oCMwN,IAAI,SAASpM,EAAQzB,EAAOD,GwE/oClC,GAAA8M,MAAAA,cACA7M,GAAAD,QAAA,SAAAmC,EAAA2C,GACA,MAAAgI,GAAAvL,KAAAY,EAAA2C,SxEkpCMoJ,IAAI,SAASxM,EAAQzB,EAAOD,GyEppClC,GAAA0D,GAAAhC,EAAA,OACAsL,EAAAtL,EAAA,mBACAzB,GAAAD,QAAA0B,EAAA,kBAAA,SAAAuL,EAAAnI,EAAA4B,GACA,MAAAhD,GAAA6C,QAAA0G,EAAAnI,EAAAkI,EAAA,EAAAtG,KACA,SAAAuG,EAAAnI,EAAA4B,GAEA,MADAuG,GAAAnI,GAAA4B,EACAuG,KzEupCGyI,MAAM,EAAEI,iBAAiB,GAAG6B,mBAAmB,KAAKlI,IAAI,SAAS/N,EAAQzB,EAAOD,G0E7pCnFC,EAAAD,QAAA0B,EAAA,aAAAqV,UAAAA,SAAAa,kB1E+pCGhB,YAAY,KAAKlH,IAAI,SAAShO,EAAQzB,EAAOD,G2E9pChDC,EAAAD,QAAA,SAAAkK,EAAA2N,EAAAhT,GACA,GAAAiT,GAAA7U,SAAA4B,CACA,QAAAgT,EAAArW,QACA,IAAA,GAAA,MAAAsW,GAAA5N,IACAA,EAAA3I,KAAAsD,EACA,KAAA,GAAA,MAAAiT,GAAA5N,EAAA2N,EAAA,IACA3N,EAAA3I,KAAAsD,EAAAgT,EAAA,GACA,KAAA,GAAA,MAAAC,GAAA5N,EAAA2N,EAAA,GAAAA,EAAA,IACA3N,EAAA3I,KAAAsD,EAAAgT,EAAA,GAAAA,EAAA,GACA,KAAA,GAAA,MAAAC,GAAA5N,EAAA2N,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA3N,EAAA3I,KAAAsD,EAAAgT,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,KAAA,GAAA,MAAAC,GAAA5N,EAAA2N,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA3N,EAAA3I,KAAAsD,EAAAgT,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MAAA3N,GAAAE,MAAAvF,EAAAgT,S3EkqCMlI,IAAI,SAASjO,EAAQzB,EAAOD,G4E/qClC,GAAA0C,GAAAhB,EAAA,SACAzB,GAAAD,QAAAkD,OAAA,KAAAkK,qBAAA,GAAAlK,OAAA,SAAAf,GACA,MAAA,UAAAO,EAAAP,GAAAA,EAAA4G,MAAA,IAAA7F,OAAAf,M5EmrCGoT,SAAS,KAAK/E,IAAI,SAAS9O,EAAQzB,EAAOD,G6ErrC7C,GAAAsN,GAAA5L,EAAA,gBACA6L,EAAA7L,EAAA,UAAA,YACA8L,EAAAC,MAAA7H,SAEA3F,GAAAD,QAAA,SAAAmC,GACA,MAAAc,UAAAd,IAAAmL,EAAAG,QAAAtL,GAAAqL,EAAAD,KAAApL,M7EyrCG4V,eAAe,GAAGvC,SAAS,KAAK/E,IAAI,SAAS/O,EAAQzB,EAAOD,G8E/rC/DC,EAAAD,QAAA,SAAAmC,GACA,MAAA,gBAAAA,GAAA,OAAAA,EAAA,kBAAAA,S9EksCM2O,IAAI,SAASpP,EAAQzB,EAAOD,G+ElsClC,GAAA+L,GAAArK,EAAA,eACAzB,GAAAD,QAAA,SAAAkM,EAAAhC,EAAAxD,EAAAiC,GACA,IACA,MAAAA,GAAAuB,EAAA6B,EAAArF,GAAA,GAAAA,EAAA,IAAAwD,EAAAxD,GAEA,MAAAhG,GACA,GAAAmN,GAAA3B,EAAA,SAEA,MADAjJ,UAAA4K,GAAA9B,EAAA8B,EAAAtM,KAAA2K,IACAxL,M/EusCG6W,eAAe,IAAIvG,IAAI,SAAStP,EAAQzB,EAAOD,GgFhtClD,YACA,IAAA0D,GAAAhC,EAAA,OACAqM,EAAArM,EAAA,oBACA2G,EAAA3G,EAAA,wBACAsM,IAGAtM,GAAA,WAAAsM,EAAAtM,EAAA,UAAA,YAAA,WAAA,MAAAlB,QAEAP,EAAAD,QAAA,SAAAiO,EAAA3I,EAAAW,GACAgI,EAAArI,UAAAlC,EAAAiB,OAAAqJ,GAAA/H,KAAA8H,EAAA,EAAA9H,KACAoC,EAAA4F,EAAA3I,EAAA,gBhFmtCGoQ,MAAM,EAAEK,UAAU,GAAG4B,mBAAmB,GAAGd,uBAAuB,GAAGrB,SAAS,KAAKvE,IAAI,SAASvP,EAAQzB,EAAOD,GiF9tClH,YACA,IAAAmO,GAAAzM,EAAA,cACAyG,EAAAzG,EAAA,aACA0M,EAAA1M,EAAA,eACAiC,EAAAjC,EAAA,WACA4E,EAAA5E,EAAA,UACA4L,EAAA5L,EAAA,gBACA2M,EAAA3M,EAAA,kBACA2G,EAAA3G,EAAA,wBACA4M,EAAA5M,EAAA,OAAA4M,SACAf,EAAA7L,EAAA,UAAA,YACA6M,OAAAC,MAAA,WAAAA,QACAC,EAAA,aACAC,EAAA,OACAC,EAAA,SAEAC,EAAA,WAAA,MAAApO,MAEAP,GAAAD,QAAA,SAAAyI,EAAAnD,EAAA2I,EAAAhI,EAAA4I,EAAAC,EAAAC,GACAV,EAAAJ,EAAA3I,EAAAW,EACA,IAeAqC,GAAAxD,EAAAkJ,EAfAgB,EAAA,SAAAnI,GACA,IAAA0H,GAAA1H,IAAA6B,GAAA,MAAAA,GAAA7B,EACA,QAAAA,GACA,IAAA6H,GAAA,MAAA,YAAA,MAAA,IAAAT,GAAAzN,KAAAqG,GACA,KAAA8H,GAAA,MAAA,YAAA,MAAA,IAAAV,GAAAzN,KAAAqG,IACA,MAAA,YAAA,MAAA,IAAAoH,GAAAzN,KAAAqG,KAEAlE,EAAA2C,EAAA,YACA2J,EAAAJ,GAAAF,EACAO,GAAA,EACAxG,EAAAD,EAAA7C,UACAuJ,EAAAzG,EAAA6E,IAAA7E,EAAA+F,IAAAI,GAAAnG,EAAAmG,GACAO,EAAAD,GAAAH,EAAAH,GACAmJ,EAAAnJ,EAAAI,EAAAD,EAAA,WAAAI,EAAAnM,OACAgV,EAAA,SAAA3S,EAAAoD,EAAAC,SAAAwG,EAAAA,CAwBA,IArBA8I,IACAjK,EAAAM,EAAA2J,EAAA1W,KAAA,GAAAkH,KACAuF,IAAA9K,OAAA0C,YAEAyC,EAAA2F,EAAArL,GAAA,GAEAwL,GAAA7H,EAAA0H,EAAAT,IAAA5J,EAAAqK,EAAAT,EAAAqB,KAIAK,GAAAE,GAAAA,EAAAvE,OAAA+D,IACAO,GAAA,EACAE,EAAA,WAAA,MAAAD,GAAA5N,KAAAf,QAGA2N,IAAAY,IAAAR,IAAAW,GAAAxG,EAAA6E,IACA5J,EAAA+E,EAAA6E,EAAA6B,GAGA9B,EAAAhI,GAAA8J,EACA9B,EAAA3K,GAAAiM,EACAC,EAMA,GALAvG,GACA+G,OAAAJ,EAAAG,EAAAJ,EAAAL,GACAH,KAAAM,EAAAM,EAAAJ,EAAAN,GACA/F,QAAAqP,GAEAjJ,EAAA,IAAAjK,IAAAwD,GACAxD,IAAA4D,IAAA0F,EAAA1F,EAAA5D,EAAAwD,EAAAxD,QACAqD,GAAAA,EAAAkD,EAAAlD,EAAAoB,GAAAgF,GAAAW,GAAA5J,EAAAgD,EAEA,OAAAA,MjFiuCGoN,MAAM,EAAEgB,YAAY,GAAGwB,SAAS,GAAGnC,UAAU,GAAGoC,iBAAiB,GAAGJ,eAAe,GAAGK,aAAa,GAAGC,cAAc,GAAGxB,uBAAuB,GAAGrB,SAAS,KAAKrE,IAAI,SAASzP,EAAQzB,EAAOD,GkFryC9L,GAAAuN,GAAA7L,EAAA,UAAA,YACA4W,GAAA,CAEA,KACA,GAAAC,IAAA,GAAAhL,IACAgL,GAAA,UAAA,WAAAD,GAAA,GACA7K,MAAA4I,KAAAkC,EAAA,WAAA,KAAA,KACA,MAAA7X,IAEAT,EAAAD,QAAA,SAAA4L,EAAA4M,GACA,IAAAA,IAAAF,EAAA,OAAA,CACA,IAAAG,IAAA,CACA,KACA,GAAA1Q,IAAA,GACAsN,EAAAtN,EAAAwF,IACA8H,GAAApP,KAAA,WAAAwS,GAAA,GACA1Q,EAAAwF,GAAA,WAAA,MAAA8H,IACAzJ,EAAA7D,GACA,MAAArH,IACA,MAAA+X,MlFwyCGjD,SAAS,KAAKlE,IAAI,SAAS5P,EAAQzB,EAAOD,GmF3zC7CC,EAAAD,QAAA,SAAAoM,EAAA1F,GACA,OAAAA,MAAAA,EAAA0F,OAAAA,SnF8zCMqF,IAAI,SAAS/P,EAAQzB,EAAOD,GoF/zClCC,EAAAD,gBpFi0CM0R,IAAI,SAAShQ,EAAQzB,EAAOD,GqFj0ClCC,EAAAD,SAAA,OrFm0CMkS,IAAI,SAASxQ,EAAQzB,EAAOD,GsFn0ClC,GAAA0Y,GAAAhX,EAAA,UAAA,QACAa,EAAAb,EAAA,gBACA4E,EAAA5E,EAAA,UACA6E,EAAA7E,EAAA,OAAA6E,QACA9B,EAAA,EACAF,EAAArB,OAAAqB,cAAA,WACA,OAAA,GAEAoU,GAAAjX,EAAA,YAAA,WACA,MAAA6C,GAAArB,OAAA0V,yBAEAC,EAAA,SAAA1W,GACAoE,EAAApE,EAAAuW,GAAAhS,OACAvF,EAAA,OAAAsD,EACAqU,SAGApU,EAAA,SAAAvC,EAAAwC,GAEA,IAAApC,EAAAJ,GAAA,MAAA,gBAAAA,GAAAA,GAAA,gBAAAA,GAAA,IAAA,KAAAA,CACA,KAAAmE,EAAAnE,EAAAuW,GAAA,CAEA,IAAAnU,EAAApC,GAAA,MAAA,GAEA,KAAAwC,EAAA,MAAA,GAEAkU,GAAA1W,GAEA,MAAAA,GAAAuW,GAAAvX,GAEA4X,EAAA,SAAA5W,EAAAwC,GACA,IAAA2B,EAAAnE,EAAAuW,GAAA,CAEA,IAAAnU,EAAApC,GAAA,OAAA,CAEA,KAAAwC,EAAA,OAAA,CAEAkU,GAAA1W,GAEA,MAAAA,GAAAuW,GAAAI,GAGAE,EAAA,SAAA7W,GAEA,MADAwW,IAAAnC,EAAAC,MAAAlS,EAAApC,KAAAmE,EAAAnE,EAAAuW,IAAAG,EAAA1W,GACAA,GAEAqU,EAAAvW,EAAAD,SACAgJ,IAAA0P,EACAjC,MAAA,EACA/R,QAAAA,EACAqU,QAAAA,EACAC,SAAAA,KtFs0CGtD,MAAM,EAAEiB,WAAW,GAAGuB,SAAS,GAAG9C,eAAe,GAAG6D,SAAS,KAAK3G,IAAI,SAAS5Q,EAAQzB,EAAOD,GuFz3CjG,GAMAkZ,GAAAC,EAAAC,EANA9Y,EAAAoB,EAAA,aACA2X,EAAA3X,EAAA,WAAAmS,IACAyF,EAAAhZ,EAAAiZ,kBAAAjZ,EAAAkZ,uBACAC,EAAAnZ,EAAAmZ,QACA3E,EAAAxU,EAAAwU,QACA4E,EAAA,WAAAhY,EAAA,UAAA+X,GAGAE,EAAA,WACA,GAAAC,GAAAC,EAAA3P,CAKA,KAJAwP,IAAAE,EAAAH,EAAAI,UACAJ,EAAAI,OAAA,KACAD,EAAAE,QAEAZ,GACAW,EAAAX,EAAAW,OACA3P,EAAAgP,EAAAhP,GACA2P,GAAAA,EAAAE,QACA7P,IACA2P,GAAAA,EAAAC,OACAZ,EAAAA,EAAAjT,IACAkT,GAAAlW,OACA2W,GAAAA,EAAAG,QAIA,IAAAL,EACAN,EAAA,WACAK,EAAAO,SAAAL,QAGA,IAAAL,EAAA,CACA,GAAAW,GAAA,EACAC,EAAAnD,SAAAoD,eAAA,GACA,IAAAb,GAAAK,GAAAS,QAAAF,GAAAG,eAAA,IACAjB,EAAA,WACAc,EAAApU,KAAAmU,GAAAA,OAIAb,GADAtE,GAAAA,EAAAwF,QACA,WACAxF,EAAAwF,UAAAC,KAAAZ,IASA,WAEAN,EAAA9X,KAAAjB,EAAAqZ,GAIA1Z,GAAAD,QAAA,SAAAkK,GACA,GAAAsQ,IAAAtQ,GAAAA,EAAAjE,KAAAhD,OAAA4W,OAAAH,GAAAD,EAAAI,OACAV,KAAAA,EAAAlT,KAAAuU,GACAtB,IACAA,EAAAsB,EACApB,KACAD,EAAAqB,KvF43CGjF,SAAS,GAAGqB,YAAY,GAAG6D,UAAU,KAAKhI,IAAI,SAAS/Q,EAAQzB,EAAOD,GwF17CzEC,EAAAD,QAAA,SAAA0Q,EAAAhK,GACA,OACAiK,aAAA,EAAAD,GACAE,eAAA,EAAAF,GACAG,WAAA,EAAAH,GACAhK,MAAAA,SxF87CMiM,IAAI,SAASjR,EAAQzB,EAAOD,GyFn8ClC,GAAA2D,GAAAjC,EAAA,UACAzB,GAAAD,QAAA,SAAA4I,EAAAmI,EAAA0H,GACA,IAAA,GAAA3T,KAAAiM,GACA0H,GAAA7P,EAAA9D,GAAA8D,EAAA9D,GAAAiM,EAAAjM,GACAnB,EAAAiF,EAAA9D,EAAAiM,EAAAjM,GACA,OAAA8D,MzFs8CGmN,UAAU,KAAKhD,IAAI,SAASrR,EAAQzB,EAAOD,G0F38C9CC,EAAAD,QAAA0B,EAAA,a1F68CGqU,UAAU,KAAK5C,IAAI,SAASzR,EAAQzB,EAAOD,G2F38C9C,GAAA+P,GAAArO,EAAA,OAAAqO,QACAxN,EAAAb,EAAA,gBACAqK,EAAArK,EAAA,gBACAgZ,EAAA,SAAA5X,EAAA4F,GAEA,GADAqD,EAAAjJ,IACAP,EAAAmG,IAAA,OAAAA,EAAA,KAAAtG,WAAAsG,EAAA,6BAEAzI,GAAAD,SACA6T,IAAA3Q,OAAAyX,iBAAA,gBACA,SAAAC,EAAAC,EAAAhH,GACA,IACAA,EAAAnS,EAAA,UAAA+J,SAAAlK,KAAAwO,EAAA7M,OAAA0C,UAAA,aAAAiO,IAAA,GACAA,EAAA+G,MACAC,IAAAD,YAAAnN,QACA,MAAA/M,GAAAma,GAAA,EACA,MAAA,UAAA/X,EAAA4F,GAIA,MAHAgS,GAAA5X,EAAA4F,GACAmS,EAAA/X,EAAAgY,UAAApS,EACAmL,EAAA/Q,EAAA4F,GACA5F,QAEA,GAAAG,QACAyX,MAAAA,K3Fg9CGhF,MAAM,EAAE6B,eAAe,EAAE3B,SAAS,GAAGR,eAAe,KAAK/B,IAAI,SAAS3R,EAAQzB,EAAOD,G4Fx+CxF,YACA,IAAA6J,GAAAnI,EAAA,WACAgC,EAAAhC,EAAA,OACA4C,EAAA5C,EAAA,kBACAwP,EAAAxP,EAAA,UAAA,UAEAzB,GAAAD,QAAA,SAAAgJ,GACA,GAAAvD,GAAAoE,EAAAb,EACA1E,IAAAmB,IAAAA,EAAAyL,IAAAxN,EAAA6C,QAAAd,EAAAyL,GACAN,cAAA,EACApK,IAAA,WAAA,MAAAhG,Y5F4+CGkV,MAAM,EAAE4B,UAAU,GAAGxB,iBAAiB,GAAGN,SAAS,KAAK7B,IAAI,SAASjS,EAAQzB,EAAOD,G6Ft/CtF,GAAAyG,GAAA/E,EAAA,OAAA6E,QACAD,EAAA5E,EAAA,UACAiB,EAAAjB,EAAA,UAAA,cAEAzB,GAAAD,QAAA,SAAAmC,EAAAiP,EAAAC,GACAlP,IAAAmE,EAAAnE,EAAAkP,EAAAlP,EAAAA,EAAAyD,UAAAjD,IAAA8D,EAAAtE,EAAAQ,GAAAiO,cAAA,EAAAlK,MAAA0K,O7Fy/CGsE,MAAM,EAAEwC,SAAS,GAAG1C,SAAS,KAAKxB,IAAI,SAAStS,EAAQzB,EAAOD,G8F9/CjE,GAAAM,GAAAoB,EAAA,aACA6P,EAAA,qBACAC,EAAAlR,EAAAiR,KAAAjR,EAAAiR,MACAtR,GAAAD,QAAA,SAAA8E,GACA,MAAA0M,GAAA1M,KAAA0M,EAAA1M,U9FigDG8R,YAAY,KAAK3C,IAAI,SAASvS,EAAQzB,EAAOD,G+FpgDhD,GAAA+L,GAAArK,EAAA,gBACAuI,EAAAvI,EAAA,iBACAwP,EAAAxP,EAAA,UAAA,UACAzB,GAAAD,QAAA,SAAA8C,EAAAiY,GACA,GAAA5P,GAAA1F,EAAAsG,EAAAjJ,GAAAkY,WACA,OAAA/X,UAAAwC,GAAAxC,SAAAkI,EAAAY,EAAAtG,GAAAyL,IAAA6J,EAAA9Q,EAAAkB,M/FwgDG2L,gBAAgB,EAAES,eAAe,EAAE/B,SAAS,KAAKnB,IAAI,SAAS3S,EAAQzB,EAAOD,GgG9gDhF,GAAA2R,GAAAjQ,EAAA,iBACAqC,EAAArC,EAAA,aAGAzB,GAAAD,QAAA,SAAA4R,GACA,MAAA,UAAA/M,EAAAgN,GACA,GAGA5Q,GAAAiI,EAHApI,EAAAgR,OAAA/N,EAAAc,IACA1D,EAAAwQ,EAAAE,GACAvQ,EAAAR,EAAAU,MAEA,OAAA,GAAAL,GAAAA,GAAAG,EAAAsQ,EAAA,GAAA3O,QACAhC,EAAAH,EAAAiR,WAAA5Q,GACA,MAAAF,GAAAA,EAAA,OAAAE,EAAA,IAAAG,IAAA4H,EAAApI,EAAAiR,WAAA5Q,EAAA,IAAA,OAAA+H,EAAA,MACA0I,EAAA9Q,EAAAkR,OAAA7Q,GAAAF,EACA2Q,EAAA9Q,EAAA0C,MAAArC,EAAAA,EAAA,IAAAF,EAAA,OAAA,KAAAiI,EAAA,OAAA,WhGkhDG2M,aAAa,GAAGoF,gBAAgB,KAAKzG,IAAI,SAAS9S,EAAQzB,EAAOD,GiGhiDpE,GAYAkb,GAAAC,EAAAC,EAZAvX,EAAAnC,EAAA,UACA2Z,EAAA3Z,EAAA,aACA4Z,EAAA5Z,EAAA,WACA6Z,EAAA7Z,EAAA,iBACApB,EAAAoB,EAAA,aACA+X,EAAAnZ,EAAAmZ,QACA+B,EAAAlb,EAAAmb,aACAC,EAAApb,EAAAqb,eACAC,EAAAtb,EAAAsb,eACAC,EAAA,EACAC,KACAC,EAAA,qBAEAC,EAAA,WACA,GAAAvX,IAAAjE,IACA,IAAAsb,EAAAhP,eAAArI,GAAA,CACA,GAAAyF,GAAA4R,EAAArX,SACAqX,GAAArX,GACAyF,MAGA+R,EAAA,SAAAC,GACAF,EAAAza,KAAA2a,EAAApW,MAGA0V,IAAAE,IACAF,EAAA,SAAAtR,GAEA,IADA,GAAA2N,MAAA1W,EAAA,EACA0B,UAAArB,OAAAL,GAAA0W,EAAA7P,KAAAnF,UAAA1B,KAKA,OAJA2a,KAAAD,GAAA,WACAR,EAAA,kBAAAnR,GAAAA,EAAAuB,SAAAvB,GAAA2N,IAEAqD,EAAAW,GACAA,GAEAH,EAAA,SAAAjX,SACAqX,GAAArX,IAGA,WAAA/C,EAAA,UAAA+X,GACAyB,EAAA,SAAAzW,GACAgV,EAAAO,SAAAnW,EAAAmY,EAAAvX,EAAA,KAGAmX,GACAT,EAAA,GAAAS,GACAR,EAAAD,EAAAgB,MACAhB,EAAAiB,MAAAC,UAAAJ,EACAf,EAAArX,EAAAuX,EAAAkB,YAAAlB,EAAA,IAGA9a,EAAAic,kBAAA,kBAAAD,eAAAhc,EAAAkc,eACAtB,EAAA,SAAAzW,GACAnE,EAAAgc,YAAA7X,EAAA,GAAA,MAEAnE,EAAAic,iBAAA,UAAAN,GAAA,IAGAf,EADAa,IAAAR,GAAA,UACA,SAAA9W,GACA6W,EAAAmB,YAAAlB,EAAA,WAAAQ,GAAA,WACAT,EAAAoB,YAAAlc,MACAwb,EAAAza,KAAAkD,KAKA,SAAAA,GACAkY,WAAA9Y,EAAAmY,EAAAvX,EAAA,GAAA,KAIAxE,EAAAD,SACA6T,IAAA2H,EACA3V,MAAA6V,KjGmiDGnG,SAAS,GAAGK,SAAS,GAAGgH,gBAAgB,GAAGhG,YAAY,GAAGiG,UAAU,GAAGC,YAAY,KAAKlI,IAAI,SAASlT,EAAQzB,EAAOD,GkG3mDvH,GAAAmS,GAAAxF,KAAAwF,KACAC,EAAAzF,KAAAyF,KACAnS,GAAAD,QAAA,SAAAmC,GACA,MAAAkQ,OAAAlQ,GAAAA,GAAA,GAAAA,EAAA,EAAAiQ,EAAAD,GAAAhQ,SlG+mDM4a,IAAI,SAASrb,EAAQzB,EAAOD,GmGlnDlC,GAAAuS,GAAA7Q,EAAA,cACAqC,EAAArC,EAAA,aACAzB,GAAAD,QAAA,SAAAmC,GACA,MAAAoQ,GAAAxO,EAAA5B,OnGsnDG0T,aAAa,GAAGmH,aAAa,KAAKC,IAAI,SAASvb,EAAQzB,EAAOD,GoGznDjE,GAAA2R,GAAAjQ,EAAA,iBACAgR,EAAA/F,KAAA+F,GACAzS,GAAAD,QAAA,SAAAmC,GACA,MAAAA,GAAA,EAAAuQ,EAAAf,EAAAxP,GAAA,kBAAA,KpG6nDG8Y,gBAAgB,KAAKiC,IAAI,SAASxb,EAAQzB,EAAOD,GqGjoDpD,GAAAyE,GAAA,EACAmO,EAAAjG,KAAAkG,QACA5S,GAAAD,QAAA,SAAA8E,GACA,MAAA,UAAAgO,OAAA7P,SAAA6B,EAAA,GAAAA,EAAA,QAAAL,EAAAmO,GAAArP,SAAA,WrGooDM4Z,IAAI,SAASzb,EAAQzB,EAAOD,GsGvoDlC,GAAAwR,GAAA9P,EAAA,aAAA,OACAsR,EAAAtR,EAAA,UACAuR,EAAAvR,EAAA,aAAAuR,OACAmK,EAAA,kBAAAnK,EACAhT,GAAAD,QAAA,SAAA4K,GACA,MAAA4G,GAAA5G,KAAA4G,EAAA5G,GACAwS,GAAAnK,EAAArI,KAAAwS,EAAAnK,EAAAD,GAAA,UAAApI,OtG0oDGgM,YAAY,GAAGyG,YAAY,GAAGpE,SAAS,KAAKqE,IAAI,SAAS5b,EAAQzB,EAAOD,GuGhpD3E,GAAA8H,GAAApG,EAAA,cACA6L,EAAA7L,EAAA,UAAA,YACA4L,EAAA5L,EAAA,eACAzB,GAAAD,QAAA0B,EAAA,WAAA0R,kBAAA,SAAAjR,GACA,MAAAc,SAAAd,EAAAA,EAAAoL,IACApL,EAAA,eACAmL,EAAAxF,EAAA3F,IAFA,UvGqpDGoU,aAAa,GAAGe,UAAU,GAAGS,eAAe,GAAGvC,SAAS,KAAK+H,IAAI,SAAS7b,EAAQzB,EAAOD,GwGzpD5F,YACA,IAAAsT,GAAA5R,EAAA,yBACAwC,EAAAxC,EAAA,gBACA4L,EAAA5L,EAAA,gBACA6R,EAAA7R,EAAA;AAMAzB,EAAAD,QAAA0B,EAAA,kBAAA+L,MAAA,QAAA,SAAA7G,EAAAC,GACArG,KAAAsG,GAAAyM,EAAA3M,GACApG,KAAAyE,GAAA,EACAzE,KAAAuG,GAAAF,GAEA,WACA,GAAA/D,GAAAtC,KAAAsG,GACAD,EAAArG,KAAAuG,GACA/B,EAAAxE,KAAAyE,IACA,QAAAnC,GAAAkC,GAAAlC,EAAAtB,QACAhB,KAAAsG,GAAA7D,OACAiB,EAAA,IAEA,QAAA2C,EAAA3C,EAAA,EAAAc,GACA,UAAA6B,EAAA3C,EAAA,EAAApB,EAAAkC,IACAd,EAAA,GAAAc,EAAAlC,EAAAkC,MACA,UAGAsI,EAAAkG,UAAAlG,EAAAG,MAEA6F,EAAA,QACAA,EAAA,UACAA,EAAA,axG2pDGkK,wBAAwB,EAAExH,iBAAiB,GAAGC,eAAe,GAAG8B,eAAe,GAAG0F,gBAAgB,KAAKC,IAAI,SAAShc,EAAQzB,EAAOD,GyG5rDtI,YACA,IAAA4T,GAAAlS,EAAA,uBAGAzB,GAAAD,QAAA0B,EAAA,iBAAA,MAAA,SAAA8E,GACA,MAAA,YAAA,MAAAA,GAAAhG,KAAAqC,UAAArB,OAAA,EAAAqB,UAAA,GAAAI,WAGAuD,IAAA,SAAA1B,GACA,GAAAC,GAAA6O,EAAAhP,SAAApE,KAAAsE,EACA,OAAAC,IAAAA,EAAAsB,GAGAwN,IAAA,SAAA/O,EAAA4B,GACA,MAAAkN,GAAAnN,IAAAjG,KAAA,IAAAsE,EAAA,EAAAA,EAAA4B,KAEAkN,GAAA,KzG8rDG+J,gBAAgB,GAAGC,uBAAuB,KAAKC,IAAI,SAASnc,EAAQzB,EAAOD,SAExE8d,IAAI,SAASpc,EAAQzB,EAAOD,G0GhtDlC,YACA,IAsBA+d,GAAAC,EAAAC,EAtBAva,EAAAhC,EAAA,OACAyM,EAAAzM,EAAA,cACApB,EAAAoB,EAAA,aACAmC,EAAAnC,EAAA,UACAoG,EAAApG,EAAA,cACAyG,EAAAzG,EAAA,aACAa,EAAAb,EAAA,gBAEAuI,GADAvI,EAAA,gBACAA,EAAA,kBACA+T,EAAA/T,EAAA,kBACAsC,EAAAtC,EAAA,aACA2U,EAAA3U,EAAA,0BACAwc,EAAAxc,EAAA,gBAAAmS,IACAsK,EAAAzc,EAAA,0BACA8Y,EAAA9Y,EAAA,WAAAmS,IACAuK,EAAA1c,EAAA,gBACA2c,EAAA,UACAjc,EAAA9B,EAAA8B,UACAqX,EAAAnZ,EAAAmZ,QACA6E,EAAAhe,EAAA+d,GACA3E,EAAA,WAAA5R,EAAA2R,GACA8E,EAAA,aAGAC,EAAA,SAAAC,GACA,GAAAC,GAAA9D,EAAA,GAAA0D,GAAAC,EAKA,OAJAE,KAAA7D,EAAAI,YAAA,SAAApP,GACAA,EAAA2S,EAAAA,MAEAG,EAAAJ,EAAAhE,QAAAM,IAAA,SAAA2D,GACAG,IAAA9D,GAGA+D,EAAA,WACA,GAAAC,IAAA,EACAC,EAAA,SAAAC,GACA,GAAAve,GAAA,GAAA+d,GAAAQ,EAEA,OADAZ,GAAA3d,EAAAse,EAAAjZ,WACArF,EAEA,KASA,GARAqe,EAAAN,GAAAA,EAAAhE,SAAAkE,IACAN,EAAAW,EAAAP,GACAO,EAAAjZ,UAAAlC,EAAAiB,OAAA2Z,EAAA1Y,WAAAoV,aAAAtU,MAAAmY,KAEAA,EAAAvE,QAAA,GAAAC,KAAAgE,YAAAM,KACAD,GAAA,GAGAA,GAAAld,EAAA,kBAAA,CACA,GAAAqd,IAAA,CACAT,GAAAhE,QAAA5W,EAAA6C,WAAA,QACAC,IAAA,WAAAuY,GAAA,MAEAH,EAAAG,GAEA,MAAAre,GAAAke,GAAA,EACA,QAAAA,KAIAI,EAAA,SAAA/d,EAAAiI,GAEA,MAAAjI,KAAAiI,GAAAjI,IAAAqd,GAAApV,IAAA+U,GAEAgB,EAAA,SAAA9c,GACA,GAAAoY,EACA,OAAAhY,GAAAJ,IAAA,mBAAAoY,EAAApY,EAAAoY,MAAAA,GAAA,GAEA2E,EAAA,SAAAzZ,GACA,MAAAuZ,GAAAV,EAAA7Y,GACA,GAAA0Z,GAAA1Z,GACA,GAAAuY,GAAAvY,IAEA0Z,EAAAnB,EAAA,SAAAvY,GACA,GAAA6U,GAAA8E,CACA5e,MAAAke,QAAA,GAAAjZ,GAAA,SAAA4Z,EAAAC,GACA,GAAArc,SAAAqX,GAAArX,SAAAmc,EAAA,KAAAhd,GAAA,0BACAkY,GAAA+E,EACAD,EAAAE,IAEA9e,KAAA8Z,QAAArQ,EAAAqQ,GACA9Z,KAAA4e,OAAAnV,EAAAmV,IAEAG,EAAA,SAAA3T,GACA,IACAA,IACA,MAAAlL,GACA,OAAA8e,MAAA9e,KAGA0Y,EAAA,SAAAsF,EAAAe,GACA,IAAAf,EAAAgB,GAAA,CACAhB,EAAAgB,IAAA,CACA,IAAAC,GAAAjB,EAAA7V,EACAuV,GAAA,WA0BA,IAzBA,GAAA1X,GAAAgY,EAAAkB,GACAC,EAAA,GAAAnB,EAAAoB,GACA3e,EAAA,EACA6a,EAAA,SAAA+D,GACA,GAGA5W,GAAAoR,EAHAyF,EAAAH,EAAAE,EAAAF,GAAAE,EAAAE,KACA3F,EAAAyF,EAAAzF,QACA8E,EAAAW,EAAAX,MAEA,KACAY,GACAH,IACA,GAAAnB,EAAAwB,IAAAC,EAAAzB,GACAA,EAAAwB,GAAA,GAEA/W,EAAA6W,KAAA,EAAAtZ,EAAAsZ,EAAAtZ,GACAyC,IAAA4W,EAAArB,QACAU,EAAAhd,EAAA,yBACAmY,EAAA0E,EAAA9V,IACAoR,EAAAhZ,KAAA4H,EAAAmR,EAAA8E,GACA9E,EAAAnR,IACAiW,EAAA1Y,GACA,MAAAhG,GACA0e,EAAA1e,KAGAif,EAAAne,OAAAL,GAAA6a,EAAA2D,EAAAxe,KACAud,GAAA7V,MACA6V,EAAAgB,IAAA,EACAD,IAAAf,EAAAwB,IAAAE,EAAA1B,OAGA0B,EAAA,SAAA1B,GACAlE,EAAAjZ,KAAAjB,EAAA,WACA,GAAA+f,EAAA3B,GAAA,CACA,GACAsB,GAAAM,EADA5Z,EAAAgY,EAAAkB,EAEAlG,GACAD,EAAA8G,KAAA,qBAAA7Z,EAAAgY,IACAsB,EAAA1f,EAAAkgB,sBACAR,GAAAtB,QAAAA,EAAA+B,OAAA/Z,KACA4Z,EAAAhgB,EAAAggB,UAAAA,EAAAd,OACAc,EAAAd,MAAA,8BAAA9Y,GACAgY,EAAAwB,GAAA,EACAxB,EAAAgC,GAAAzd,UAGAod,EAAA,SAAA3B,GACA,GAEAqB,GAFAJ,EAAAjB,EAAAgC,IAAAhC,EAAA7V,GACA1H,EAAA,CAEA,IAAA,GAAAud,EAAAwB,GAAA,OAAA,CACA,MAAAP,EAAAne,OAAAL,GAEA,GADA4e,EAAAJ,EAAAxe,KACA4e,EAAAE,OAAAI,EAAAN,EAAArB,SAAA,OAAA,CACA,QAAA,GAEAyB,EAAA,SAAAzB,GACAlE,EAAAjZ,KAAAjB,EAAA,WACA,GAAA0f,EACAtG,GACAD,EAAA8G,KAAA,mBAAA7B,IACAsB,EAAA1f,EAAAqgB,qBACAX,GAAAtB,QAAAA,EAAA+B,OAAA/B,EAAAkB,QAIAgB,EAAA,SAAAla,GACA,GAAAgY,GAAAle,IACAke,GAAAmC,KACAnC,EAAAmC,IAAA,EACAnC,EAAAA,EAAAoC,IAAApC,EACAA,EAAAkB,GAAAlZ,EACAgY,EAAAoB,GAAA,EACApB,EAAAgC,KAAAhC,EAAAgC,GAAAhC,EAAA7V,GAAArF,SACA4V,EAAAsF,GAAA,KAEAqC,EAAA,SAAAra,GACA,GACA6T,GADAmE,EAAAle,IAEA,KAAAke,EAAAmC,GAAA,CACAnC,EAAAmC,IAAA,EACAnC,EAAAA,EAAAoC,IAAApC,CACA,KACA,GAAAA,IAAAhY,EAAA,KAAAtE,GAAA,qCACAmY,EAAA0E,EAAAvY,IACA0X,EAAA,WACA,GAAA/Y,IAAAyb,GAAApC,EAAAmC,IAAA,EACA,KACAtG,EAAAhZ,KAAAmF,EAAA7C,EAAAkd,EAAA1b,EAAA,GAAAxB,EAAA+c,EAAAvb,EAAA,IACA,MAAA3E,GACAkgB,EAAArf,KAAA8D,EAAA3E,OAIAge,EAAAkB,GAAAlZ,EACAgY,EAAAoB,GAAA,EACA1G,EAAAsF,GAAA,IAEA,MAAAhe,GACAkgB,EAAArf,MAAAuf,GAAApC,EAAAmC,IAAA,GAAAngB,KAKAie,KAEAL,EAAA,SAAA0C,GACAvL,EAAAjV,KAAA8d,EAAAD,EAAA,MACApU,EAAA+W,GACAjD,EAAAxc,KAAAf,KACA,KACAwgB,EAAAnd,EAAAkd,EAAAvgB,KAAA,GAAAqD,EAAA+c,EAAApgB,KAAA,IACA,MAAAygB,GACAL,EAAArf,KAAAf,KAAAygB,KAGAlD,EAAA,SAAAiD,GACAxgB,KAAAqI,MACArI,KAAAkgB,GAAAzd,OACAzC,KAAAsf,GAAA,EACAtf,KAAAqgB,IAAA,EACArgB,KAAAof,GAAA3c,OACAzC,KAAA0f,GAAA,EACA1f,KAAAkf,IAAA,GAEA3B,EAAAnY,UAAAlE,EAAA,mBAAA4c,EAAA1Y,WAEA2U,KAAA,SAAA2G,EAAAC,GACA,GAAApB,GAAAb,EAAAf,EAAA3d,KAAA8d,GAMA,OALAyB,GAAAF,GAAA,kBAAAqB,GAAAA,GAAA,EACAnB,EAAAE,KAAA,kBAAAkB,IAAAA,EACA3gB,KAAAqI,GAAAb,KAAA+X,GACAvf,KAAAkgB,IAAAlgB,KAAAkgB,GAAA1Y,KAAA+X,GACAvf,KAAAsf,IAAA1G,EAAA5Y,MAAA,GACAuf,EAAArB,SAGA0C,QAAA,SAAAD,GACA,MAAA3gB,MAAA+Z,KAAAtX,OAAAke,MAGAhC,EAAA,WACA,GAAAT,GAAA,GAAAX,EACAvd,MAAAke,QAAAA,EACAle,KAAA8Z,QAAAzW,EAAAkd,EAAArC,EAAA,GACAle,KAAA4e,OAAAvb,EAAA+c,EAAAlC,EAAA,KAIAvW,EAAAA,EAAAkB,EAAAlB,EAAAmB,EAAAnB,EAAAoB,GAAAoV,GAAA7J,QAAAwJ,IACA5c,EAAA,wBAAA4c,EAAAD,GACA3c,EAAA,kBAAA2c,GACAJ,EAAAvc,EAAA,WAAA2c,GAGAlW,EAAAA,EAAAgD,EAAAhD,EAAAoB,GAAAoV,EAAAN,GAEAe,OAAA,SAAAve,GACA,GAAAwgB,GAAAnC,EAAA1e,MACA8e,EAAA+B,EAAAjC,MAEA,OADAE,GAAAze,GACAwgB,EAAA3C,WAGAvW,EAAAA,EAAAgD,EAAAhD,EAAAoB,GAAA4E,IAAAwQ,GAAAH,GAAA,IAAAH,GAEA/D,QAAA,SAAAwE,GAEA,GAAAA,YAAAR,IAAAU,EAAAF,EAAA9D,YAAAxa,MAAA,MAAAse,EACA,IAAAuC,GAAAnC,EAAA1e,MACA6e,EAAAgC,EAAA/G,OAEA,OADA+E,GAAAP,GACAuC,EAAA3C,WAGAvW,EAAAA,EAAAgD,EAAAhD,EAAAoB,IAAAoV,GAAAjd,EAAA,kBAAA,SAAA2T,GACAiJ,EAAAgD,IAAAjM,GAAA,SAAAkJ,MACAF,GAEAiD,IAAA,SAAA5b,GACA,GAAAD,GAAAjF,KACA6gB,EAAAnC,EAAAzZ,GACA6U,EAAA+G,EAAA/G,QACA8E,EAAAiC,EAAAjC,OACAmC,EAAAhC,EAAA,WACA,GAAAlQ,GAAAgH,EAAA3Q,GACA8b,EAAAnS,EAAA7N,OACAigB,EAAAhU,MAAA+T,EACAA,GAAA9d,EAAAoF,KAAAvH,KAAA8N,EAAA,SAAAqP,EAAA1Z,GACA,GAAA0c,IAAA,CACAjc,GAAA6U,QAAAoE,GAAAnE,KAAA,SAAA7T,GACAgb,IACAA,GAAA,EACAD,EAAAzc,GAAA0B,IACA8a,GAAAlH,EAAAmH,KACArC,KAEA9E,EAAAmH,IAGA,OADAF,IAAAnC,EAAAmC,EAAA/B,OACA6B,EAAA3C,SAGAiD,KAAA,SAAAjc,GACA,GAAAD,GAAAjF,KACA6gB,EAAAnC,EAAAzZ,GACA2Z,EAAAiC,EAAAjC,OACAmC,EAAAhC,EAAA,WACAvb,EAAA0B,GAAA,EAAA,SAAAgZ,GACAjZ,EAAA6U,QAAAoE,GAAAnE,KAAA8G,EAAA/G,QAAA8E,MAIA,OADAmC,IAAAnC,EAAAmC,EAAA/B,OACA6B,EAAA3C,a1GotDGhJ,MAAM,EAAEoB,gBAAgB,EAAEnB,iBAAiB,EAAE4B,eAAe,EAAEjB,yBAAyB,EAAEC,aAAa,GAAGe,UAAU,GAAG1B,SAAS,GAAGE,iBAAiB,GAAGY,YAAY,GAAGpB,YAAY,GAAGsB,YAAY,GAAGxB,eAAe,GAAGwM,iBAAiB,GAAGxJ,aAAa,GAAGyJ,eAAe,GAAG1L,kBAAkB,GAAG2L,eAAe,GAAG1L,iBAAiB,GAAGS,uBAAuB,GAAGkL,yBAAyB,GAAGtH,UAAU,KAAKuH,IAAI,SAAStgB,EAAQzB,EAAOD,G2G1gE1a,YACA,IAAA4T,GAAAlS,EAAA,uBAGAzB,GAAAD,QAAA0B,EAAA,iBAAA,MAAA,SAAA8E,GACA,MAAA,YAAA,MAAAA,GAAAhG,KAAAqC,UAAArB,OAAA,EAAAqB,UAAA,GAAAI,WAGAgf,IAAA,SAAAvb,GACA,MAAAkN,GAAAnN,IAAAjG,KAAAkG,EAAA,IAAAA,EAAA,EAAAA,EAAAA,KAEAkN,K3G4gEG+J,gBAAgB,GAAGC,uBAAuB,KAAKsE,IAAI,SAASxgB,EAAQzB,EAAOD,G4GvhE9E,YACA,IAAAkU,GAAAxS,EAAA,iBAAA,EAGAA,GAAA,kBAAAoQ,OAAA,SAAA,SAAAlL,GACApG,KAAAsG,GAAAgL,OAAAlL,GACApG,KAAAyE,GAAA,GAEA,WACA,GAEAkP,GAFArR,EAAAtC,KAAAsG,GACA9B,EAAAxE,KAAAyE,EAEA,OAAAD,IAAAlC,EAAAtB,QAAAkF,MAAAzD,OAAAmJ,MAAA,IACA+H,EAAAD,EAAApR,EAAAkC,GACAxE,KAAAyE,IAAAkP,EAAA3S,QACAkF,MAAAyN,EAAA/H,MAAA,Q5G0hEG4J,iBAAiB,GAAGmM,eAAe,KAAKC,IAAI,SAAS1gB,EAAQzB,EAAOD,G6GxiEvE,GAAAmI,GAAAzG,EAAA,YAEAyG,GAAAA,EAAAkD,EAAAlD,EAAAiP,EAAA,OAAA9C,OAAA5S,EAAA,yBAAA,W7G2iEG2gB,wBAAwB,GAAG3L,YAAY,KAAK4L,IAAI,SAAS5gB,EAAQzB,EAAOD,G8G7iE3E,GAAAmI,GAAAzG,EAAA,YAEAyG,GAAAA,EAAAkD,EAAAlD,EAAAiP,EAAA,OAAA9C,OAAA5S,EAAA,yBAAA,W9GgjEG2gB,wBAAwB,GAAG3L,YAAY,KAAK6L,IAAI,SAAS7gB,EAAQzB,EAAOD,G+GnjE3E0B,EAAA,uBACA,IAAApB,GAAAoB,EAAA,aACAiC,EAAAjC,EAAA,WACA4L,EAAA5L,EAAA,gBACA8gB,EAAA9gB,EAAA,UAAA,eACA+gB,EAAAnV,EAAAG,KAEA/L,GAAA,OAAAoH,KAAAvH,MAAA,WAAA,eAAA,YAAA,iBAAA,eAAA,SAAA+D,GACA,GAAAod,GAAApiB,EAAAgF,GACAoD,EAAAga,GAAAA,EAAA9c,SACA8C,KAAAA,EAAA8Z,IAAA7e,EAAA+E,EAAA8Z,EAAAld,GACAgI,EAAAhI,GAAAmd,M/GsjEG/M,MAAM,EAAEkB,YAAY,GAAGb,UAAU,GAAGgC,eAAe,GAAGvC,SAAS,GAAGb,uBAAuB,KAAKgO,IAAI,SAASjhB,EAAQzB,EAAOD,GgHjkE7H,GAAA4iB,IACA,SAAAA,GACA,GAAAC,GAAA,WACA,QAAAA,MAOA,MALAA,GAAAC,mBAAA,YACAD,EAAAE,eAAA,QACAF,EAAAG,WAAA,YACAH,EAAAI,MAAA,QACAJ,EAAAlgB,IAAA,MACAkgB,IAEAD,GAAAC,UAAAA,GACAD,IAAAA,MACA,IAAAA,IACA,SAAAA,GACA,GAAAM,GAAA,WACA,QAAAA,KACA1iB,KAAAiE,GAAA,uBAEA,MAAAye,KAEAN,GAAAM,QAAAA,GACAN,IAAAA,MACA,IAAAA,IACA,SAAAA,GACA,GAAAO,GAAA,WACA,QAAAA,MAuCA,MAnCAA,GAAAzc,MAAA,WACA,MAAA,SAGAyc,EAAAC,MAAA,WACA,MAAA,SAGAD,EAAAE,QAAA,WACA,MAAA,WAGAF,EAAAG,UAAA,WACA,MAAA,aAGAH,EAAAI,QAAA,WACA,MAAA,WAGAJ,EAAAK,QAAA,WACA,MAAA,WAGAL,EAAAM,MAAA,WACA,MAAA,SAGAN,EAAAO,WAAA,WACA,MAAA,eAGAP,EAAAQ,UAAA,WACA,MAAA,cAEAR,IAEAP,GAAAO,IAAAA,GACAP,IAAAA,MAGA,IAMAA,GANAgB,EAAApjB,MAAAA,KAAAojB,WAAA,SAAAC,EAAA3a,GAEA,QAAA4a,KAAAtjB,KAAAwa,YAAA6I,EADA,IAAA,GAAA9d,KAAAmD,GAAAA,EAAA4D,eAAA/G,KAAA8d,EAAA9d,GAAAmD,EAAAnD,GAEA+d,GAAAle,UAAAsD,EAAAtD,UACAie,EAAAje,UAAA,GAAAke,KAGA,SAAAlB,GACA,GAAAmB,GAAA,SAAAC,GAEA,QAAAD,GAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjT,GACA,SAAAA,IAAAA,EAAAwR,EAAAO,IAAAzc,SACAsd,EAAAziB,KAAAf,MACAA,KAAAyjB,KAAAA,EACAzjB,KAAA0jB,YAAAA,EACA1jB,KAAA2jB,aAAAA,EACA3jB,KAAA4jB,SAAAA,EACA5jB,KAAA6jB,UAAAA,EACA7jB,KAAA4Q,IAAAA,EACA5Q,KAAAiE,GAAA,mBACAjE,KAAA8jB,UAAA,yDAEA,MAbAV,GAAAG,EAAAC,GAaAD,GACAnB,EAAAM,QACAN,GAAAmB,6BAAAA,GACAnB,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA2B,GAAA,SAAAP,GAEA,QAAAO,GAAAL,EAAAM,EAAA9d,GACAsd,EAAAziB,KAAAf,MACAA,KAAA0jB,YAAAA,EACA1jB,KAAAgkB,aAAAA,EACAhkB,KAAAkG,MAAAA,EACAlG,KAAAiE,GAAA,2BACAjE,KAAA8jB,UAAA,4DAEA,MATAV,GAAAW,EAAAP,GASAO,GACA3B,EAAAM,QACAN,GAAA2B,gCAAAA,GACA3B,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA6B,GAAA,SAAAT,GAEA,QAAAS,GAAAP,GACAF,EAAAziB,KAAAf,MACAA,KAAA0jB,YAAAA,EACA1jB,KAAAiE,GAAA,mBACAjE,KAAA8jB,UAAA,oDAEA,MAPAV,GAAAa,EAAAT,GAOAS,GACA7B,EAAAM,QACAN,GAAA6B,wBAAAA,GACA7B,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA8B,GAAA,SAAAV,GAEA,QAAAU,GAAAC,GACAX,EAAAziB,KAAAf,MACAA,KAAAmkB,WAAAA,EACAnkB,KAAAiE,GAAA,kBACAjE,KAAA8jB,UAAA,mDAEA,MAPAV,GAAAc,EAAAV,GAOAU,GACA9B,EAAAM,QACAN,GAAA8B,uBAAAA,GACA9B,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAgC,GAAA,SAAAZ,GAEA,QAAAY,GAAAV,EAAAM,EAAA9d,GACAsd,EAAAziB,KAAAf,MACAA,KAAA0jB,YAAAA,EACA1jB,KAAAgkB,aAAAA,EACAhkB,KAAAkG,MAAAA,EACAlG,KAAAiE,GAAA,0BACAjE,KAAA8jB,UAAA,2DAEA,MATAV,GAAAgB,EAAAZ,GASAY,GACAhC,EAAAM,QACAN,GAAAgC,+BAAAA,GACAhC,IAAAA,MACA,IAAAA,IACA,SAAAA,GACA,GAAAiC,GAAA,WACA,QAAAA,KACArkB,KAAAskB,iBAQA,MANAD,GAAAjf,UAAAmf,QAAA,SAAAC,GACAxkB,KAAAskB,cAAA9c,KAAAgd,IAEAH,EAAAjf,UAAAqf,QAAA,SAAA/I,GACA1b,KAAAskB,cAAA3e,QAAA,SAAA+e,GAAA,MAAAA,GAAAhJ,MAEA2I,IAEAjC,GAAAiC,SAAAA,GACAjC,IAAAA,MAIA,IAAAA,IACA,SAAAA,GACA,GAAAuC,GAAA,EACAC,EAAA,WACA,QAAAA,GAAA3gB,EAAA4gB,GACA7kB,KAAAiE,GAAAA,EACAjE,KAAA6kB,sBAAAA,EACA7kB,KAAA8kB,cACA9kB,KAAA+kB,gBAAA,EACA/kB,KAAAglB,OAAA,EACA,mBAAA/gB,IAAA,MAAAA,EACAjE,KAAAiE,GAAAA,EAGAjE,KAAAiE,IAAA0gB,KAAA5hB,WAEA/C,KAAAilB,WAAA,GAAA7C,GAAAiC,SACArkB,KAAAklB,oBAAA,GAAA9C,GAAAiC,SAiJA,MA7IAO,GAAAxf,UAAA+f,KAAA,WACA,GAAAxc,GAAA,GAAAic,GAAA,KAAA5kB,KAAA6kB,sBAMA,OALAlc,GAAAoc,gBAAA,EACA/kB,KAAAolB,gBAAAzf,QAAA,SAAA0f,GACA,GAAAC,GAAAD,EAAAF,MACAxc,GAAA4c,aAAAD,KAEA3c,GAGAic,EAAAxf,UAAAogB,cAAA,SAAAV,GACA,GAAAW,GAAAzlB,MACA8kB,GAAAA,EAAA9jB,OAAA,GAEA8jB,EAAAnf,QAAA,SAAA+f,GACAD,EAAAF,aAAAG,MAGAd,EAAAxf,UAAAmgB,aAAA,SAAAF,GACA,GAAAI,GAAAzlB,IACA,IAAAqlB,KAAArlB,KAAA8kB,WAAAa,QAAAN,GAAA,IAAA,CAGA,GAAArlB,KAAA4lB,kCAAAP,EAAA1B,aAAA0B,EAAAzU,KACA,KAAA,IAAAhQ,OAAA,qDAAAykB,EAAA1B,aACA,aAAA0B,EAAAzU,IAAA,mCAAA5Q,KAAAiE,GAEA,IAAAohB,EAAAQ,gBAAA7lB,KAAA8lB,yBAAAT,EAAAQ,gBACA,KAAA,IAAAjlB,OAAA,iDAAAykB,EAAAQ,eACA,mCAAA7lB,KAAAiE,GAEAohB,GAAAU,qBAAA/lB,MACAA,KAAA8kB,WAAAtd,KAAA6d,GACAA,EAAAzU,KAAAwR,EAAAO,IAAAzc,SACAlG,KAAAgmB,cAEAX,EAAAY,cAAA,SAAAC,GACAT,EAAAR,WAAAR,SAAApa,OAAAob,QAGAb,EAAAxf,UAAA4gB,YAAA,WACA,IAAA,GAAArlB,GAAA,EAAAA,EAAAX,KAAA8kB,WAAA9jB,OAAAL,IACA,GAAAX,KAAA8kB,WAAAnkB,GAAAwlB,UAEA,WADAnmB,MAAAomB,UAAA,EAKApmB,MAAAomB,UAAA,IAEAxB,EAAAxf,UAAAihB,yBAAA,WACA,IAAA,GAAA1lB,GAAA,EAAAA,EAAAX,KAAA8kB,WAAA9jB,OAAAL,IACAX,KAAA8kB,WAAAnkB,GAAAqlB,eAGApB,EAAAxf,UAAA+gB,QAAA,WACA,MAAAnmB,MAAAglB,OAEAJ,EAAAxf,UAAAghB,SAAA,SAAApB,GACA,GAAAsB,GAAAtmB,KAAAglB,KACAhlB,MAAAglB,MAAAA,EACAhlB,KAAAklB,oBAAAT,SAAA8B,SAAAD,EAAA1C,SAAA5jB,KAAAglB,SAEAJ,EAAAxf,UAAAohB,MAAA,WACAxmB,KAAA8kB,WAAAnf,QAAA,SAAA0f,GACAA,EAAAmB,WAGA5B,EAAAxf,UAAAqhB,OAAA,WACAzmB,KAAA8kB,WAAAnf,QAAA,SAAA0f,GACAA,EAAAoB,YAGA7B,EAAAxf,UAAAshB,QAAA,SAAAlC,GACAxkB,KAAAklB,oBAAAX,QAAAC,IAEAI,EAAAxf,UAAAuhB,cAAA,SAAAC,GACA5mB,KAAAilB,WAAAV,QAAAqC,IAGAhC,EAAAxf,UAAAggB,cAAA,WACA,MAAAplB,MAAA8kB,WAAA9hB,MAAA,IAEA4hB,EAAAxf,UAAAyhB,MAAA,SAAAlD,EAAA/S,GAEA,MADA,UAAAA,IAAAA,EAAAwR,EAAAO,IAAAzc,SACAlG,KAAA4lB,kCAAAjC,EAAA/S,IAEAgU,EAAAxf,UAAA0hB,4BAAA,SAAAnD,GACA,MAAA3jB,MAAA4lB,kCAAAjC,EAAAvB,EAAAO,IAAAzc,UAEA0e,EAAAxf,UAAA2hB,gCAAA,SAAApD,GACA,GAAAhb,KACA,OAAAgb,IAEA3jB,KAAA8kB,WAAAnf,QAAA,SAAA0f,GACAA,EAAA1B,cAAAA,GACAhb,EAAAnB,KAAA6d,KAGA1c,GANA,MAQAic,EAAAxf,UAAAwgB,kCAAA,SAAAjC,EAAA/S,GACA,IAAA+S,IAAA/S,EACA,MAAA,KACA,KAAA,GAAAjQ,GAAA,EAAAA,EAAAX,KAAA8kB,WAAA9jB,OAAAL,IACA,GAAAX,KAAA8kB,WAAAnkB,GAAAgjB,cAAAA,GAAA3jB,KAAA8kB,WAAAnkB,GAAAiQ,KAAAA,EACA,MAAA5Q,MAAA8kB,WAAAnkB,EAGA,OAAA,OAEAikB,EAAAxf,UAAA0gB,yBAAA,SAAAjC,GACA,IAAAA,EACA,MAAA,KACA,KAAA,GAAAljB,GAAA,EAAAA,EAAAX,KAAA8kB,WAAA9jB,OAAAL,IACA,GAAAX,KAAA8kB,WAAAnkB,GAAAklB,gBAAAhC,EACA,MAAA7jB,MAAA8kB,WAAAnkB,EAIA,OAAA,OAEAikB,EAAAxf,UAAA4hB,kBAAA,SAAA/iB,GACA,IAAAA,EACA,MAAA,KACA,KAAA,GAAAtD,GAAA,EAAAA,EAAAX,KAAA8kB,WAAA9jB,OAAAL,IACA,GAAAX,KAAA8kB,WAAAnkB,GAAAsD,IAAAA,EACA,MAAAjE,MAAA8kB,WAAAnkB,EAIA,OAAA,OAEAikB,EAAAxf,UAAA6hB,SAAA,SAAAC,GACAlnB,KAAA8kB,WAAAnf,QAAA,SAAAwhB,GACA,GAAAC,GAAAF,EAAAL,MAAAM,EAAAxD,aAAAwD,EAAAvW,IACAwW,IACAD,EAAAF,SAAAG,MAIAxC,IAEAxC,GAAAwC,wBAAAA,GACAxC,IAAAA,MAIA,IAAAA,IACA,SAAAA,GACA,GAAAiF,GAAA,WACA,QAAAA,GAAA1D,EAAAE,EAAA3d,EAAA0K,GACA,SAAAA,IAAAA,EAAAwR,EAAAO,IAAAzc,SACAlG,KAAA2jB,aAAAA,EACA3jB,KAAA4Q,IAAAA,EACA5Q,KAAAglB,OAAA,EACAhlB,KAAAiE,GAAA,GAAAojB,EAAAC,gCAAA,IACAtnB,KAAAunB,eAAA,GAAAnF,GAAAiC,SACArkB,KAAAwnB,mBAAA,GAAApF,GAAAiC,SACArkB,KAAAklB,oBAAA,GAAA9C,GAAAiC,SACArkB,KAAAynB,mBAAA,GAAArF,GAAAiC,SACArkB,KAAA0nB,SAAAxhB,GACAlG,KAAA2nB,aAAAzhB,GACAlG,KAAA4nB,aAAA/D,GA0HA,MAvHAwD,GAAAjiB,UAAA+f,KAAA,WACA,GAAAxc,GAAA,GAAA0e,GAAArnB,KAAA2jB,aAAA3jB,KAAA6lB,eAAA7lB,KAAA6nB,WAAA7nB,KAAA4Q,IAEA,OADAjI,GAAAgf,aAAA3nB,KAAA8nB,gBACAnf,GAEA0e,EAAAjiB,UAAA+gB,QAAA,WACA,MAAAnmB,MAAAglB,OAEAqC,EAAAjiB,UAAA0iB,aAAA,WACA,MAAA9nB,MAAA+nB,WAEAV,EAAAjiB,UAAA2gB,qBAAA,SAAAiC,GACAhoB,KAAAgoB,mBACAC,MAAA,gFAEAjoB,KAAAgoB,kBAAAA,GAEAX,EAAAjiB,UAAA8iB,qBAAA,WACA,MAAAloB,MAAAgoB,mBAEAX,EAAAjiB,UAAAyiB,SAAA,WACA,MAAA7nB,MAAAkG,OAEAmhB,EAAAjiB,UAAAsiB,SAAA,SAAA9D,GACA,GAAAuE,GAAAd,EAAAe,WAAAxE,EACA,IAAA5jB,KAAAkG,OAAAiiB,EAAA,CAEA,GAAA5B,GAAAvmB,KAAAkG,KACAlG,MAAAkG,MAAAiiB,EACAnoB,KAAAomB,SAAApmB,KAAAqoB,eAAAroB,KAAA+nB,UAAAI,IACAnoB,KAAAunB,eAAA9C,SAAA8B,SAAAA,EAAA3C,SAAAuE,MAEAd,EAAAjiB,UAAAijB,eAAA,SAAAN,EAAA7hB,GACA,MAAA,OAAA6hB,EACA,MAAA7hB,EAGA6hB,GAAA7hB,GAGAmhB,EAAAjiB,UAAA4gB,YAAA,WACAhmB,KAAAomB,SAAApmB,KAAAqoB,eAAAroB,KAAA+nB,UAAA/nB,KAAAkG,SAEAmhB,EAAAjiB,UAAAghB,SAAA,SAAApB,GACA,GAAAsB,GAAAtmB,KAAAglB,KACAhlB,MAAAglB,MAAAA,EACAhlB,KAAAklB,oBAAAT,SAAA8B,SAAAD,EAAA1C,SAAA5jB,KAAAglB,QACAhlB,KAAAgoB,mBACAhoB,KAAAgoB,kBAAAhC,eAEAqB,EAAAjiB,UAAAwiB,aAAA,SAAAU,GACA,GAAAtoB,KAAA6jB,WAAAyE,EAAA,CAEA,GAAAC,GAAAvoB,KAAA6jB,SACA7jB,MAAA6jB,UAAAyE,EACAtoB,KAAAwnB,mBAAA/C,SAAA8B,SAAAgC,EAAA3E,SAAA0E,MAEAjB,EAAAjiB,UAAAygB,aAAA,WACA,MAAA7lB,MAAA6jB,WAEAwD,EAAAjiB,UAAAuiB,aAAA,SAAAI,GACA,GAAA/nB,KAAA+nB,WAAAA,EAAA,CAEA,GAAAS,GAAAxoB,KAAA+nB,SACA/nB,MAAA+nB,UAAAA,EACA/nB,KAAAomB,SAAApmB,KAAAqoB,eAAAN,EAAA/nB,KAAAkG,QACAlG,KAAAynB,mBAAAhD,SAAA8B,SAAAiC,EAAA5E,SAAAmE,MAEAV,EAAAjiB,UAAAqhB,OAAA,WACAzmB,KAAA2nB,aAAA3nB,KAAAkG,OACAlG,KAAAomB,UAAA,IAEAiB,EAAAjiB,UAAAohB,MAAA,WACAxmB,KAAA0nB,SAAA1nB,KAAA+nB,WACA/nB,KAAAomB,UAAA,IAEAiB,EAAAe,WAAA,SAAAliB,GACA,GAAA,MAAAA,GAAAzD,QAAAyD,EACA,MAAA,KAEA,IAAAyC,GAAAzC,GACAyC,YAAA2I,SAAA3I,YAAA8f,UAAA9f,YAAA+f,WACA/f,EAAAzC,EAAAyiB,WAEAhgB,YAAA0e,KACAvH,QAAA8I,IAAA,mGACAjgB,EAAA3I,KAAAooB,WAAAliB,EAAAA,OAEA,IAAAmZ,IAAA,CAIA,KAHArf,KAAA6oB,sBAAAlD,cAAAhd,IAAA,IAAAA,YAAAmgB,SACAzJ,GAAA,IAEAA,EACA,KAAA,IAAAze,OAAA,wDAAAsF,GAEA,OAAAyC,IAEA0e,EAAAjiB,UAAA6gB,cAAA,SAAAzB,GACAxkB,KAAAunB,eAAAhD,QAAAC,GACAA,GAAA+B,SAAAvmB,KAAAkG,MAAA0d,SAAA5jB,KAAAkG,SAEAmhB,EAAAjiB,UAAA2jB,kBAAA,SAAAvE,GACAxkB,KAAAwnB,mBAAAjD,QAAAC,IAEA6C,EAAAjiB,UAAAshB,QAAA,SAAAlC,GACAxkB,KAAAklB,oBAAAX,QAAAC,IAEA6C,EAAAjiB,UAAA4jB,kBAAA,SAAAxE,GACAxkB,KAAAynB,mBAAAlD,QAAAC,IAEA6C,EAAAjiB,UAAA6hB,SAAA,SAAAG,GACAA,IACApnB,KAAA4nB,aAAAR,EAAAvB,gBACA7lB,KAAA2nB,aAAAP,EAAAU,gBACA9nB,KAAA0nB,SAAAN,EAAAlhB,SAGAmhB,EAAAwB,uBAAA,SAAA,SAAA,WACAxB,EAAAC,6BAAA,EACAD,IAEAjF,GAAAiF,gBAAAA,GACAjF,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA6G,GAAA,SAAAzF,GAEA,QAAAyF,GAAAvF,EAAA6C,EAAA3C,GACAJ,EAAAziB,KAAAf,MACAA,KAAA0jB,YAAAA,EACA1jB,KAAAumB,SAAAA,EACAvmB,KAAA4jB,SAAAA,EACA5jB,KAAAiE,GAAA,eACAjE,KAAA8jB,UAAA,gDAEA,MATAV,GAAA6F,EAAAzF,GASAyF,GACA7G,EAAAM,QACAN,GAAA6G,oBAAAA,GACA7G,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA8G,GAAA,SAAA1F,GAEA,QAAA0F,GAAA9e,GACAoZ,EAAAziB,KAAAf,MACAA,KAAAiE,GAAAmG,EACApK,KAAA8jB,UAAA,yCAEA,MANAV,GAAA8F,EAAA1F,GAMA0F,GACA9G,EAAAM,QACAN,GAAA8G,aAAAA,GACA9G,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA+G,GAAA,SAAA3F,GAEA,QAAA2F,KACA3F,EAAAziB,KAAAf,MACAA,KAAAiE,GAAA,QACAjE,KAAA8jB,UAAA,8CAEA,MANAV,GAAA+F,EAAA3F,GAMA2F,GACA/G,EAAAM,QACAN,GAAA+G,kBAAAA,GACA/G,IAAAA,MAMA,IAAAA,IACA,SAAAA,GAEA,GAAAgH,GAAA,WACA,QAAAA,MAKA,MAHAA,GAAAhkB,UAAAikB,MAAA,SAAA/N,GACA,OAAAA,EAAAgO,UAEAF,IAEAhH,GAAAgH,iBAAAA,CAEA,IAAAG,GAAA,WAEA,QAAAA,GAAAC,EAAAC,GACA,SAAAD,IAAAA,GAAA,GACA,SAAAC,IAAAA,EAAA,IACAzpB,KAAAwpB,QAAAA,EACAxpB,KAAAypB,aAAAA,EAwCA,MAtCAF,GAAAnkB,UAAAikB,MAAA,SAAA/N,GACA,GAAA3S,KAEA,OADA3I,MAAA0pB,YAAA1pB,KAAAypB,aAAAnO,EAAA3S,GACAA,GAGA4gB,EAAAnkB,UAAAskB,YAAA,SAAAD,EAAAnO,EAAA+N,GACA,KAAA/N,EAAAta,OAAA,GAAA,EAAAyoB,GAAA,CAEA,GAAAE,GAAArO,EAAAgO,OACA,IAAAtpB,KAAAwpB,SAAAG,EAAAC,kBAAAxH,GAAA6G,sBAAAU,EAAAnK,QAAA,CAGA,IAAA,GAFAqK,GAAA,KACAC,EAAAH,EAAAC,QACAjpB,EAAA,EAAAA,EAAA0oB,EAAAroB,QAAA,MAAA6oB,EAAAlpB,IACA,GAAA0oB,EAAA1oB,GAAAipB,kBAAAxH,GAAA6G,oBAAA,CACA,GAAAc,GAAAV,EAAA1oB,GAAAipB,OACAE,GAAApG,aAAAqG,EAAArG,aAAAqG,EAAAnG,UAAAkG,EAAAvD,WACAsD,EAAAE,GAIAF,EACAA,EAAAjG,SAAAkG,EAAAlG,SAGAyF,EAAA7hB,KAAAmiB,OAIAN,GAAA7hB,KAAAmiB,EAEAA,GAAAnK,SACA,0CAAAmK,EAAAC,QAAA,WACA,+CAAAD,EAAAC,QAAA,WAEA5pB,KAAA0pB,YAAAD,EAAA,EAAAnO,EAAA+N,KAGAE,IAEAnH,GAAAmH,oBAAAA,GACAnH,IAAAA,MACA,IAAAA,IACA,SAAAA,GACA,GAAA4H,GAAA,WACA,QAAAA,MAaA,MAXAA,GAAA5kB,UAAA6kB,OAAA,SAAAC,GACA,MAAAC,MAAAC,UAAAF,IAEAF,EAAA5kB,UAAAilB,OAAA,SAAAC,GACA,MAAA,gBAAAA,GACAH,KAAAI,MAAAD,GAGAA,GAGAN,IAEA5H,GAAA4H,MAAAA,GACA5H,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAoI,GAAA,SAAAhH,GAEA,QAAAgH,GAAApgB,GACAoZ,EAAAziB,KAAAf,MACAA,KAAAiE,GAAAmG,EACApK,KAAA8jB,UAAA,0CAEA,MANAV,GAAAoH,EAAAhH,GAMAgH,GACApI,EAAAM,QACAN,GAAAoI,cAAAA,GACApI,IAAAA,MAIA,IAAAA,IACA,SAAAA,GACA,GAAAqI,GAAA,SAAAjH,GAEA,QAAAiH,GAAAzC,GACAxE,EAAAziB,KAAAf,MACAA,KAAA8kB,cACA9kB,KAAA+kB,gBAAA,EACA/kB,KAAAiE,GAAA,0BACAjE,KAAA8jB,UAAA,2DACA9jB,KAAAyjB,KAAAuE,EAAA/jB,GACAjE,KAAA0qB,OAAA1C,EAAAnD,qBACA,IAAA8F,GAAA3qB,KAAA8kB,UACAkD,GAAA5C,gBAAAzf,QAAA,SAAA+f,GACAiF,EAAAnjB,MACAmc,aAAA+B,EAAA/B,aACA1f,GAAAyhB,EAAAzhB,GACA4f,UAAA6B,EAAAG,eACA3f,MAAAwf,EAAAmC,WACAjX,IAAA8U,EAAA9U,QAIA,MApBAwS,GAAAqH,EAAAjH,GAoBAiH,GACArI,EAAAM,QACAN,GAAAqI,+BAAAA,GACArI,IAAAA,MACA,IAAAA,IACA,SAAAA,GACA,GAAAjhB,GAAA,WACA,QAAAA,KACAnB,KAAAgO,QACAhO,KAAAsF,QA2CA,MAzCAnE,GAAAiE,UAAAwlB,IAAA,SAAAtmB,EAAA4B,GACAlG,KAAA6qB,YAAAvmB,IACAtE,KAAAgO,KAAAxG,KAAAlD,GAEAtE,KAAAsF,KAAAtF,KAAAgO,KAAA2X,QAAArhB,IAAA4B,GAEA/E,EAAAiE,UAAAY,IAAA,SAAA1B,GACA,MAAAtE,MAAAsF,KAAAtF,KAAAgO,KAAA2X,QAAArhB,KAEAnD,EAAAiE,UAAA0lB,OAAA,SAAAxmB,GACA,GAAAtE,KAAA6qB,YAAAvmB,GAAA,CACA,GAAAE,GAAAxE,KAAAgO,KAAA2X,QAAArhB,EAGA,OAFAtE,MAAAgO,KAAA+c,OAAAvmB,EAAA,GACAxE,KAAAsF,KAAAylB,OAAAvmB,EAAA,IACA,EAEA,OAAA,GAEArD,EAAAiE,UAAA4lB,QAAA,WACA,MAAA,IAAAhrB,KAAAgO,KAAAhN,QAEAG,EAAAiE,UAAApE,OAAA,WACA,MAAAhB,MAAAgO,KAAAhN,QAEAG,EAAAiE,UAAAO,QAAA,SAAA6Z,GACA,IAAA,GAAA7e,GAAA,EAAAA,EAAAX,KAAAgO,KAAAhN,OAAAL,IACA6e,EAAAxf,KAAAgO,KAAArN,GAAAX,KAAAsF,KAAA3E,KAGAQ,EAAAiE,UAAAylB,YAAA,SAAAvmB,GACA,MAAAtE,MAAAgO,KAAA2X,QAAArhB,GAAA,IAEAnD,EAAAiE,UAAA6lB,cAAA,SAAA/kB,GACA,MAAAlG,MAAAsF,KAAAqgB,QAAAzf,GAAA,IAEA/E,EAAAiE,UAAAyJ,OAAA,WACA,MAAA7O,MAAAsF,KAAAtC,MAAA,IAEA7B,EAAAiE,UAAA8lB,OAAA,WACA,MAAAlrB,MAAAgO,KAAAhL,MAAA,IAEA7B,IAEAihB,GAAAjhB,IAAAA,GACAihB,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA+I,GAAA,SAAA3H,GAEA,QAAA2H,GAAAT,GACAlH,EAAAziB,KAAAf,MACAA,KAAA0qB,OAAAA,EACA1qB,KAAAiE,GAAA,qCACAjE,KAAA8jB,UAAA,2EAEA,MAPAV,GAAA+H,EAAA3H,GAOA2H,GACA/I,EAAAM,QACAN,GAAA+I,+CAAAA,GACA/I,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAgJ,GAAA,SAAA5H,GAEA,QAAA4H,GAAA3H,GACAD,EAAAziB,KAAAf,MACAA,KAAAyjB,KAAAA,EACAzjB,KAAAiE,GAAA,2BACAjE,KAAA8jB,UAAA,iEAEA,MAPAV,GAAAgI,EAAA5H,GAOA4H,GACAhJ,EAAAM,QACAN,GAAAgJ,qCAAAA,GACAhJ,IAAAA,MAeA,IAAAA,IACA,SAAAA,IACA,SAAAiJ,GACAA,EAAAA,EAAA,MAAA,SAAA,QACAA,EAAAA,EAAA,QAAA,WAAA,WACAjJ,EAAAiJ,OAAAjJ,EAAAiJ,SACA,IAAAA,GAAAjJ,EAAAiJ,KACAC,EAAA,WACA,QAAAA,GAAAC,GACAvrB,KAAAurB,cAAAA,EACAvrB,KAAAwrB,mBAAA,GAAApJ,GAAAjhB,IACAnB,KAAAyrB,0BAAA,GAAArJ,GAAAjhB,IACAnB,KAAA0rB,gBAAA,GAAAtJ,GAAAjhB,IACAnB,KAAA2rB,uBAAA,GAAAvJ,GAAAjhB,IACAnB,KAAA4rB,oBAAA,GAAAxJ,GAAAiC,SAwOA,MAtOAiH,GAAAlmB,UAAAymB,iBAAA,WACA,MAAA7rB,MAAAurB,eAEAD,EAAAlmB,UAAA0mB,cAAA,SAAAC,GACA,GAAAtG,GAAAzlB,IACA,KAAA+rB,EAAAhH,eAAA,CAGA,GAAAiH,GAAAhsB,KAAAurB,cAAAU,qBACAC,EAAA,GAAA9J,GAAAqI,+BAAAsB,EACAC,GAAAG,KAAAD,EAAA,MACAH,EAAA3G,gBAAAzf,QAAA,SAAA0f,GACAI,EAAA2G,kBAAA/G,OAGAiG,EAAAlmB,UAAAgnB,kBAAA,SAAA/G,GACA,GAAAI,GAAAzlB,IACAA,MAAAqsB,iBAAAhH,GACAA,EAAAQ,gBACA7lB,KAAAssB,wBAAAjH,GAIAA,EAAAY,cAAA,SAAAC,GACA,GAAAqG,GAAA,GAAAnK,GAAA6G,oBAAA5D,EAAAphB,GAAAiiB,EAAAK,SAAAL,EAAAtC,SAEA,IADA6B,EAAA8F,cAAAU,qBAAAE,KAAAI,EAAA,MACAlH,EAAAQ,eAAA,CACA,GAAA8E,GAAAlF,EAAA+G,uBAAA,SAAA9G,GACA,MAAAA,KAAAL,GAAAK,EAAAG,gBAAAR,EAAAQ,gBAEA8E,GAAAhlB,QAAA,SAAA+f,GACAA,EAAAgC,SAAArC,EAAAwC,iBAKAxC,EAAA2D,kBAAA,SAAA9C,GACA,GAAAuG,GAAA,GAAArK,GAAA6B,wBAAAoB,EAAAphB,GAEA,IADAwhB,EAAA8F,cAAAU,qBAAAE,KAAAM,EAAA,MACApH,EAAAQ,eAAA,CACA,GAAA8E,GAAAlF,EAAA+G,uBAAA,SAAA9G,GACA,MAAAA,KAAAL,GAAAK,EAAAG,gBAAAR,EAAAQ,gBAEA8E,GAAAhlB,QAAA,SAAA+f,GACAA,EAAAiC,aAAAtC,EAAAyC,qBAIAzC,EAAA0D,kBAAA,SAAA7C,GACA,GAAAwG,GAAA,GAAAtK,GAAAgC,+BAAAiB,EAAAphB,GAAAme,EAAAC,UAAAC,mBAAA4D,EAAAtC,SACA6B,GAAA8F,cAAAU,qBAAAE,KAAAO,EAAA,SAGApB,EAAAlmB,UAAAqc,IAAA,SAAAsK,GACA,IAAAA,EACA,OAAA,CAEA/rB,MAAAwrB,mBAAAX,YAAAkB,EAAA9nB,KACA6b,QAAA8I,IAAA,iCAAAmD,EAAA9nB,GAEA,IAAA0oB,IAAA,CAQA,OAPA3sB,MAAAwrB,mBAAAP,cAAAc,KACA/rB,KAAAwrB,mBAAAZ,IAAAmB,EAAA9nB,GAAA8nB,GACA/rB,KAAA4sB,2BAAAb,GACA/rB,KAAA8rB,cAAAC,GACA/rB,KAAA4rB,oBAAAnH,SAAAoI,UAAAxB,EAAAyB,MAAAC,wBAAAhB,IACAY,GAAA,GAEAA,GAEArB,EAAAlmB,UAAA0lB,OAAA,SAAAiB,GACA,GAAAtG,GAAAzlB,IACA,KAAA+rB,EACA,OAAA,CAEA,IAAAiB,IAAA,CAaA,OAZAhtB,MAAAwrB,mBAAAP,cAAAc,KACA/rB,KAAAitB,8BAAAlB,GACA/rB,KAAAwrB,mBAAAV,OAAAiB,EAAA9nB,IACA8nB,EAAA3G,gBAAAzf,QAAA,SAAA0f,GACAI,EAAAyH,oBAAA7H,GACAA,EAAAQ,gBACAJ,EAAA0H,2BAAA9H,KAGArlB,KAAA4rB,oBAAAnH,SAAAoI,UAAAxB,EAAA+B,QAAAL,wBAAAhB,IACAiB,GAAA,GAEAA,GAEA1B,EAAAlmB,UAAAonB,uBAAA,SAAAa,GACA,GAAAC,KAQA,OAPAttB,MAAAwrB,mBAAA7lB,QAAA,SAAArB,EAAAynB,GACAA,EAAA3G,gBAAAzf,QAAA,SAAA+f,GACA2H,EAAA3H,IACA4H,EAAA9lB,KAAAke,OAIA4H,GAEAhC,EAAAlmB,UAAAwnB,2BAAA,SAAAb,GACA,GAAAA,EAAA,CAGA,GAAA5hB,GAAA4hB,EAAAlH,qBACA,IAAA1a,EAAA,CAGA,GAAAqhB,GAAAxrB,KAAAyrB,0BAAAzlB,IAAAmE,EACAqhB,KACAA,KACAxrB,KAAAyrB,0BAAAb,IAAAzgB,EAAAqhB,IAEAA,EAAA7F,QAAAoG,GAAA,IACAP,EAAAhkB,KAAAukB,MAGAT,EAAAlmB,UAAA6nB,8BAAA,SAAAlB,GACA,GAAAA,GAAAA,EAAA,sBAAA,CAGA,GAAAP,GAAAxrB,KAAAyrB,0BAAAzlB,IAAA+lB,EAAAlH,sBACA2G,KAGAA,EAAAxqB,OAAA,IACAwqB,EAAAT,OAAAS,EAAA7F,QAAAoG,GAAA,GAEA,IAAAP,EAAAxqB,QACAhB,KAAAyrB,0BAAAX,OAAAiB,EAAAlH,0BAGAyG,EAAAlmB,UAAAmoB,yBAAA,WACA,MAAAvtB,MAAAwrB,mBAAAN,SAAAloB,MAAA,IAEAsoB,EAAAlmB,UAAAooB,uBAAA,WACA,MAAAxtB,MAAAwrB,mBAAA3c,UAEAyc,EAAAlmB,UAAAqoB,0BAAA,SAAAxpB,GACA,MAAAjE,MAAAwrB,mBAAAxlB,IAAA/B,IAEAqnB,EAAAlmB,UAAAsoB,+BAAA,SAAAvjB,GACA,MAAAA,IAAAnK,KAAAyrB,0BAAAZ,YAAA1gB,GAGAnK,KAAAyrB,0BAAAzlB,IAAAmE,GAAAnH,MAAA,OAEAsoB,EAAAlmB,UAAAuoB,iCAAA,SAAA9I,GACA,GAAAY,GAAAzlB,KACAwrB,EAAAxrB,KAAA0tB,+BAAA7I,EACA2G,GAAA7lB,QAAA,SAAAioB,GACAnI,EAAAoI,wBAAAD,GAAA,KAEA5tB,KAAAurB,cAAAU,qBAAAE,KAAA,GAAA/J,GAAA+I,+CAAAtG,GAAApiB,SAEA6oB,EAAAlmB,UAAAyoB,wBAAA,SAAA9B,EAAAnT,GACA,GAAAmT,GAGA/rB,KAAA8tB,0BAAA/B,EAAA9nB,IAAA,CAEA,GADAjE,KAAA8qB,OAAAiB,IACAnT,GAAAmT,EAAAhH,eACA,MAEA/kB,MAAAurB,cAAAU,qBAAAE,KAAA,GAAA/J,GAAAgJ,qCAAAW,EAAA9nB,IAAA,QAGAqnB,EAAAlmB,UAAA0oB,0BAAA,SAAA7pB,GACA,MAAAjE,MAAAwrB,mBAAAX,YAAA5mB,IAEAqnB,EAAAlmB,UAAAinB,iBAAA,SAAAhH,GACAA,IAAArlB,KAAA0rB,gBAAAb,YAAAxF,EAAAphB,KAGAjE,KAAA0rB,gBAAAd,IAAAvF,EAAAphB,GAAAohB,IAEAiG,EAAAlmB,UAAA8nB,oBAAA,SAAA7H,GACAA,GAAArlB,KAAA0rB,gBAAAb,YAAAxF,EAAAphB,KAGAjE,KAAA0rB,gBAAAZ,OAAAzF,EAAAphB,KAEAqnB,EAAAlmB,UAAA4hB,kBAAA,SAAA/iB,GACA,MAAAjE,MAAA0rB,gBAAA1lB,IAAA/B,IAEAqnB,EAAAlmB,UAAAknB,wBAAA,SAAAjH,GACA,GAAAA,GAAAA,EAAAQ,eAAA,CAGA,GAAAf,GAAA9kB,KAAA2rB,uBAAA3lB,IAAAqf,EAAAQ,eACAf,KACAA,KACA9kB,KAAA2rB,uBAAAf,IAAAvF,EAAAQ,eAAAf,IAEAA,EAAAa,QAAAN,GAAA,IACAP,EAAAtd,KAAA6d,KAGAiG,EAAAlmB,UAAA+nB,2BAAA,SAAA9H,GACA,GAAAA,GAAAA,EAAAQ,eAAA,CAGA,GAAAf,GAAA9kB,KAAA2rB,uBAAA3lB,IAAAqf,EAAAQ,eACAf,KAGAA,EAAA9jB,OAAA,IACA8jB,EAAAiG,OAAAjG,EAAAa,QAAAN,GAAA,GAEA,IAAAP,EAAA9jB,QACAhB,KAAA2rB,uBAAAb,OAAAzF,EAAAQ,mBAGAyF,EAAAlmB,UAAA2oB,6BAAA,SAAAlK,GACA,MAAAA,IAAA7jB,KAAA2rB,uBAAAd,YAAAhH,GAGA7jB,KAAA2rB,uBAAA3lB,IAAA6d,GAAA7gB,MAAA,OAEAsoB,EAAAlmB,UAAA4oB,mBAAA,SAAAxJ,GACAxkB,KAAA4rB,oBAAArH,QAAAC,IAEA8G,EAAAlmB,UAAA6oB,0BAAA,SAAApJ,EAAAL,GACAxkB,KAAA4rB,oBAAArH,QAAA,SAAA2J,GACAA,EAAAnB,wBAAAlI,uBAAAA,GACAL,EAAA0J,MAIA5C,IAEAlJ,GAAAkJ,iBAAAA,GACAlJ,IAAAA,MASA,IAAAA,IACA,SAAAA,GACA,GAAA+L,GAAA,WACA,QAAAA,MAmGA,MAjGAA,GAAA/oB,UAAAgpB,mBAAA,SAAAC,GACAruB,KAAAquB,gBAAAA,GAEAF,EAAA/oB,UAAA6mB,mBAAA,WACA,MAAAjsB,MAAAquB,iBAEAF,EAAA/oB,UAAA+mB,KAAA,SAAAmC,EAAAC,GACAvuB,KAAAquB,gBAAAlC,KAAA,GAAA/J,GAAA8G,aAAAoF,GAAAC,IAEAJ,EAAA/oB,UAAAopB,UAAA,SAAAD,GACAvuB,KAAAquB,gBAAAlC,KAAA,GAAA/J,GAAA+G,kBAAAoF,IAGAJ,EAAA/oB,UAAAigB,UAAA,SAAA1B,EAAAE,EAAA3d,EAAA0K,GACA,MAAA,IAAAwR,GAAAiF,gBAAA1D,EAAAE,EAAA3d,EAAA0K,IAGAud,EAAA/oB,UAAA4iB,kBAAA,SAAA/jB,EAAAkG,GAEA,IAAA,GADA2a,MACArgB,EAAA,EAAAA,EAAApC,UAAArB,OAAAyD,IACAqgB,EAAArgB,EAAA,GAAApC,UAAAoC,EAEA,IAAAsnB,GAAA,GAAA3J,GAAAwC,wBAAA3gB,EAAAkG,EAOA,OANA2a,IAAAA,EAAA9jB,OAAA,GACA8jB,EAAAnf,QAAA,SAAA0f,GACA0G,EAAAxG,aAAAF,KAGArlB,KAAAyuB,sBAAAhN,IAAAsK,GACAA,GAEAoC,EAAA/oB,UAAAspB,oBAAA,SAAAC,GACA3uB,KAAA2uB,iBAAAA,GAEAR,EAAA/oB,UAAAqpB,oBAAA,WACA,MAAAzuB,MAAA2uB,kBAEAR,EAAA/oB,UAAAmoB,yBAAA,WACA,MAAAvtB,MAAAyuB,sBAAAlB,4BAEAY,EAAA/oB,UAAAooB,uBAAA,WACA,MAAAxtB,MAAAyuB,sBAAAjB,0BAEAW,EAAA/oB,UAAAsoB,+BAAA,SAAA7I,GACA,MAAA7kB,MAAAyuB,sBAAAf,+BAAA7I,IAEAsJ,EAAA/oB,UAAAyhB,MAAA,SAAA5iB,GACA,MAAAjE,MAAAytB,0BAAAxpB,IAEAkqB,EAAA/oB,UAAAqoB,0BAAA,SAAAxpB,GACA,MAAAjE,MAAAyuB,sBAAAhB,0BAAAxpB,IAEAkqB,EAAA/oB,UAAAyoB,wBAAA,SAAAe,GACA5uB,KAAAyuB,sBAAAZ,wBAAAe,GAAA,IAEAT,EAAA/oB,UAAAuoB,iCAAA,SAAA9I,GACA7kB,KAAAyuB,sBAAAd,iCAAA9I,IAEAsJ,EAAA/oB,UAAAypB,iCAAA,SAAA7G,GACA,GAAAvC,GAAAzlB,IACAgoB,GAAA5C,gBAAAzf,QAAA,SAAAyhB,GACA3B,EAAAqJ,yBAAA1H,MAGA+G,EAAA/oB,UAAA0pB,yBAAA,SAAA1H,GACA,GAAAA,EAAAvB,eAAA,CAEA,GAAAf,GAAA9kB,KAAAyuB,sBAAAV,6BAAA3G,EAAAvB,eACAf,GAAAnf,QAAA,SAAAwhB,GACAA,EAAAvW,KAAAwW,EAAAxW,MAEAuW,EAAAO,SAAAN,EAAAS,YACAV,EAAAQ,aAAAP,EAAAU,qBAGAqG,EAAA/oB,UAAAwL,IAAA,SAAAoX,EAAArE,EAAAzd,EAAA0K,GACA,GAAAme,GAAA,GAAA3M,GAAAiF,gBAAA1D,EAAA,KAAAzd,EAAA0K,EAEA,OADA5Q,MAAAgvB,oBAAAhH,EAAA+G,GACAA,GAEAZ,EAAA/oB,UAAA4pB,oBAAA,SAAAhH,EAAA+G,GACA/G,EAAAzC,aAAAwJ,GACA/uB,KAAAyuB,sBAAArC,kBAAA2C,GACA/G,EAAAjD,gBACA/kB,KAAAquB,gBAAAlC,KAAA,GAAA/J,GAAAmB,6BAAAyE,EAAA/jB,GAAA8qB,EAAA9qB,GAAA8qB,EAAApL,aAAAoL,EAAAlH,WAAAkH,EAAAlJ,eAAAkJ,EAAAne,KAAA,OAIAud,EAAA/oB,UAAA6pB,mBAAA,SAAAC,EAAAC,GACAnvB,KAAAquB,gBAAAe,gBAAA,GAAAhN,GAAA8G,aAAAgG,IACAlvB,KAAAquB,gBAAAgB,kBAAA,GAAAjN,GAAAoI,cAAA2E,IACAnvB,KAAAquB,gBAAAiB,gBAAA,GACAtvB,KAAAquB,gBAAAkB,UAEApB,EAAA/oB,UAAAoqB,kBAAA,WACAxvB,KAAAquB,gBAAAiB,gBAAA,IAEAnB,IAEA/L,GAAA+L,cAAAA,GACA/L,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAqN,GAAA,SAAAjM,GAEA,QAAAiM,GAAAhM,GACAD,EAAAziB,KAAAf,MACAA,KAAAyjB,KAAAA,EACAzjB,KAAAiE,GAAA,2BACAjE,KAAA8jB,UAAA,4DAEA,MAPAV,GAAAqM,EAAAjM,GAOAiM,GACArN,EAAAM,QACAN,GAAAqN,gCAAAA,GACArN,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAsN,GAAA,SAAAlM,GAEA,QAAAkM,GAAAjM,GACAD,EAAAziB,KAAAf,MACAA,KAAAyjB,KAAAA,EACAzjB,KAAAiE,GAAA,yBACAjE,KAAA8jB,UAAA,+DAEA,MAPAV,GAAAsM,EAAAlM,GAOAkM,GACAtN,EAAAM,QACAN,GAAAsN,mCAAAA,GACAtN,IAAAA,MAKA,IAAAA,IACA,SAAAA,GACA,GAAAuN,GAAA,SAAAnM,GAEA,QAAAmM,GAAAlM,EAAAiH,EAAA/G,EAAAE,EAAAD,EAAAhT,GACA,SAAAA,IAAAA,EAAAwR,EAAAO,IAAAzc,SACAsd,EAAAziB,KAAAf,MACAA,KAAAyjB,KAAAA,EACAzjB,KAAA0qB,OAAAA,EACA1qB,KAAA2jB,aAAAA,EACA3jB,KAAA6jB,UAAAA,EACA7jB,KAAA4jB,SAAAA,EACA5jB,KAAA4Q,IAAAA,EACA5Q,KAAAiE,GAAA,sBACAjE,KAAA8jB,UAAA,uDAEA,MAbAV,GAAAuM,EAAAnM,GAaAmM,GACAvN,EAAAM,QACAN,GAAAuN,2BAAAA,GACAvN,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAwN,GAAA,SAAApM,GAEA,QAAAoM,GAAAnM,EAAAoM,GACArM,EAAAziB,KAAAf,MACAA,KAAAyjB,KAAAA,EACAzjB,KAAA6vB,WAAAA,EACA7vB,KAAAiE,GAAA,0BACAjE,KAAA8jB,UAAA,2DAEA,MARAV,GAAAwM,EAAApM,GAQAoM,GACAxN,EAAAM,QACAN,GAAAwN,+BAAAA,GACAxN,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA0N,GAAA,SAAAtM,GAEA,QAAAsM,GAAApF,GACAlH,EAAAziB,KAAAf,MACAA,KAAA0qB,OAAAA,EACA1qB,KAAAiE,GAAA,oCACAjE,KAAA8jB,UAAA,qEAEA,MAPAV,GAAA0M,EAAAtM,GAOAsM,GACA1N,EAAAM,QACAN,GAAA0N,yCAAAA,GACA1N,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA2N,GAAA,SAAAvM,GAEA,QAAAuM,GAAAtM,GACAD,EAAAziB,KAAAf,MACAA,KAAAyjB,KAAAA,EACAzjB,KAAAiE,GAAA,0BACAjE,KAAA8jB,UAAA,2DAEA,MAPAV,GAAA2M,EAAAvM,GAOAuM,GACA3N,EAAAM,QACAN,GAAA2N,+BAAAA,GACA3N,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAA4N,GAAA,SAAAxM,GAEA,QAAAwM,GAAA1qB,GACAke,EAAAziB,KAAAf,MACAA,KAAAsF,KAAAA,EACAtF,KAAAiE,GAAA,OACAjE,KAAA8jB,UAAA,wCAEA,MAPAV,GAAA4M,EAAAxM,GAOAwM,GACA5N,EAAAM,QACAN,GAAA4N,YAAAA,GACA5N,IAAAA,MAuBA,IAAAA,IACA,SAAAA,GACA,GAAA6N,GAAA,WACA,QAAAA,GAAAC,EAAA3E,EAAA4E,EAAA1G,GACA,SAAA0G,IAAAA,EAAA,GACA,SAAA1G,IAAAA,EAAA,IACAzpB,KAAAowB,gBACApwB,KAAAqwB,kBAAA,EACArwB,KAAAswB,aAAA,EACAtwB,KAAAuwB,SAAA,EACAvwB,KAAAkwB,YAAAA,EACAlwB,KAAAurB,cAAAA,EACAvrB,KAAAmwB,QAAAA,EACAnwB,KAAAwwB,MAAA,GAAApO,GAAA4H,MACAhqB,KAAAywB,eAAA,GAAArO,GAAAmH,qBAAA,EAAAE,GA6QA,MA3QAwG,GAAA7qB,UAAAsrB,kBAAA,SAAAC,GACA3wB,KAAAywB,eAAAE,GAEAV,EAAA7qB,UAAAkqB,eAAA,SAAAtM,GACAhjB,KAAAswB,YAAAtN,GAEAiN,EAAA7qB,UAAAgqB,gBAAA,SAAAwB,GACA5wB,KAAA6wB,aAAAD,GAEAX,EAAA7qB,UAAAiqB,kBAAA,SAAAyB,GACA9wB,KAAA+wB,eAAAD,GAEAb,EAAA7qB,UAAA+mB,KAAA,SAAAvC,EAAA2E,GAEA,MADAvuB,MAAAowB,aAAA5oB,MAAAoiB,QAAAA,EAAApK,QAAA+O,IACAvuB,KAAAqwB,qBACArwB,MAAAgxB,cAGAhxB,MAAAixB,cAEAhB,EAAA7qB,UAAA6rB,WAAA,WACA,GAAAxL,GAAAzlB,IACA,IAAAA,KAAAowB,aAAApvB,OAAA,EAAA,CACA,IAAAhB,KAAAswB,YAKA,YADAtwB,KAAAqwB,kBAAA,EAHArwB,MAAAkxB,qBAOAlxB,KAAAqwB,kBAAA,CACA,IAAAc,GAAAnxB,KAAAywB,eAAApH,MAAArpB,KAAAowB,cACAgB,EAAAD,EAAAA,EAAAnwB,OAAA,GAAAwe,QACA0K,EAAAiH,EAAAE,IAAA,SAAAC,GAAA,MAAAA,GAAA1H,SACA5pB,MAAAkwB,YAAAqB,SAAArH,EAAA,SAAAsH,GAEA,GAAAC,KACAD,GAAA7rB,QAAA,SAAAikB,GACA,GAAA8H,GAAAjM,EAAAf,OAAAkF,EACA8H,IACAD,EAAAjqB,KAAAkqB,KAEAN,GACAA,EAAA7C,WAAAkD,GAIAtV,WAAA,WAAA,MAAAsJ,GAAAwL,cAAAxL,EAAA0K,YAGAF,EAAA7qB,UAAAsf,OAAA,SAAAkF,GACA,MAAA,QAAAA,EAAA3lB,GACAjE,KAAA2xB,kBAAA/H,GAEA,2BAAAA,EAAA3lB,GACAjE,KAAA4xB,qCAAAhI,GAEA,qCAAAA,EAAA3lB,GACAjE,KAAA6xB,8CAAAjI,GAEA,2BAAAA,EAAA3lB,GACAjE,KAAA8xB,qCAAAlI,GAEA,gBAAAA,EAAA3lB,GACAjE,KAAA+xB,0BAAAnI,GAEA,oBAAAA,EAAA3lB,GACAjE,KAAAgyB,8BAAApI,GAEA,2BAAAA,EAAA3lB,GACAjE,KAAAiyB,qCAAArI,GAEA,uBAAAA,EAAA3lB,GACAjE,KAAAkyB,iCAAAtI,GAEA,0BAAAA,EAAA3lB,GACAjE,KAAAmyB,yCAAAvI,GAEA,4BAAAA,EAAA3lB,GACAjE,KAAAoyB,sCAAAxI,GAEA,4BAAAA,EAAA3lB,GACAjE,KAAAqyB,sCAAAzI,GAEA,mBAAAA,EAAA3lB,GACAjE,KAAAsyB,6BAAA1I,IAGA9J,QAAA8I,IAAA,kCAAAgB,GAEA,OAEAqG,EAAA7qB,UAAAusB,kBAAA,SAAAY,GACA,MAAAA,GAAAjtB,MAEA2qB,EAAA7qB,UAAAwsB,qCAAA,SAAAW,GACA,GAAAxG,GAAA/rB,KAAAurB,cAAAkC,0BAAA8E,EAAA9O,KACA,OAAAsI,IAEA/rB,KAAAurB,cAAAkD,sBAAAZ,wBAAA9B,GAAA,GACAA,GAFA,MAIAkE,EAAA7qB,UAAAysB,8CAAA,SAAAU,GAEA,MADAvyB,MAAAurB,cAAAoC,iCAAA4E,EAAA7H,QACA,MAEAuF,EAAA7qB,UAAA0sB,qCAAA,SAAAS,GACA,GAAA9M,GAAAzlB,IACA,IAAAA,KAAAurB,cAAAkD,sBAAAX,0BAAAyE,EAAA9O,MACA,KAAA,IAAA7iB,OAAA,iDAAA2xB,EAAA9O,KAAA,yBAEA,IAAAqB,KACAyN,GAAAzN,WAAAnf,QAAA,SAAA+f;AACA,GAAAqJ,GAAAtJ,EAAA8F,cAAAlG,UAAAK,EAAA/B,aAAA+B,EAAA7B,UAAA6B,EAAAxf,MAAAwf,EAAA9U,IAAA8U,EAAA9U,IAAAwR,EAAAO,IAAAzc,QACA6oB,GAAApH,aAAAjC,EAAAqC,WACArC,EAAAzhB,IAAAyhB,EAAAzhB,GAAAuuB,MAAA,UACAzD,EAAA9qB,GAAAyhB,EAAAzhB,IAEA6gB,EAAAtd,KAAAunB,IAEA,IAAA0D,GAAA,GAAArQ,GAAAwC,wBAAA2N,EAAA9O,KAAA8O,EAAA7H,OASA,OARA+H,GAAAjN,cAAAV,GACAyN,EAAAxN,iBACA0N,EAAA1N,gBAAA,GAEA/kB,KAAAurB,cAAAkD,sBAAAhN,IAAAgR,GACAzyB,KAAAurB,cAAAsD,iCAAA4D,GACAA,EAAApM,2BACAoM,EAAAzM,cACAyM,GAEAxC,EAAA7qB,UAAA2sB,0BAAA,SAAAQ,GACA,GAAAxD,GAAA/uB,KAAAurB,cAAAkD,sBAAAzH,kBAAAuL,EAAA7O,YACA,OAAAqL,GAIAA,EAAAlH,YAAA0K,EAAA3O,SAEA,MASAmL,EAAArH,SAAA6K,EAAA3O,UACA,OAfA9D,QAAA8I,IAAA,qBAAA2J,EAAA7O,YAAA,uCAAA6O,EAAAhM,SAAA,iBAAAgM,EAAA3O,UACA,OAgBAqM,EAAA7qB,UAAA4sB,8BAAA,SAAAO,GACA,GAAAxD,GAAA/uB,KAAAurB,cAAAkD,sBAAAzH,kBAAAuL,EAAA7O,YACA,OAAAqL,IAIAA,EAAAtI,SACA,OAJA3G,QAAA8I,IAAA,qBAAA2J,EAAA7O,YAAA,sCACA,OAKAuM,EAAA7qB,UAAA6sB,qCAAA,SAAAM,GACA,GAAAG,GAAA1yB,KAAAurB,cAAAkD,sBAAAhB,0BAAA8E,EAAA9O,KACA,KAAAiP,EAEA,MADA5S,SAAA8I,IAAA,wBAAA2J,EAAA9O,KAAA,8BACA,IAEA,IAAAkP,GAAA3yB,KAAAurB,cAAAkD,sBAAAhB,0BAAA8E,EAAA1C,WACA,OAAA8C,IAIAD,EAAAzL,SAAA0L,GACAD,IAJA5S,QAAA8I,IAAA,wBAAA2J,EAAA1C,WAAA,8BACA,OAKAI,EAAA7qB,UAAA8sB,iCAAA,SAAAK,GACA,GAAAlN,GAAA,GAAAjD,GAAAiF,gBAAAkL,EAAA5O,aAAA4O,EAAA1O,UAAA0O,EAAA3O,SAAA2O,EAAA3hB,IACA,IAAA2hB,EAAA1O,UAAA,CACA,GAAA+O,GAAA5yB,KAAAurB,cAAAkD,sBAAAV,6BAAAwE,EAAA1O,UACA,IAAA+O,EACA,GAAAL,EAAA3O,SAOAgP,EAAAjtB,QAAA,SAAA+f,GACAA,EAAAgC,SAAArC,EAAAwC,kBARA,CACA,GAAAnC,GAAAkN,EAAAtJ,OACA5D,IACAL,EAAAqC,SAAAhC,EAAAmC,aAUA,GAAAG,EAUA,OATAuK,GAAA9O,OACAuE,EAAAhoB,KAAAurB,cAAAkD,sBAAAhB,0BAAA8E,EAAA9O,OAEAuE,IACAA,EAAA,GAAA5F,GAAAwC,wBAAA2N,EAAA9O,KAAA8O,EAAA7H,QACA1qB,KAAAurB,cAAAkD,sBAAAhN,IAAAuG,IAEAhoB,KAAAurB,cAAAyD,oBAAAhH,EAAA3C,GACArlB,KAAAurB,cAAAsD,iCAAA7G,GACAA,GAEAiI,EAAA7qB,UAAA+sB,yCAAA,SAAAI,GACA,IAAAA,EAAA9O,KACA,MAAA,KACA,IAAAsI,GAAA/rB,KAAAurB,cAAAkD,sBAAAhB,0BAAA8E,EAAA9O,KACA,OAAAsI,IAIAA,EAAAtF,SACAsF,IAJAjM,QAAA8I,IAAA,iBAAA2J,EAAA9O,KAAA,8BACA,OAKAwM,EAAA7qB,UAAAgtB,sCAAA,SAAAG,GACA,IAAAA,EAAA9O,KACA,MAAA,KACA,IAAAsI,GAAA/rB,KAAAurB,cAAAkD,sBAAAhB,0BAAA8E,EAAA9O,KACA,OAAAsI,IAIAA,EAAAvF,QACAuF,IAJAjM,QAAA8I,IAAA,iBAAA2J,EAAA9O,KAAA,6BACA,OAKAwM,EAAA7qB,UAAAitB,sCAAA,SAAAE,GACA,GAAAxD,GAAA/uB,KAAAurB,cAAAkD,sBAAAzH,kBAAAuL,EAAA7O,YACA,OAAAqL,IAEAA,EAAAwD,EAAAvO,cAAAuO,EAAArsB,MACA,MAFA,MAIA+pB,EAAA7qB,UAAAktB,6BAAA,SAAAC,GAEA,MADAvyB,MAAAurB,cAAAY,KAAAoG,EAAApO,WAAA,MACA,MAGA8L,EAAA7qB,UAAAmqB,OAAA,WACAvvB,KAAAswB,cAEAtwB,KAAAuwB,SAGAvwB,KAAAqwB,kBACArwB,KAAAixB,eAGAhB,EAAA7qB,UAAA8rB,mBAAA,WACA,GAAA2B,GAAA7yB,IACAA,MAAAuwB,SAAA,EACAvwB,KAAAowB,aAAA5oB,MACAoiB,QAAA5pB,KAAA6wB,aACArR,SACA+O,WAAA,SAAAuE,GAAAD,EAAAtC,SAAA,GACAwC,eAAA,SAIA9C,EAAA7qB,UAAA4rB,QAAA,WACAhxB,KAAAuwB,UAEAvwB,KAAAuwB,SAAA,EAEAvwB,KAAAkwB,YAAA8C,OAAAhzB,KAAA+wB,kBAEAd,IAEA7N,GAAA6N,gBAAAA,GACA7N,IAAAA,MAUA,IAAAA,IACA,SAAAA,GAGA,QAAAniB,GAAAgzB,EAAAzM,EAAA2J,GAEA,MADA,UAAAA,IAAAA,EAAA,KACA+C,IAAAD,IAAAA,GAAAzM,MAAAA,GAAA2J,QAAAA,GAAAgD,QAIA,QAAAD,KACA,MAAA,IAAA9Q,GAAAgR,eAHAhR,EAAAniB,QAAAA,EAKAmiB,EAAA8Q,YAAAA,GACA9Q,IAAAA,MAIA,IAAAA,IACA,SAAAA,GAKA,GAAAiR,GAAA,WACA,QAAAA,MASA,MAPAA,GAAAjuB,UAAAmsB,SAAA,SAAArH,EAAAoJ,GAEAA,OAEAD,EAAAjuB,UAAA4tB,OAAA,SAAApJ,KAGAyJ,IAEAjR,GAAAiR,cAAAA,GACAjR,IAAAA,MAKA,IAAAA,IACA,SAAAA,GACA,GAAAmR,GAAA,WACA,QAAAA,GAAAN,EAAAzM,EAAAgN,EAAAC,EAAAC,GACA,SAAAlN,IAAAA,GAAA,GACA,SAAAgN,IAAAA,EAAA,SACA,SAAAC,IAAAA,EAAA,MACA,SAAAC,IAAAA,GAAA,GACA1zB,KAAAizB,IAAAA,EACAjzB,KAAAwzB,QAAAA,EACAxzB,KAAA2zB,WACAC,SAAA,EACAC,QAAA,KAEA7zB,KAAAyzB,aAAAA,EACAzzB,KAAA0zB,YAAAA,EACA1zB,KAAA8zB,KAAA,GAAAC,gBACA/zB,KAAAg0B,IAAA,GAAAD,gBACA/zB,KAAA0zB,aACA,mBAAA1zB,MAAA8zB,OACA9zB,KAAA8zB,KAAAG,iBAAA,EACAj0B,KAAAg0B,IAAAC,iBAAA,GAGAj0B,KAAAwwB,MAAA,GAAApO,GAAA4H,MACAxD,GACAxmB,KAAAk0B,aA2DA,MAxDAX,GAAAnuB,UAAAmsB,SAAA,SAAArH,EAAAoJ,GACA,GAAA7N,GAAAzlB,IACAA,MAAA8zB,KAAAK,QAAA,SAAAjO,GACAT,EAAA2O,YAAA,UAAA,IACAd,OAEAtzB,KAAA8zB,KAAAO,mBAAA,SAAAnO,GACA,GAAAT,EAAAqO,KAAAQ,YAAA7O,EAAAkO,UAAAC,SACA,GAAAnO,EAAAqO,KAAAS,QAAA9O,EAAAkO,UAAAE,QAAA,CACA,GAAAW,GAAA/O,EAAAqO,KAAAU,YACA,IAAAA,EAAAC,OAAAzzB,OAAA,EACA,IACA,GAAA0zB,GAAAjP,EAAA+K,MAAAnG,OAAAmK,EACAlB,GAAAoB,GAEA,MAAAjU,GACAX,QAAA8I,IAAA,wCAAAnI,GACAX,QAAA8I,IAAA,2BAAA4L,GACA/O,EAAA2O,YAAA,cAAA,4CAAAI,GACAlB,UAIA7N,GAAA2O,YAAA,cAAA,uCACAd,UAIA7N,GAAA2O,YAAA,cAAA,uCACAd,OAIAtzB,KAAA8zB,KAAAa,KAAA,OAAA30B,KAAAizB,KAAA,GACA,oBAAAjzB,MAAA8zB,MACA9zB,KAAA8zB,KAAAc,iBAAA,6BAAA50B,KAAAwzB,SAEAxzB,KAAA8zB,KAAA3H,KAAAnsB,KAAAwwB,MAAAvG,OAAAC,KAEAqJ,EAAAnuB,UAAAgvB,YAAA,SAAA/tB,EAAAwuB,GACA,GAAAC,IAAAzuB,KAAAA,EAAA4sB,IAAAjzB,KAAAizB,IAAA8B,WAAA/0B,KAAA8zB,KAAAS,OAAAM,QAAAA,EACA70B,MAAAyzB,aACAzzB,KAAAyzB,aAAAqB,GAGAhV,QAAA8I,IAAA,mBAAAkM,IAGAvB,EAAAnuB,UAAA4tB,OAAA,SAAApJ,GACA5pB,KAAAg0B,IAAAW,KAAA,OAAA30B,KAAAizB,KAAA,GACAjzB,KAAAg0B,IAAA7H,KAAAnsB,KAAAwwB,MAAAvG,QAAAL,MAEA2J,EAAAnuB,UAAA8uB,WAAA,WACAl0B,KAAA8zB,KAAAa,KAAA,OAAA30B,KAAAizB,IAAA,eAAA,GACAjzB,KAAA8zB,KAAA3H,QAEAoH,IAEAnR,GAAAmR,gBAAAA,GACAnR,IAAAA,MAQA,IAAAA,IACA,SAAAA,GACA,GAAAgR,GAAA,WACA,QAAAA,KACApzB,KAAAg1B,QAAA,EACAh1B,KAAAi1B,SAAA,IACAj1B,KAAAk1B,cAAA,GACAl1B,KAAAm1B,cAAA,EAyCA,MAvCA/B,GAAAhuB,UAAA6tB,IAAA,SAAAA,GAEA,MADAjzB,MAAAo1B,KAAAnC,EACAjzB,MAEAozB,EAAAhuB,UAAAohB,MAAA,SAAAA,GAEA,MADAxmB,MAAAg1B,OAAAxO,EACAxmB,MAEAozB,EAAAhuB,UAAA+qB,QAAA,SAAAA,GAEA,MADAnwB,MAAAi1B,SAAA9E,EACAnwB,MAEAozB,EAAAhuB,UAAAqkB,aAAA,SAAAA,GAEA,MADAzpB,MAAAk1B,cAAAzL,EACAzpB,MAEAozB,EAAAhuB,UAAAsuB,YAAA,SAAAA,GAEA,MADA1zB,MAAAm1B,aAAAzB,EACA1zB,MAEAozB,EAAAhuB,UAAAquB,aAAA,SAAAA,GAEA,MADAzzB,MAAAq1B,cAAA5B,EACAzzB,MAEAozB,EAAAhuB,UAAA+tB,MAAA,WACArT,QAAA8I,IAAA,uBACA,IACAsH,GADA3E,EAAA,GAAAnJ,GAAA+L,aAWA,OARA+B,GADA,MAAAlwB,KAAAo1B,MAAAp1B,KAAAo1B,KAAAp0B,OAAA,EACA,GAAAohB,GAAAmR,gBAAAvzB,KAAAo1B,KAAAp1B,KAAAg1B,OAAA,QAAAh1B,KAAAq1B,cAAAr1B,KAAAm1B,cAGA,GAAA/S,GAAAiR,cAEA9H,EAAA6C,mBAAA,GAAAhM,GAAA6N,gBAAAC,EAAA3E,EAAAvrB,KAAAi1B,SAAAj1B,KAAAk1B,gBACA3J,EAAAmD,oBAAA,GAAAtM,GAAAkJ,iBAAAC,IACAzL,QAAA8I,IAAA,6BACA2C,GAEA6H,IAEAhR,GAAAgR,eAAAA,GACAhR,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAkT,GAAA,SAAA9R,GAEA,QAAA8R,GAAA7R,GACAD,EAAAziB,KAAAf,MACAA,KAAAyjB,KAAAA,EACAzjB,KAAAiE,GAAA,uBACAjE,KAAA8jB,UAAA,wDAEA,MAPAV,GAAAkS,EAAA9R,GAOA8R,GACAlT,EAAAM,QACAN,GAAAkT,4BAAAA,GACAlT,IAAAA,MAEA,IAAAA,IACA,SAAAA,GACA,GAAAmT,GAAA,SAAA/R,GAEA,QAAA+R,GAAA9R,GACAD,EAAAziB,KAAAf,MACAA,KAAAyjB,KAAAA,EACAzjB,KAAAiE,GAAA,yBACAjE,KAAA8jB,UAAA,0DAEA,MAPAV,GAAAmS,EAAA/R,GAOA+R,GACAnT,EAAAM,QACAN,GAAAmT,8BAAAA,GACAnT,IAAAA,OAEA3iB,EAAAD,QAAA4iB,OhHmkEMoT,IAAI,SAASt0B,EAAQzB,EAAOD,GiHxyHlC,YAUA,SAAAi2B,GAAAC,GACAC,EAAA,gCACAC,EAAAF,EAAA,mBAEA11B,KAAA01B,gBAAAA,EACA11B,KAAA61B,cAAA,GAAA10B,GACAnB,KAAA81B,gBAAA,GAAA30B,GACAnB,KAAA+1B,gBAAA,GAAA50B,GACAnB,KAAAg2B,qBAAA,GAAA70B,GACAnB,KAAAi2B,oBACAj2B,KAAAk2B,sBACAl2B,KAAAm2B,sBACAn2B,KAAAo2B,0BAEA,IAAAr2B,GAAAC,IACAA,MAAA01B,gBAAAW,YAAA,SAAAlsB,EAAAmsB,GACA,GAAAC,GAAAx2B,EAAA81B,cAAA7vB,IAAAmE,EACAqsB,GAAAD,IACAA,EAAA5wB,QAAA,SAAA6Z,GACA,IACAA,EAAA8W,GACA,MAAAp2B,GACA4f,QAAA2W,KAAA,sEAAAtsB,EAAAjK,MAIAH,EAAAk2B,iBAAAtwB,QAAA,SAAA6Z,GACA,IACAA,EAAA8W,GACA,MAAAp2B,GACA4f,QAAA2W,KAAA,oEAAAv2B,QAIAF,KAAA01B,gBAAAgB,cAAA,SAAAvsB,EAAAmsB,GACA,GAAAC,GAAAx2B,EAAA+1B,gBAAA9vB,IAAAmE,EACAqsB,GAAAD,IACAA,EAAA5wB,QAAA,SAAA6Z,GACA,IACAA,EAAA8W,GACA,MAAAp2B,GACA4f,QAAA2W,KAAA,wEAAAtsB,EAAAjK,MAIAH,EAAAm2B,mBAAAvwB,QAAA,SAAA6Z,GACA,IACAA,EAAA8W,GACA,MAAAp2B,GACA4f,QAAA2W,KAAA,sEAAAv2B,QAIAF,KAAA01B,gBAAAiB,aAAA,SAAAxsB,EAAAmsB,EAAA3S,EAAAC,EAAA2C,GACA,GAAAgQ,GAAAx2B,EAAAg2B,gBAAA/vB,IAAAmE,EACAqsB,GAAAD,IACAA,EAAA5wB,QAAA,SAAA6Z,GACA,IACAA,EAAA8W,EAAA3S,EAAAC,EAAA2C,GACA,MAAArmB,GACA4f,QAAA2W,KAAA,uEAAAtsB,EAAAjK,MAIAH,EAAAo2B,mBAAAxwB,QAAA,SAAA6Z,GACA,IACAA,EAAA8W,EAAA3S,EAAAC,EAAA2C,GACA,MAAArmB,GACA4f,QAAA2W,KAAA,qEAAAv2B,QAIAF,KAAA01B,gBAAAkB,cAAA,SAAAzsB,EAAAmsB,EAAA3S,EAAAnf,EAAAqyB,EAAAC,GACA,GAAAP,GAAAx2B,EAAAi2B,qBAAAhwB,IAAAmE,EACAqsB,GAAAD,IACAA,EAAA5wB,QAAA,SAAA6Z,GACA,IACAA,EAAA8W,EAAA3S,EAAAnf,EAAAqyB,EAAAC,GACA,MAAA52B,GACA4f,QAAA2W,KAAA,wEAAAtsB,EAAAjK,MAIAH,EAAAq2B,wBAAAzwB,QAAA,SAAA6Z,GACA,IACAA,EAAA8W,EAAA3S,EAAAnf,EAAAqyB,EAAAC,GACA,MAAA52B,GACA4f,QAAA2W,KAAA,sEAAAv2B,QA/FAgB,EAAA,iBACA,IAAAC,GAAAD,EAAA,8CACA61B,EAAA71B,EAAA,cACAs1B,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,UAkGAH,GAAArwB,UAAA4xB,iBAAA,SAAAV,EAAA3S,EAAAC,GAKA,MAJA+R,GAAA,8DACAC,EAAAU,EAAA,QACAV,EAAAjS,EAAA,gBAEA3jB,KAAA01B,gBAAAsB,iBAAAV,EAAA3S,EAAAC,IAIA6R,EAAArwB,UAAA6xB,kBAAA,SAAAX,EAAA3S,EAAAnf,EAAAqyB,EAAAK,GACAvB,EAAA,oFACAC,EAAAU,EAAA,QACAV,EAAAjS,EAAA,gBACAiS,EAAApxB,EAAA,SACAoxB,EAAAiB,EAAA,SACAjB,EAAAsB,EAAA,mBAEAl3B,KAAA01B,gBAAAuB,kBAAAX,EAAA3S,EAAAnf,EAAAqyB,EAAAK,IAIAzB,EAAArwB,UAAA+xB,UAAA,SAAAb,GAKA,KAJAX,GAAA,+BACAC,EAAAU,EAAA,QAGA,GAAA11B,OAAA,wBAIA60B,EAAArwB,UAAAjB,OAAA,SAAAgG,GAKA,KAJAwrB,GAAA,4BACAC,EAAAzrB,EAAA,QAGA,GAAAvJ,OAAA,wBAIA60B,EAAArwB,UAAAqc,IAAA,SAAAtX,EAAAmsB,GAMA,KALAX,GAAA,+BACAC,EAAAzrB,EAAA,QACAyrB,EAAAU,EAAA,QAGA,GAAA11B,OAAA,wBAIA60B,EAAArwB,UAAAgyB,OAAA,SAAAjtB,EAAAktB,GAMA,KALA1B,GAAA,wCACAC,EAAAzrB,EAAA,QACAyrB,EAAAyB,EAAA,cAGA,GAAAz2B,OAAA,wBAIA60B,EAAArwB,UAAA0lB,OAAA,SAAAwL,GAKA,KAJAX,GAAA,4BACAC,EAAAU,EAAA,QAGA,GAAA11B,OAAA,wBAIA60B,EAAArwB,UAAAkyB,UAAA,SAAAD,GAKA,KAJA1B,GAAA,qCACAC,EAAAyB,EAAA,cAGA,GAAAz2B,OAAA,wBAIA60B,EAAArwB,UAAAmyB,SAAA,SAAAC,GAKA,KAJA7B,GAAA,mCACAC,EAAA4B,EAAA,aAGA,GAAA52B,OAAA,wBAIA60B,EAAArwB,UAAAqyB,QAAA,SAAAttB,EAAAqa,GACA,GAAAzkB,GAAAC,IACA,IAAAw2B,EAAAhS,GAaA,CACAmR,EAAA,2CACAC,EAAAzrB,EAAA,QACAyrB,EAAApR,EAAA,eAEA,IAAA+R,GAAAx2B,EAAA81B,cAAA7vB,IAAAmE,EAKA,OAJAqsB,GAAAD,KACAA,MAEAx2B,EAAA81B,cAAAxiB,IAAAlJ,EAAAosB,EAAAjkB,OAAAkS,KAEAkT,YAAA,WACA,GAAAnB,GAAAx2B,EAAA81B,cAAA7vB,IAAAmE,EACAqsB,GAAAD,IACAx2B,EAAA81B,cAAAxiB,IAAAlJ,EAAAosB,EAAAlJ,OAAA,SAAAnnB,GACA,MAAAA,KAAAse,OAtBA,MALAA,GAAAra,EACAwrB,EAAA,qCACAC,EAAApR,EAAA,gBAEAzkB,EAAAk2B,iBAAAl2B,EAAAk2B,iBAAA3jB,OAAAkS,IAEAkT,YAAA,WACA33B,EAAAk2B,iBAAAl2B,EAAAk2B,iBAAA5I,OAAA,SAAAnnB,GACA,MAAAA,KAAAse,OA4BAiR,EAAArwB,UAAAuyB,UAAA,SAAAxtB,EAAAqa,GACA,GAAAzkB,GAAAC,IACA,IAAAw2B,EAAAhS,GAaA,CACAmR,EAAA,6CACAC,EAAAzrB,EAAA,QACAyrB,EAAApR,EAAA,eAEA,IAAA+R,GAAAx2B,EAAA+1B,gBAAA9vB,IAAAmE,EAKA,OAJAqsB,GAAAD,KACAA,MAEAx2B,EAAA+1B,gBAAAziB,IAAAlJ,EAAAosB,EAAAjkB,OAAAkS,KAEAkT,YAAA,WACA,GAAAnB,GAAAx2B,EAAA+1B,gBAAA9vB,IAAAmE,EACAqsB,GAAAD,IACAx2B,EAAA+1B,gBAAAziB,IAAAlJ,EAAAosB,EAAAlJ,OAAA,SAAAnnB,GACA,MAAAA,KAAAse,OAtBA,MALAA,GAAAra,EACAwrB,EAAA,uCACAC,EAAApR,EAAA,gBAEAzkB,EAAAm2B,mBAAAn2B,EAAAm2B,mBAAA5jB,OAAAkS,IAEAkT,YAAA,WACA33B,EAAAm2B,mBAAAn2B,EAAAm2B,mBAAA7I,OAAA,SAAAnnB,GACA,MAAAA,KAAAse,OA4BAiR,EAAArwB,UAAAuxB,aAAA,SAAAxsB,EAAAqa,GACA,GAAAzkB,GAAAC,IACA,IAAAw2B,EAAAhS,GAaA,CACAmR,EAAA,gDACAC,EAAAzrB,EAAA,QACAyrB,EAAApR,EAAA,eAEA,IAAA+R,GAAAx2B,EAAAg2B,gBAAA/vB,IAAAmE,EAKA,OAJAqsB,GAAAD,KACAA,MAEAx2B,EAAAg2B,gBAAA1iB,IAAAlJ,EAAAosB,EAAAjkB,OAAAkS,KAEAkT,YAAA,WACA,GAAAnB,GAAAx2B,EAAAg2B,gBAAA/vB,IAAAmE,EACAqsB,GAAAD,IACAx2B,EAAAg2B,gBAAA1iB,IAAAlJ,EAAAosB,EAAAlJ,OAAA,SAAAnnB,GACA,MAAAA,KAAAse,OAtBA,MALAA,GAAAra,EACAwrB,EAAA,0CACAC,EAAApR,EAAA,gBAEAzkB,EAAAo2B,mBAAAp2B,EAAAo2B,mBAAA7jB,OAAAkS,IAEAkT,YAAA,WACA33B,EAAAo2B,mBAAAp2B,EAAAo2B,mBAAA9I,OAAA,SAAAnnB,GACA,MAAAA,KAAAse,OA4BAiR,EAAArwB,UAAAwxB,cAAA,SAAAzsB,EAAAqa,GACA,GAAAzkB,GAAAC,IACA,IAAAw2B,EAAAhS,GAaA,CACAmR,EAAA,iDACAC,EAAAzrB,EAAA,QACAyrB,EAAApR,EAAA,eAEA,IAAA+R,GAAAx2B,EAAAi2B,qBAAAhwB,IAAAmE,EAKA,OAJAqsB,GAAAD,KACAA,MAEAx2B,EAAAi2B,qBAAA3iB,IAAAlJ,EAAAosB,EAAAjkB,OAAAkS,KAEAkT,YAAA,WACA,GAAAnB,GAAAx2B,EAAAi2B,qBAAAhwB,IAAAmE,EACAqsB,GAAAD,IACAx2B,EAAAi2B,qBAAA3iB,IAAAlJ,EAAAosB,EAAAlJ,OAAA,SAAAnnB,GACA,MAAAA,KAAAse,OAtBA,MALAA,GAAAra,EACAwrB,EAAA,2CACAC,EAAApR,EAAA,gBAEAzkB,EAAAq2B,wBAAAr2B,EAAAq2B,wBAAA9jB,OAAAkS,IAEAkT,YAAA,WACA33B,EAAAq2B,wBAAAr2B,EAAAq2B,wBAAA/I,OAAA,SAAAnnB,GACA,MAAAA,KAAAse,OA6BAhlB,EAAAi2B,YAAAA,IjH2zHGmC,6CAA6C,EAAEC,iBAAiB,GAAGC,aAAa,KAAKC,IAAI,SAAS72B,EAAQzB,EAAOD,GkHvpIpH,YAiBA,SAAAw4B,GAAAtC,EAAAvrB,EAAAjE,GACA,MAAAswB,GAAAtwB,GACAiE,IAAA8tB,EAAAvC,EAAAwC,gBAAAlyB,IAAAE,GAAAA,EADA,KAIA,QAAAiyB,GAAAzC,EAAAxvB,GACA,MAAA,gBAAAA,IAAA,OAAAA,EAAAwvB,EAAA0C,cAAApyB,IAAAE,GAAAA,EAGA,QAAAmyB,GAAA3C,EAAA4C,EAAA3U,EAAA9N,EAAA0iB,EAAAzB,GACA,GAAA72B,GAAAy1B,EAAAz1B,QACA6kB,GACA7kB,EAAAolB,UAAA,wBAAA,KAAA,UACAplB,EAAAolB,UAAA,SAAA,KAAAiT,GACAr4B,EAAAolB,UAAA,YAAA,KAAA1B,GACA1jB,EAAAolB,UAAA,OAAA,KAAAxP,GACA5V,EAAAolB,UAAA,KAAA,KAAAkT,GACAt4B,EAAAolB,UAAA,QAAA,KAAAyR,EAAA91B,QAEA81B,GAAAnxB,QAAA,SAAA6yB,EAAAh0B,GACAsgB,EAAAtd,KAAAvH,EAAAolB,UAAA7gB,EAAAzB,WAAA,KAAAo1B,EAAAzC,EAAA8C,OAEAv4B,EAAA+nB,kBAAApe,MAAA3J,GAAA,KAAA,WAAAqS,OAAAwS,IAGA,QAAA2T,GAAA/C,EAAAvrB,EAAAmsB,EAAA3S,GACA,GAAA+U,GAAApC,EAAA3S,EACA6S,GAAAkC,IACAhD,EAAAiD,uBAAAhzB,QAAA,SAAA6Z,GACA,IACAA,EAAArV,EAAAmsB,EAAA3S,KAAAlhB,QACA,MAAAvC,GACA4f,QAAA2W,KAAA,8DAAAv2B,MAMA,QAAA04B,GAAAtC,EAAA3S,GACA,GAAA6S,EAAAqC,GACA,KAAA,IAAAj4B,OAAA,sDAEAi4B,IACAvC,KAAAA,EACA3S,aAAAA,GAIA,QAAAmV,GAAAxC,EAAA3S,GACA,MAAA6S,GAAAqC,IAAAA,EAAAvC,OAAAA,GAAAuC,EAAAlV,eAAAA,EAGA,QAAAoV,KACAF,EAAA,KAIA,QAAAG,GAAA/4B,GACA01B,EAAA,4BACAC,EAAA31B,EAAA,WAEAD,KAAAC,QAAAA,EACAD,KAAAi5B,QAAA,GAAA93B,GACAnB,KAAAk4B,gBAAA,GAAA/2B,GACAnB,KAAAo4B,cAAA,GAAAj3B,GACAnB,KAAAk5B,WAAA,GAAA/3B,GACAnB,KAAAm5B,qBACAn5B,KAAAo5B,uBACAp5B,KAAA24B,0BACA34B,KAAAq5B,uBApFAn4B,EAAA,iBACA,IAAAC,GAAAD,EAAA,8CACAkhB,EAAAlhB,EAAA,4BAEA61B,EAAA71B,EAAA,cACAs1B,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,WAEA0D,EAAA,EACAC,EAAA,EACAtB,EAAA,EAEAY,EAAA,IA2EAG,GAAA5zB,UAAA4xB,iBAAA,SAAAV,EAAA3S,EAAAC,GACA+R,EAAA,kEACAC,EAAAU,EAAA,QACAV,EAAAjS,EAAA,eAEA,IAAA2U,GAAAt4B,KAAAo4B,cAAApyB,IAAAswB,EACA,IAAAE,EAAA8B,GAAA,CACA,GAAAvM,GAAA/rB,KAAAC,QAAAwtB,0BAAA6K,EACA,IAAA9B,EAAAzK,GAAA,CACA,GAAAyN,GAAAx5B,KAAAi5B,QAAAjzB,IAAA+lB,EAAAlH,uBACA1a,EAAAqvB,EAAA7V,GACA0B,EAAA0G,EAAAjF,4BAAAnD,EACA,IAAA6S,EAAArsB,IAAAqsB,EAAAnR,GAAA,CACA,GAAAkB,GAAAlB,EAAAwC,UAEA,OADAxC,GAAAqC,SAAAyQ,EAAAn4B,KAAA4jB,IACAoU,EAAAh4B,KAAAmK,EAAAoc,OAOAyS,EAAA5zB,UAAA6xB,kBAAA,SAAAX,EAAA3S,EAAAnf,EAAAqyB,EAAAK,GAQA,GAPAvB,EAAA,wFACAC,EAAAU,EAAA,QACAV,EAAAjS,EAAA,gBACAiS,EAAApxB,EAAA,SACAoxB,EAAAiB,EAAA,SACAjB,EAAAsB,EAAA,oBAEA4B,EAAAxC,EAAA3S,GAAA,CAGA,GAAA2U,GAAAt4B,KAAAo4B,cAAApyB,IAAAswB,GACAmD,EAAAnD,EAAA3S,EACA,IAAA6S,EAAA8B,IAAA9B,EAAAiD,GAAA,CACA,GAAAC,GAAAzsB,MAAA0sB,QAAAzC,GAAAA,EAAAl2B,OAAA,CACAq3B,GAAAr4B,KAAAs4B,EAAA3U,EAAAnf,EAAAA,EAAAk1B,EAAAD,EAAAz2B,MAAAwB,EAAAA,EAAAqyB,OAKAmC,EAAA5zB,UAAAixB,YAAA,SAAA7W,GACAmW,EAAA,wCACAC,EAAApW,EAAA,WACAxf,KAAAm5B,kBAAA3xB,KAAAgY,IAIAwZ,EAAA5zB,UAAAsxB,cAAA,SAAAlX,GACAmW,EAAA,0CACAC,EAAApW,EAAA,WACAxf,KAAAo5B,oBAAA5xB,KAAAgY,IAIAwZ,EAAA5zB,UAAAuxB,aAAA,SAAAnX,GACAmW,EAAA,yCACAC,EAAApW,EAAA,WACAxf,KAAA24B,uBAAAnxB,KAAAgY,IAIAwZ,EAAA5zB,UAAAwxB,cAAA,SAAApX,GACAmW,EAAA,0CACAC,EAAApW,EAAA,WACAxf,KAAAq5B,oBAAA7xB,KAAAgY,IAIAwZ,EAAA5zB,UAAAw0B,cAAA,SAAA7N,GAIA,GAHA4J,EAAA,wCACAC,EAAA7J,EAAA,UAEA/rB,KAAAi5B,QAAAnzB,IAAAimB,EAAA9nB,IAAA,CAIA,GAAAu1B,KACAzN,GAAAjH,WAAAuI,OAAA,SAAAhI,GACA,MAAAA,GAAA1B,aAAAkW,OAAA,MAAA,IACAl0B,QAAA,SAAA0f,GACAmU,EAAAnU,EAAA1B,cAAA2V,EAEAjU,EAAAY,cAAA,SAAAvK,GACA8d,EAAAnU,EAAA1B,cAAAjI,EAAAkI,aAGA5jB,KAAAi5B,QAAA5lB,IAAA0Y,EAAA9nB,GAAAu1B,KAIAR,EAAA5zB,UAAA00B,gBAAA,SAAA/N,GACA4J,EAAA,0CACAC,EAAA7J,EAAA,SAEA/rB,KAAAi5B,QAAA,UAAAlN,EAAA9nB,KAIA+0B,EAAA5zB,UAAA20B,KAAA,SAAAhO,GACA4J,EAAA,+BACAC,EAAA7J,EAAA,QAEA,IAAAhsB,GAAAC,KACAw5B,EAAAx5B,KAAAi5B,QAAAjzB,IAAA+lB,EAAAlH,uBACAyR,IA6BA,OA5BAvK,GAAAjH,WAAAuI,OAAA,SAAAhI,GACA,MAAAA,GAAAzU,MAAAwR,EAAAO,IAAAzc,SAAAmf,EAAA1B,aAAAkW,OAAA,MAAA,IACAl0B,QAAA,SAAA0f,GACAiR,EAAAjR,EAAA1B,cAAA,KACA0B,EAAAY,cAAA,SAAAvK,GACA,GAAAA,EAAA6K,WAAA7K,EAAAkI,SAAA,CACA,GAAA2C,GAAAyR,EAAAj4B,EAAAy5B,EAAAnU,EAAA1B,cAAAjI,EAAA6K,UACA3C,EAAAoU,EAAAj4B,EAAAy5B,EAAAnU,EAAA1B,cAAAjI,EAAAkI,SACA7jB,GAAA44B,uBAAAhzB,QAAA,SAAA6Z,GACA,IACAA,EAAAuM,EAAAlH,sBAAAyR,EAAAjR,EAAA1B,aAAAC,EAAA2C,GACA,MAAArmB,GACA4f,QAAA2W,KAAA,8DAAAv2B,WAMAF,KAAAk4B,gBAAA7kB,IAAA0Y,EAAA9nB,GAAAqyB,GACAt2B,KAAAo4B,cAAA/kB,IAAAijB,EAAAvK,EAAA9nB,IACAjE,KAAAk5B,WAAA7lB,IAAA0Y,EAAA9nB,GAAAu1B,GACAx5B,KAAAm5B,kBAAAxzB,QAAA,SAAA6Z,GACA,IACAA,EAAAuM,EAAAlH,sBAAAyR,GACA,MAAAp2B,GACA4f,QAAA2W,KAAA,6DAAAv2B,MAGAo2B,GAIA0C,EAAA5zB,UAAA40B,OAAA,SAAAjO,GACA4J,EAAA,iCACAC,EAAA7J,EAAA,QAEA,IAAAuK,GAAAt2B,KAAAk4B,gBAAAlyB,IAAA+lB,EAAA9nB,GAaA,OAZAjE,MAAAk4B,gBAAA,UAAAnM,EAAA9nB,IACAjE,KAAAo4B,cAAA,UAAA9B,GACAt2B,KAAAk5B,WAAA,UAAAnN,EAAA9nB,IACAuyB,EAAAF,IACAt2B,KAAAo5B,oBAAAzzB,QAAA,SAAA6Z,GACA,IACAA,EAAAuM,EAAAlH,sBAAAyR,GACA,MAAAp2B,GACA4f,QAAA2W,KAAA,+DAAAv2B,MAIAo2B,GAIA0C,EAAA5zB,UAAA60B,gBAAA,SAAAlO,GACA4J,EAAA,0CACAC,EAAA7J,EAAA,QAEA,IAAA1hB,GAAA0hB,EAAAjF,4BAAA,UACAzB,EAAA0G,EAAAjF,4BAAA,aACAjR,EAAAkW,EAAAjF,4BAAA,QACAyR,EAAAxM,EAAAjF,4BAAA,MACA+P,EAAA9K,EAAAjF,4BAAA,QAEA,MAAA0P,EAAAnsB,IAAAmsB,EAAAnR,IAAAmR,EAAA3gB,IAAA2gB,EAAA+B,IAAA/B,EAAAK,IAgCA,KAAA,IAAAj2B,OAAA,4CA/BA,IAAA44B,GAAAx5B,KAAAk5B,WAAAlzB,IAAAqE,EAAAnE,OACAowB,EAAAt2B,KAAAk4B,gBAAAlyB,IAAAqE,EAAAnE,MACA,KAAAswB,EAAAF,KAAAE,EAAAgD,GA0BA,KAAA,IAAA54B,OAAA,kEAzBA,IAAAuJ,GAAA4hB,EAAAlH,qBAEA4T,GAAAz4B,KAAAmK,EAAAmsB,EAAAjR,EAAAnf,MAGA,KAAA,GAFA4wB,MACA0B,EAAA,KACA73B,EAAA,EAAAA,EAAAk2B,EAAA3wB,MAAAvF,IAAA,CAEA,GADA63B,EAAAzM,EAAAjF,4BAAAnmB,EAAAoC,aACAyzB,EAAAgC,GACA,KAAA,IAAA53B,OAAA,4CAEAk2B,GAAAtvB,KAAAwwB,EAAAh4B,KAAAw5B,EAAAnU,EAAAnf,OAAAsyB,EAAAtyB,QAEA,IACA0yB,EAAAtC,EAAAjR,EAAAnf,OACAlG,KAAAq5B,oBAAA1zB,QAAA,SAAA6Z,GACA,IACAA,EAAArV,EAAAmsB,EAAAjR,EAAAnf,MAAA2P,EAAA3P,MAAAqyB,EAAAryB,MAAA2P,EAAA3P,MAAA4wB,GACA,MAAA52B,GACA4f,QAAA2W,KAAA,+DAAAv2B,MAGA,QACA64B,MAWAC,EAAA5zB,UAAA80B,kBAAA,SAAAlvB,GACA,IAAAwrB,EAAAxrB,GACA,OAAA9E,MAAA8E,EAAAb,KAAAmvB,EAEA,IAAAnvB,SAAAa,EACA,IAAA,WAAAb,EAAA,CACA,GAAAjE,GAAAlG,KAAAo4B,cAAApyB,IAAAgF,EACA,IAAAwrB,EAAAtwB,GACA,OAAAA,MAAAA,EAAAiE,KAAA8tB,EAEA,MAAA,IAAAr2B,WAAA,0CAEA,GAAA,WAAAuI,GAAA,WAAAA,GAAA,YAAAA,EACA,OAAAjE,MAAA8E,EAAAb,KAAAovB,EAEA,MAAA,IAAA33B,WAAA,+DAIAo3B,EAAA5zB,UAAA+0B,iBAAA,SAAAj0B,EAAAiE,GACA,MAAA6tB,GAAAh4B,KAAAmK,EAAAjE,IAKA1G,EAAAw5B,gBAAAA,EACAx5B,EAAA85B,QAAAA,EACA95B,EAAA+5B,WAAAA,EACA/5B,EAAAy4B,aAAAA,IlH2qIGL,6CAA6C,EAAEwC,2BAA2B,GAAGvC,iBAAiB,GAAGC,aAAa,KAAKuC,IAAI,SAASn5B,EAAQzB,EAAOD,GmHh/IlJ,YAWA,SAAA86B,GAAAr6B,EAAAs6B,EAAAC,EAAAxO,GACA2J,EAAA,qEACAC,EAAA31B,EAAA,WACA21B,EAAA2E,EAAA,eACA3E,EAAA4E,EAAA,qBACA5E,EAAA5J,EAAA,aAEAhsB,KAAAC,QAAAA,EACAD,KAAAu6B,YAAAA,EACAv6B,KAAAy6B,mBAAAD,EACAx6B,KAAA06B,WAAA1O,EAEAhsB,KAAA06B,WAAA7f,OAAA8f,GArBAz5B,EAAA,iBACA,IAAA61B,GAAA71B,EAAA,cACAy0B,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,WAEAgF,EAAA,2BACAD,EAAAC,EAAA,oBACAC,EAAAD,EAAA,yBAkBAN,GAAAl1B,UAAA01B,iBAAA,SAAA1wB,GAIA,MAHAurB,GAAA,wCACAC,EAAAxrB,EAAA,QAEApK,KAAAy6B,mBAAAK,iBAAA1wB,IAIAkwB,EAAAl1B,UAAA21B,WAAA,WAEA,GAAAh7B,GAAAC,IACAA,MAAAC,QAAAuvB,oBACAxvB,KAAAy6B,mBAAAO,UAAAjhB,KAAA,WACAha,EAAA26B,WAAA7f,OAAAggB,GACA96B,EAAAE,QAAA,KACAF,EAAAw6B,YAAA,KACAx6B,EAAA06B,mBAAA,KACA16B,EAAA26B,WAAA,QAKAl7B,EAAA86B,cAAAA,InHmgJGzC,iBAAiB,GAAGC,aAAa,KAAKmD,IAAI,SAAS/5B,EAAQzB,EAAOD,GoHrjJrE,YAMA,SAAA07B,GAAAtR,GACA,OACArkB,EAAAqkB,EAAAnG,KACAtjB,EAAAypB,EAAAc,OACAjqB,EAAAmpB,EAAA9E,WAAAuM,IAAA,SAAAhM,GACA,GAAA1c,IACAvI,EAAAilB,EAAA1B,aACAhjB,EAAA0kB,EAAAphB,GAQA,OANAuyB,GAAAnR,EAAAnf,SACAyC,EAAA9C,EAAAwf,EAAAnf,OAEAswB,EAAAnR,EAAAzU,MAAA,UAAAyU,EAAAzU,MACAjI,EAAAxI,EAAAklB,EAAAzU,KAEAjI,IAEA1E,GAAA,2BAIA,QAAAk3B,GAAAvR,GACA,OACA3lB,GAAA,0BACA6f,UAAA,2DACAiB,gBAAA,EACAtB,KAAAmG,EAAArkB,EACAmlB,OAAAd,EAAAzpB,EACA2kB,WAAA8E,EAAAnpB,EAAA4wB,IAAA,SAAAhM,GACA,OACA1B,aAAA0B,EAAAjlB,EACA6D,GAAAohB,EAAA1kB,EACAuF,MAAAswB,EAAAnR,EAAAxf,GAAAwf,EAAAxf,EAAA,KACAkiB,UAAAyO,EAAAnR,EAAAxf,GAAAwf,EAAAxf,EAAA,KACAge,UAAA,KACAjT,IAAA4lB,EAAAnR,EAAAllB,GAAAklB,EAAAllB,EAAA,YAOA,QAAAi7B,GAAAxR,GACA,GAAAjhB,IACAlI,EAAAmpB,EAAAlG,YASA,OAPA8S,GAAA5M,EAAArD,YACA5d,EAAApI,EAAAqpB,EAAArD,UAEAiQ,EAAA5M,EAAAhG,YACAjb,EAAAvI,EAAAwpB,EAAAhG,UAEAjb,EAAA1E,GAAA,eACA0E,EAGA,QAAA0yB,GAAAzR,GACA,OACA3lB,GAAA,eACA6f,UAAA,gDACAJ,YAAAkG,EAAAnpB,EACA8lB,SAAAiQ,EAAA5M,EAAArpB,GAAAqpB,EAAArpB,EAAA,KACAqjB,SAAA4S,EAAA5M,EAAAxpB,GAAAwpB,EAAAxpB,EAAA,MAjEA,GAAAo2B,GAAAt1B,EAAA,cAAAs1B,MAsEAh3B,GAAAwqB,OACAC,OAAA,SAAAC,GACA,MAAAC,MAAAC,UAAAF,EAAAmH,IAAA,SAAAzH,GACA,MAAA,4BAAAA,EAAA3lB,GACAi3B,EAAAtR,GACA,iBAAAA,EAAA3lB,GACAm3B,EAAAxR,GAEAA,MAGAS,OAAA,SAAAC,GACA,MAAA,gBAAAA,GACAH,KAAAI,MAAAD,GAAA+G,IAAA,SAAAzH,GACA,MAAA,4BAAAA,EAAA3lB,GACAk3B,EAAAvR,GACA,iBAAAA,EAAA3lB,GACAo3B,EAAAzR,GAEAA,IAIAU,MpH0kJGwN,aAAa,KAAKwD,IAAI,SAASp6B,EAAQzB,EAAOD,GqHzqJjD,YA2BA,SAAA+7B,GAAAtI,EAAAhzB,EAAAy1B,EAAA8F,GACA7F,EAAA,oDACAC,EAAA3C,EAAA,OACA2C,EAAA31B,EAAA,WACA21B,EAAAF,EAAA,kBAEA,IAAA31B,GAAAC,IACAA,MAAAC,QAAAA,EACAD,KAAA01B,gBAAAA,EACA11B,KAAAy7B,qBAAA,aACAz7B,KAAA07B,oBAAA,GAAApnB,GAAA,SAAAwF,GACA/Z,EAAA07B,qBAAA3hB,IAGA7Z,EAAAwuB,sBAAAT,mBAAA,SAAAtS,GACA,GAAAqQ,GAAArQ,EAAAqR,wBACA4O,EAAA5P,EAAAjF,4BAAA8U,EACApF,GAAAmF,IAAAA,EAAAz1B,QAAA21B,IACAngB,EAAAmR,YAAAzK,EAAAiJ,KAAAyB,MACA/sB,EAAA+7B,aAAA/P,GACArQ,EAAAmR,YAAAzK,EAAAiJ,KAAA+B,SACArtB,EAAAg8B,eAAAhQ,MAKAyK,EAAAgF,IAAAhF,EAAAgF,EAAAQ,aAAAR,EAAAQ,cAAA,GACA7f,WAAA,WACAlc,EAAAgvB,mBAAAgN,EAAAC,IACA,KAGAC,EAAA,GAAA7nB,GAAA,SAAAwF,EAAA8E,GACA,GAAAwd,GAAA,GAAArI,eACAqI,GAAAnI,iBAAA,EAEAmI,EAAAC,OAAA,WACA,MAAAD,EAAA7H,OACAza,IAGA8E,EAAAhe,MAAAw7B,EAAAE,cAIAF,EAAAjI,QAAA,WACAvV,EAAAhe,MAAA,mBAGAw7B,EAAAzH,KAAA,OAAA1B,EAAA,eACAmJ,EAAAjQ,SA3EAjrB,EAAA,iBACA,IAsBAi7B,GAtBA7nB,EAAApT,EAAA,kDACAkhB,EAAAlhB,EAAA,4BACA61B,EAAA71B,EAAA,cACAs1B,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,WAGAgF,EAAA,2BACAqB,EAAArB,EAAA,WACAsB,EAAAtB,EAAA,UAEA3C,EAAA,uBACAsE,EAAA,sCACAC,EAAA,0BACAC,EAAA,UACAb,EAAA,wBACAc,EAAA,SACAb,EAAA,QA6DAN,GAAAn2B,UAAA02B,aAAA,SAAA/P,GACA4J,EAAA,iCACAC,EAAA7J,EAAA,QAEA,IAAA5hB,GAAA4hB,EAAAlH,qBACA,QAAA1a,GACA,IAAAoyB,GAEA,KACA,KAAAtE,GACAj4B,KAAA01B,gBAAAkE,cAAA7N,EACA,MACA,KAAAyQ,GACAx8B,KAAAy7B,qBAAA1P,EACA,MACA,KAAA0Q,GACAz8B,KAAA01B,gBAAAuE,gBAAAlO,GACA/rB,KAAAC,QAAA4tB,wBAAA9B,EACA,MACA,SACA/rB,KAAA01B,gBAAAqE,KAAAhO,KAMAwP,EAAAn2B,UAAA22B,eAAA,SAAAhQ,GACA4J,EAAA,mCACAC,EAAA7J,EAAA,QAEA,IAAA5hB,GAAA4hB,EAAAlH,qBACA,QAAA1a,GACA,IAAA8tB,GACAj4B,KAAA01B,gBAAAoE,gBAAA/N,EACA,MACA,KAAA0Q,GAEA,KACA,SACAz8B,KAAA01B,gBAAAsE,OAAAjO,KAMAwP,EAAAn2B,UAAAyV,OAAA,SAAA+O,GACA+L,EAAA,6BACAC,EAAAhM,EAAA,UAEA,IAAA3pB,GAAAD,KAAAC,OACA,OAAA,IAAAqU,GAAA,SAAAwF,GAEA7Z,EAAAksB,KAAAvC,GACA2E,WAAA,WACAzU,UAQAyhB,EAAAn2B,UAAAu3B,gBAAA,WACA,MAAA38B,MAAA07B,qBAKAl8B,EAAA+7B,UAAAA,EACA/7B,EAAAo8B,cAAAA,EACAp8B,EAAAk9B,qBAAAA,EACAl9B,EAAAq8B,qBAAAA,EACAr8B,EAAA+8B,iBAAAA,IrH6rJGK,iDAAiD,EAAExC,2BAA2B,GAAGvC,iBAAiB,GAAGC,aAAa,KAAK+E,IAAI,SAAS37B,EAAQzB,EAAOD,GsHv1JtJ,YA+BA,SAAAs9B,GAAA78B,EAAAy1B,EAAA1J,GACA2J,EAAA,0DACAC,EAAA31B,EAAA,WACA21B,EAAAF,EAAA,mBACAE,EAAA5J,EAAA,aAEAhsB,KAAAC,QAAAA,EACAD,KAAA01B,gBAAAA,EACA11B,KAAAgsB,UAAAA,EACAhsB,KAAA+8B,YAAA,GAAAvoB,GAtCAtT,EAAA,iBACA,IAAAoT,GAAApT,EAAA,kDACAsT,EAAAtT,EAAA,8CACA61B,EAAA71B,EAAA,cACAs1B,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,WAEAoH,EAAA97B,EAAA,wBAAA87B,gBAEAC,EAAA/7B,EAAA,kBAAA+2B,aAEA2D,EAAA16B,EAAA,kBAAA06B,cACAc,EAAAx7B,EAAA,kBAAAw7B,qBACAH,EAAAr7B,EAAA,kBAAAq7B,iBAEA3B,EAAA,2BACAsC,EAAAtC,EAAA,qBACAuC,EAAAvC,EAAA,uBACAwC,EAAAxC,EAAA,oBAEAyC,EAAA,iBACAC,EAAA,eACAC,EAAA,QACAC,EAAA,aACAC,EAAA,YACAC,EAAA,GAgBAZ,GAAA13B,UAAA01B,iBAAA,SAAA1wB,GACAurB,EAAA,4CACAC,EAAAxrB,EAAA,OAEA,IACAuzB,GAAArF,EAAAvM,EAAA6R,EADA79B,EAAAC,IAEA,OAAA,IAAAsU,GAAA,SAAAwF,GACA/Z,EAAAisB,UAAA2Q,kBAAA5iB,KAAA,SAAA8jB,GACAA,EAAA/W,4BAAAuW,GAAA3V,SAAAtd,GACArK,EAAAisB,UAAAnR,OAAAqiB,GAAAnjB,KAAA,WACA4jB,EAAAE,EAAA/W,4BAAAwW,GAAAzV,WACAyQ,EAAAuF,EAAA/W,4BAAAyW,GAAA1V,WACAkE,EAAAhsB,EAAA21B,gBAAAyE,iBAAA7B,EAAA2E,GACAW,EAAA,GAAAZ,GAAAW,EAAA5R,EAAAhsB,GACAA,EAAAg9B,YAAAtb,IAAAmc,GACA9jB,EAAA8jB,UAOAd,EAAA13B,UAAA04B,aAAA,SAAAH,EAAAxZ,EAAA4Z,GACApI,EAAA,oEACAC,EAAA+H,EAAA,gBACA/H,EAAAzR,EAAA,aAEA,IAAApkB,GAAAC,IACA,OAAA,IAAAsU,GAAA,SAAAwF,EAAA8E,GAEA,GAAAkG,IACA/kB,EAAAE,QAAAolB,UAAAuW,EAAA,KAAAc,GACA38B,EAAAE,QAAAolB,UAAAiY,EAAA,KAAAK,GACA59B,EAAAE,QAAAolB,UAAAmY,EAAA,KAAArZ,GACApkB,EAAAE,QAAAolB,UAAAoY,GAGA,IAAAjH,EAAAuH,GACA,IAAA,GAAAC,KAAAD,GACA,GAAAA,EAAAzxB,eAAA0xB,GAAA,CACA,GAAAhzB,GAAAjL,EAAA21B,gBAAAwE,kBAAA6D,EAAAC,GACAlZ,GAAAtd,KAAAzH,EAAAE,QAAAolB,UAAAqY,EAAAM,EAAA,KAAAhzB,EAAA9E,MAAA,UACA4e,EAAAtd,KAAAzH,EAAAE,QAAAolB,UAAAqY,EAAAM,EAAA,KAAAhzB,EAAAb,KAAA,eAKA,GAAAyjB,GAAA7tB,EAAAE,QAAA+nB,kBAAApe,MAAA7J,EAAAE,SAAA,KAAAs8B,GAAAjqB,OAAAwS,GAEA/kB,GAAAisB,UAAAnR,OAAAsiB,EAAAY,GAAAhkB,KAAA,WACA,GAAAkkB,GAAArQ,EAAA9G,4BAAA2W,GAAA5V,UACAoW,GACArf,EAAA,GAAAhe,OAAA,qCAEAkZ,IAEA/Z,EAAAE,QAAA4tB,wBAAAD,QAMAkP,EAAA13B,UAAA84B,kBAAA,SAAAN,GACAjI,EAAA,mDACAC,EAAAgI,EAAA,aAEA,IAAA79B,GAAAC,IACA,OAAA,IAAAsU,GAAA,SAAAwF,GACA/Z,EAAAisB,UAAA2Q,kBAAA5iB,KAAA,SAAA8jB,GACA99B,EAAAg9B,YAAAh9B,UAAA69B,GACAC,EAAA/W,4BAAAwW,GAAA5V,SAAAkW,EAAAD,cACA59B,EAAAisB,UAAAnR,OAAAuiB,GAAArjB,KAAAD,QAMAgjB,EAAA13B,UAAA41B,QAAA,WACA,GAAAmD,GAAAn+B,KAAA+8B,YACAqB,IASA,OARAp+B,MAAA+8B,YAAA,GAAAvoB,GACA2pB,EAAAx4B,QAAA,SAAAi4B,GACA,IACAQ,EAAA52B,KAAAo2B,EAAA5C,WACA,MAAA96B,OAIAoU,EAAAwM,IAAAsd,IAKA5+B,EAAAs9B,kBAAAA,ItH22JGF,iDAAiD,EAAEyB,6CAA6C,EAAEC,iBAAiB,GAAGC,iBAAiB,GAAGC,uBAAuB,GAAG3G,iBAAiB,GAAGC,aAAa,KAAK2G,IAAI,SAASv9B,EAAQzB,EAAOD,GuHp/JzO,YAUA,SAAAw9B,GAAAW,EAAA5R,EAAA2S,GACA/I,EAAA,iDACAC,EAAA+H,EAAA,gBACA/H,EAAA7J,EAAA,SACA6J,EAAA8I,EAAA,WAEA1+B,KAAA29B,aAAAA,EACA39B,KAAA+rB,MAAAA,EACA/rB,KAAA0+B,QAAAA,EACA1+B,KAAA2+B,WAAA,EACA3+B,KAAA4+B,oBAAA,GAAApqB,GAlBAtT,EAAA,iBACA,IAAAsT,GAAAtT,EAAA,8CACA61B,EAAA71B,EAAA,cACAy0B,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,UAkBAoH,GAAA53B,UAAAyV,OAAA,SAAAzQ,EAAA2zB,GAIA,GAHApI,EAAA,wCACAC,EAAAxrB,EAAA,QAEApK,KAAA2+B,UACA,KAAA,IAAA/9B,OAAA,uCAEA,OAAAZ,MAAA0+B,QAAAZ,aAAA99B,KAAA29B,aAAAvzB,EAAA2zB,IAIAf,EAAA53B,UAAA41B,QAAA,WACA,GAAAh7B,KAAA2+B,UACA,KAAA,IAAA/9B,OAAA,uCAUA,OARAZ,MAAA2+B,WAAA,EACA3+B,KAAA4+B,oBAAAj5B,QAAA,SAAA6Z,GACA,IACAA,EAAAxf,MACA,MAAAE,GACA4f,QAAA2W,KAAA,6DAAAv2B,KAEAF,MACAA,KAAA0+B,QAAAR,kBAAAl+B,OAIAg9B,EAAA53B,UAAAy5B,YAAA,SAAArf,GACAmW,EAAA,wCACAC,EAAApW,EAAA,UAEA,IAAAzf,GAAAC,IAEA,OADAA,MAAA4+B,oBAAAnd,IAAAjC,IAEAkY,YAAA,WACA33B,EAAA6+B,oBAAA7+B,UAAAyf,MAOAhgB,EAAAw9B,gBAAAA,IvHwgKGqB,6CAA6C,EAAExG,iBAAiB,GAAGC,aAAa,KAAKgH,IAAI,SAAS59B,EAAQzB,EAAOD,GwH1kKpH,YAEA0B,GAAA,iBACA,IAAAkhB,GAAAlhB,EAAA,4BAEA61B,EAAA71B,EAAA,cACAs1B,EAAAO,EAAAP,OACAb,EAAAoB,EAAApB,YACAC,EAAAmB,EAAAnB,WACA2F,EAAAr6B,EAAA,kBAAAq6B,UACA9F,EAAAv0B,EAAA,oBAAAu0B,YACAuD,EAAA93B,EAAA,kBAAA83B,gBACA8D,EAAA57B,EAAA,0BAAA47B,kBACAxC,EAAAp5B,EAAA,sBAAAo5B,cACAtQ,EAAA9oB,EAAA,cAAA8oB,KAEAxqB,GAAAu/B,QAAA,SAAA9L,EAAAuI,GACA7F,EAAA,wBACAC,EAAA3C,EAAA,MAEA,IAAA+L,GAAA5c,EAAA8Q,cAAAD,IAAAA,GAAAzM,OAAA,GAAA2J,QAAA,GAAAuD,aAAA,EACA8C,GAAAgF,IAAAhF,EAAAgF,EAAA/H,eACAuL,EAAAvL,aAAA+H,EAAA/H,aAEA,IAAAxzB,GAAA++B,EAAA7L,OACAlzB,GAAAouB,gBAAA6B,YAAAM,MAAAxG,CAEA,IAAA0L,GAAA,GAAAsD,GAAA/4B,GACAs6B,EAAA,GAAA9E,GAAAC,GACA1J,EAAA,GAAAuP,GAAAtI,EAAAhzB,EAAAy1B,EAAA8F,GACAhB,EAAA,GAAAsC,GAAA78B,EAAAy1B,EAAA1J,EAEA,OAAA,IAAAsO,GAAAr6B,EAAAs6B,EAAAC,EAAAxO,MxH+lKGoO,2BAA2B,GAAG6E,mBAAmB,GAAGX,iBAAiB,GAAGY,qBAAqB,GAAGC,aAAa,GAAGZ,iBAAiB,GAAGa,yBAAyB,GAAGvH,iBAAiB,GAAGC,aAAa,KAAKuH,IAAI,SAASn+B,EAAQzB,EAAOD,GyH7nKrOyN,MAAA7H,UAAAO,UAEAsH,MAAA7H,UAAAO,QAAA,SAAAyrB,EAAAkO,GAEA,GAAA/8B,GAAAoC,CAEA,IAAA,MAAA3E,KACA,KAAA,IAAA4B,WAAA,+BAIA,IAAAU,GAAAI,OAAA1C,MAIAu/B,EAAAj9B,EAAAtB,SAAA,CAIA,IAAA,kBAAAowB,GACA,KAAA,IAAAxvB,WAAAwvB,EAAA,qBAYA,KARA/uB,UAAArB,OAAA,IACAuB,EAAA+8B,GAIA36B,EAAA,EAGA46B,EAAA56B,GAAA,CAEA,GAAA66B,EAOA76B,KAAArC,KAGAk9B,EAAAl9B,EAAAqC,GAIAysB,EAAArwB,KAAAwB,EAAAi9B,EAAA76B,EAAArC,IAGAqC,OAWAsI,MAAA7H,UAAAioB,SACApgB,MAAA7H,UAAAioB,OAAA,SAAAoS,GACA,YAEA,IAAA,SAAAz/B,MAAA,OAAAA,KACA,KAAA,IAAA4B,UAGA,IAAAzB,GAAAuC,OAAA1C,MACAu/B,EAAAp/B,EAAAa,SAAA,CACA,IAAA,kBAAAy+B,GACA,KAAA,IAAA79B,UAKA,KAAA,GAFA89B,MACAJ,EAAAj9B,UAAArB,QAAA,EAAAqB,UAAA,GAAA,OACA1B,EAAA,EAAA4+B,EAAA5+B,EAAAA,IACA,GAAAA,IAAAR,GAAA,CACA,GAAAw/B,GAAAx/B,EAAAQ,EAOA8+B,GAAA1+B,KAAAu+B,EAAAK,EAAAh/B,EAAAR,IACAu/B,EAAAl4B,KAAAm4B,GAKA,MAAAD,UzHopKME,IAAI,SAAS1+B,EAAQzB,EAAOD,G0HpvKlC,YAEA,IAAAqgC,GAEArJ,EAAA,SAAA/pB,GACA,MAAA,mBAAAA,IAAA,OAAAA,EAGAhN,GAAAD,QAAAg3B,OAAAA,EAEA/2B,EAAAD,QAAAm2B,YAAA,SAAAvrB,GACAy1B,EAAAz1B,GAGA3K,EAAAD,QAAAo2B,WAAA,SAAA5qB,EAAA80B,GACA,IAAAtJ,EAAAxrB,GACA,KAAA,IAAApK,OAAA,iBAAAk/B,EAAA,oBAAAD,c1HywKW,KAAK,QAIb9+B,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,gBAErH0c,IAAI,SAASrb,EAAQzB,EAAOD,G2H9xKlC,YAKA,SAAAg3B,GAAA/pB,GACA,MAAA,mBAAAA,IAAA,OAAAA,EAKA,QAAAszB,GAAAvH,EAAAwH,GAIA,EAAA,CACA,GAAAC,GAAAD,EAAAxN,MAAA,oBACAluB,EAAA,OAAA27B,EAAAA,EAAA,GAAAD,CAGA,IAFAA,EAAA,OAAAC,EAAAA,EAAA,GAAA,KAEAhzB,MAAA0sB,QAAAnB,GAAA,CACA,GAAA0H,GAAAC,SAAA77B,EACA,IAAAuN,MAAAquB,GACA1H,EAAAA,EAAAl0B,OACA,CACA,GAAA+yB,GAAA+I,QAAAle,WAAAlc,IAAAwyB,EACAA,GAAAnB,EAAAgJ,QAAAH,QAGA1H,GAAAA,EAAAl0B,SAEA,OAAA07B,GAAAxJ,EAAAgC,GAEA,OAAAA,GAEA,QAAA8H,GAAA9H,EAAAwH,GACA,GAAAO,GAAAP,EAAAxN,MAAA,iBACA,OAAAgE,GAAA+J,IAGA/J,EAAAgK,KACAA,EAAA,gBAAAJ,SAAA92B,SAAA,OAAA82B,QAAA92B,QAAAkpB,MAAA,eAEAgO,EAAAT,EAAAvH,EAAA+H,EAAA,IAAA/H,EAAAxyB,IAAAu6B,EAAA,GAAA/H,IALAA,EAUA,QAAAiI,GAAAC,GAEA,GAAAC,GAAA,GAAAC,GAAAF,EAAAnG,YAEA,OAAA,UAAAsG,GACA,GAAAC,GAAA,cACA,QAEAC,YACAhV,OACA5hB,KAAAzH,OACAwD,MAAA,WAAA,YAIA86B,WAAA,6BAEAC,QAAA,WACA,GAAAlhC,GAAAC,IACA0gC,GAAA5F,iBAAA+F,GAAA9mB,KAAA,SAAA6jB,GACA79B,EAAAmhC,YAAAtD,EACAkD,EAAA,QACA/gC,EAAAsT,IAAA,QAAAuqB,EAAA7R,OACA6R,EAAAiB,YAAA,WACAiC,EAAA,YACA/gC,EAAAsT,IAAA,QAAA,WAKAwH,OAAA,SAAAsJ,EAAA4Z,GAEA,MAAA,UAAA+C,MACAhhB,SAAA2W,KAAA,qDAGAz2B,KAAAkhC,YAAArmB,OAAAsJ,EAAA4Z,IAGAoD,iBAAA,SAAAzlB,GACA,GAAA,UAAAolB,EAAA,CAGA,GACAxK,GAAA3S,EAAAhjB,EAAAygC,EADApB,EAAAtkB,EAAAskB,KAEApc,EAAAlI,EAAAxV,KAEA,IAAAswB,EAAA5S,IAAA4S,EAAA5S,EAAAyd,eAGA,GAFArB,EAAAA,EAAAsB,OAAA,EAAAtB,EAAAh/B,OAAA,WAAAA,QACAs1B,EAAAgK,EAAAtgC,KAAAggC,GACAxJ,EAAAF,GAAA,CACA3S,EAAAqc,EAAAxN,MAAA,UACA,IAAApyB,GAAAwjB,EAAAyd,aAAArgC,MACA,KAAAL,EAAA,EAAAP,EAAAO,EAAAA,IAAA,CACA,GAAA4gC,GAAA3d,EAAAyd,aAAA1gC,EACA+/B,GAAAnG,YAAAtD,kBAAAX,EAAA3S,EAAA,GAAA4d,EAAA/8B,MAAA+8B,EAAAC,WAAAD,EAAAvU,QAEA,IAAAyM,GAAAnD,EAAA3S,EAAA,GACA,KAAAyd,EAAA,EAAAA,EAAAG,EAAAvU,QAAAhsB,OAAAogC,IACAT,EAAAc,OAAAzhC,KAAAggC,EAAA,KAAAuB,EAAA/8B,MAAA48B,GAAAG,EAAAvU,QAAAoU,GAEA,KAAAA,EAAAG,EAAA/8B,MAAA+8B,EAAAC,WAAAJ,EAAA3H,EAAAz4B,OAAAogC,IAAA,CACA,GAAAM,GAAAN,EAAAG,EAAAC,WAAAD,EAAAvU,QAAAhsB,MACA2/B,GAAAc,OAAAzhC,KAAAggC,EAAA,IAAA0B,EAAAjI,EAAA2H,IAEA,IAAAA,EAAAG,EAAA/8B,MAAA48B,EAAA3H,EAAAz4B,OAAAogC,IACAT,EAAAgB,KAAA3hC,KAAAggC,EAAA,IAAAoB,EAAA3H,EAAA2H,UAMA,IADA9K,EAAAgK,EAAAtgC,KAAAggC,GACAxJ,EAAAF,KAAArpB,MAAA0sB,QAAArD,KAAArpB,MAAA0sB,QAAA/V,GAAA,CACAD,EAAAqc,EAAAxN,MAAA,UACA,IAAAjM,GAAAma,EAAAnG,YAAAvD,iBAAAV,EAAA3S,EAAA,GAAAC,EACA4S,GAAAjQ,IACAoa,EAAAc,OAAAzhC,KAAAggC,EAAAzZ,GAEAiQ,EAAA5S,IACA+c,EAAAgB,KAAA3hC,KAAAggC,EAAApc,QA7HA,GAQA4c,GARAI,EAAA1/B,EAAA,eAAA0/B,MAwIAphC,GAAAihC,oBAAAA,I3HizKGmB,cAAc,KAAKnlB,IAAI,SAASvb,EAAQzB,EAAOD,G4H57KlD,YAMA,SAAAg3B,GAAA/pB,GACA,MAAA,mBAAAA,IAAA,OAAAA,EAGA,QAAAo1B,GAAAC,EAAAp4B,GACA,MAAA,YACAA,EAAAE,MAAAk4B,EAAAz/B,YAIA,QAAA0/B,GAAAC,EAAAC,GACA,GAAAD,IAAAC,IAAAzL,EAAAwL,KAAAxL,EAAAyL,GACA,OAAA,CAEA,IAAAzL,EAAAwL,KAAAxL,EAAAyL,GACA,OAAA,CAEA,IAAA7hC,GAAA4hC,EAAAhhC,MACA,IAAAihC,EAAAjhC,SAAAZ,EACA,OAAA,CAEA,KAAA,GAAAO,GAAA,EAAAP,EAAAO,EAAAA,IACA,GAAAqhC,EAAArhC,KAAAshC,EAAAthC,GACA,OAAA,CAGA,QAAA,EAIA,QAAAigC,GAAArG,GACAv6B,KAAAkiC,UAAA,GAAA/gC,GAEAo5B,EAAA5D,aAAAkL,EAAA7hC,KAAAA,KAAAmiC,sBACA5H,EAAA3D,cAAAiL,EAAA7hC,KAAAA,KAAAoiC,uBAtCA,GAAAjhC,GAAAD,EAAA,6CA0CA0/B,GAAAx7B,UAAA+8B,oBAAA,SAAA7L,EAAA3S,EAAAC,EAAA2C,GACA,GAAAA,IAAA3C,EAAA,CAGA,GAAAye,GAAAriC,KAAAkiC,UAAAl8B,IAAAswB,EACA,IAAAE,EAAA6L,IAAAA,EAAArhC,OAAA,EAAA,CACA,GAAAuD,GAAA89B,EAAA,GACA7J,EAAAj0B,EAAAi0B,QACAwH,EAAAz7B,EAAA+9B,SAAA,IAAA3e,CACA6U,GAAAnlB,IAAA2sB,EAAApc,OAEA0S,GAAA3S,GAAAC,IAKAgd,EAAAx7B,UAAAg9B,qBAAA,SAAA9L,EAAA3S,EAAAnf,EAAAqyB,EAAAC,GACA,GAAA2C,GAAAnD,EAAA3S,GACA4e,EAAA9I,EAAAz2B,MAAAwB,EAAAA,EAAAqyB,EACA,KAAAkL,EAAAjL,EAAAyL,GAAA,CAGA,GAAAF,GAAAriC,KAAAkiC,UAAAl8B,IAAAswB,EACA,IAAAE,EAAA6L,IAAAA,EAAArhC,OAAA,EAAA,CACA,GAAAuD,GAAA89B,EAAA,GACA7J,EAAAj0B,EAAAi0B,QACAwH,EAAAz7B,EAAA+9B,SAAA,IAAA3e,CACA,oBAAAmT,GACA0B,EAAAzN,OAAAiV,EAAAx7B,EAAAqyB,GAEA2B,EAAAzN,OAAAnhB,MAAA4uB,GAAAwH,EAAAx7B,EAAAqyB,GAAAvkB,OAAAwkB,QAGA,mBAAAA,GACA2C,EAAA1O,OAAAvmB,EAAAqyB,GAEA4C,EAAA1O,OAAAnhB,MAAA6vB,GAAAj1B,EAAAqyB,GAAAvkB,OAAAwkB,MAMA8J,EAAAx7B,UAAAu8B,KAAA,SAAAnJ,EAAA8J,EAAAp8B;AACA,GAAAswB,EAAAtwB,IAAA,gBAAAA,GAAA,CAGA,GAAAm8B,GAAAriC,KAAAkiC,UAAAl8B,IAAAE,EAOA,IANAswB,EAAA6L,KACAA,KACAriC,KAAAkiC,UAAA7uB,IAAAnN,EAAAm8B,IAEAA,EAAA76B,MAAAgxB,QAAAA,EAAA8J,SAAAA,IAEAr1B,MAAA0sB,QAAAzzB,GACA,IAAA,GAAAvF,GAAA,EAAAA,EAAAuF,EAAAlF,OAAAL,IACAX,KAAA2hC,KAAAnJ,EAAA8J,EAAA,IAAA3hC,EAAAuF,EAAAvF,QAEA,IAAA,gBAAAuF,GACA,IAAA,GAAAyd,KAAAzd,GACAA,EAAAoG,eAAAqX,IACA3jB,KAAA2hC,KAAAnJ,EAAA8J,EAAA,IAAA3e,EAAAzd,EAAAyd,MAMAid,EAAAx7B,UAAAq8B,OAAA,SAAAjJ,EAAA8J,EAAAp8B,GACA,GAAAswB,EAAAtwB,IAAA,gBAAAA,GAAA,CAGA,GAAAm8B,GAAAriC,KAAAkiC,UAAAl8B,IAAAE,EACA,IAAAswB,EAAA6L,GAEA,IAAA,GADAjiC,GAAAiiC,EAAArhC,OACAL,EAAA,EAAAP,EAAAO,EAAAA,IAAA,CACA,GAAA4D,GAAA89B,EAAA1hC,EACA,IAAA4D,EAAAi0B,UAAAA,GAAAj0B,EAAA+9B,WAAAA,EAAA,CAGA,GAFAD,EAAAtX,OAAApqB,EAAA,GAEAsM,MAAA0sB,QAAAzzB,GACA,IAAA,GAAAk7B,GAAA,EAAAA,EAAAl7B,EAAAlF,OAAAogC,IACAphC,KAAAyhC,OAAAjJ,EAAA8J,EAAA,IAAAlB,EAAAl7B,EAAAk7B,QAEA,IAAA,gBAAAl7B,GACA,IAAA,GAAAyd,KAAAzd,GACAA,EAAAoG,eAAAqX,IACA3jB,KAAAyhC,OAAAjJ,EAAA8J,EAAA,IAAA3e,EAAAzd,EAAAyd,GAIA,YAQAnkB,EAAAohC,OAAAA,I5H+8KGhJ,6CAA6C,IAAIlb,IAAI,SAASxb,EAAQzB,EAAOD,G6H5lLhF,YAEA,IAAAu/B,GAAA79B,EAAA,kDAAA69B,QACA0B,EAAAv/B,EAAA,iBAAAu/B,mBAGAjhC,GAAAu/B,QAAA,SAAA9L,EAAAuI,GACA,GAAAkF,GAAA3B,EAAA9L,EAAAuI,EAEA,OADAkF,GAAA8B,eAAA/B,EAAAC,GACAA,K7HgnLG+B,iDAAiD,GAAGC,gBAAgB,UAAU,KAAK","file":"dolphin-polymer.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nmodule.exports = require('../modules/$.core').Map;","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.dolphin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.map');\n_dereq_('../modules/es7.map.to-json');\nmodule.exports = _dereq_('../modules/$.core').Map;\n},{\"../modules/$.core\":10,\"../modules/es6.map\":45,\"../modules/es6.object.to-string\":46,\"../modules/es6.string.iterator\":47,\"../modules/es7.map.to-json\":48,\"../modules/web.dom.iterable\":49}],2:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n},{}],3:[function(_dereq_,module,exports){\nmodule.exports = function(){ /* empty */ };\n},{}],4:[function(_dereq_,module,exports){\nvar isObject = _dereq_('./$.is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n},{\"./$.is-object\":22}],5:[function(_dereq_,module,exports){\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = _dereq_('./$.cof')\n  , TAG = _dereq_('./$.wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n},{\"./$.cof\":6,\"./$.wks\":42}],6:[function(_dereq_,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n},{}],7:[function(_dereq_,module,exports){\n'use strict';\nvar $            = _dereq_('./$')\n  , hide         = _dereq_('./$.hide')\n  , redefineAll  = _dereq_('./$.redefine-all')\n  , ctx          = _dereq_('./$.ctx')\n  , strictNew    = _dereq_('./$.strict-new')\n  , defined      = _dereq_('./$.defined')\n  , forOf        = _dereq_('./$.for-of')\n  , $iterDefine  = _dereq_('./$.iter-define')\n  , step         = _dereq_('./$.iter-step')\n  , ID           = _dereq_('./$.uid')('id')\n  , $has         = _dereq_('./$.has')\n  , isObject     = _dereq_('./$.is-object')\n  , setSpecies   = _dereq_('./$.set-species')\n  , DESCRIPTORS  = _dereq_('./$.descriptors')\n  , isExtensible = Object.isExtensible || isObject\n  , SIZE         = DESCRIPTORS ? '_s' : 'size'\n  , id           = 0;\n\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!$has(it, ID)){\n    // can't set id to frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add id\n    if(!create)return 'E';\n    // add missing object id\n    hide(it, ID, ++id);\n  // return object id with prefix\n  } return 'O' + it[ID];\n};\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      strictNew(that, C, NAME);\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n},{\"./$\":28,\"./$.ctx\":11,\"./$.defined\":12,\"./$.descriptors\":13,\"./$.for-of\":16,\"./$.has\":18,\"./$.hide\":19,\"./$.is-object\":22,\"./$.iter-define\":25,\"./$.iter-step\":26,\"./$.redefine-all\":31,\"./$.set-species\":33,\"./$.strict-new\":36,\"./$.uid\":41}],8:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar forOf   = _dereq_('./$.for-of')\n  , classof = _dereq_('./$.classof');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    var arr = [];\n    forOf(this, false, arr.push, arr);\n    return arr;\n  };\n};\n},{\"./$.classof\":5,\"./$.for-of\":16}],9:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./$')\n  , global         = _dereq_('./$.global')\n  , $export        = _dereq_('./$.export')\n  , fails          = _dereq_('./$.fails')\n  , hide           = _dereq_('./$.hide')\n  , redefineAll    = _dereq_('./$.redefine-all')\n  , forOf          = _dereq_('./$.for-of')\n  , strictNew      = _dereq_('./$.strict-new')\n  , isObject       = _dereq_('./$.is-object')\n  , setToStringTag = _dereq_('./$.set-to-string-tag')\n  , DESCRIPTORS    = _dereq_('./$.descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n  } else {\n    C = wrapper(function(target, iterable){\n      strictNew(target, C, NAME);\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n},{\"./$\":28,\"./$.descriptors\":13,\"./$.export\":14,\"./$.fails\":15,\"./$.for-of\":16,\"./$.global\":17,\"./$.hide\":19,\"./$.is-object\":22,\"./$.redefine-all\":31,\"./$.set-to-string-tag\":34,\"./$.strict-new\":36}],10:[function(_dereq_,module,exports){\nvar core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n},{}],11:[function(_dereq_,module,exports){\n// optional / simple context binding\nvar aFunction = _dereq_('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n},{\"./$.a-function\":2}],12:[function(_dereq_,module,exports){\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n},{}],13:[function(_dereq_,module,exports){\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !_dereq_('./$.fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n},{\"./$.fails\":15}],14:[function(_dereq_,module,exports){\nvar global    = _dereq_('./$.global')\n  , core      = _dereq_('./$.core')\n  , ctx       = _dereq_('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;\n},{\"./$.core\":10,\"./$.ctx\":11,\"./$.global\":17}],15:[function(_dereq_,module,exports){\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n},{}],16:[function(_dereq_,module,exports){\nvar ctx         = _dereq_('./$.ctx')\n  , call        = _dereq_('./$.iter-call')\n  , isArrayIter = _dereq_('./$.is-array-iter')\n  , anObject    = _dereq_('./$.an-object')\n  , toLength    = _dereq_('./$.to-length')\n  , getIterFn   = _dereq_('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that){\n  var iterFn = getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};\n},{\"./$.an-object\":4,\"./$.ctx\":11,\"./$.is-array-iter\":21,\"./$.iter-call\":23,\"./$.to-length\":40,\"./core.get-iterator-method\":43}],17:[function(_dereq_,module,exports){\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n},{}],18:[function(_dereq_,module,exports){\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n},{}],19:[function(_dereq_,module,exports){\nvar $          = _dereq_('./$')\n  , createDesc = _dereq_('./$.property-desc');\nmodule.exports = _dereq_('./$.descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n},{\"./$\":28,\"./$.descriptors\":13,\"./$.property-desc\":30}],20:[function(_dereq_,module,exports){\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = _dereq_('./$.cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n},{\"./$.cof\":6}],21:[function(_dereq_,module,exports){\n// check on default Array iterator\nvar Iterators  = _dereq_('./$.iterators')\n  , ITERATOR   = _dereq_('./$.wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n},{\"./$.iterators\":27,\"./$.wks\":42}],22:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n},{}],23:[function(_dereq_,module,exports){\n// call something on iterator step with safe closing on error\nvar anObject = _dereq_('./$.an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n},{\"./$.an-object\":4}],24:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./$')\n  , descriptor     = _dereq_('./$.property-desc')\n  , setToStringTag = _dereq_('./$.set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_dereq_('./$.hide')(IteratorPrototype, _dereq_('./$.wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n},{\"./$\":28,\"./$.hide\":19,\"./$.property-desc\":30,\"./$.set-to-string-tag\":34,\"./$.wks\":42}],25:[function(_dereq_,module,exports){\n'use strict';\nvar LIBRARY        = _dereq_('./$.library')\n  , $export        = _dereq_('./$.export')\n  , redefine       = _dereq_('./$.redefine')\n  , hide           = _dereq_('./$.hide')\n  , has            = _dereq_('./$.has')\n  , Iterators      = _dereq_('./$.iterators')\n  , $iterCreate    = _dereq_('./$.iter-create')\n  , setToStringTag = _dereq_('./$.set-to-string-tag')\n  , getProto       = _dereq_('./$').getProto\n  , ITERATOR       = _dereq_('./$.wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , methods, key;\n  // Fix native\n  if($native){\n    var IteratorPrototype = getProto($default.call(new Base));\n    // Set @@toStringTag to native iterators\n    setToStringTag(IteratorPrototype, TAG, true);\n    // FF fix\n    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    // fix Array#{values, @@iterator}.name in V8 / FF\n    if(DEF_VALUES && $native.name !== VALUES){\n      VALUES_BUG = true;\n      $default = function values(){ return $native.call(this); };\n    }\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n      keys:    IS_SET      ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n},{\"./$\":28,\"./$.export\":14,\"./$.has\":18,\"./$.hide\":19,\"./$.iter-create\":24,\"./$.iterators\":27,\"./$.library\":29,\"./$.redefine\":32,\"./$.set-to-string-tag\":34,\"./$.wks\":42}],26:[function(_dereq_,module,exports){\nmodule.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n},{}],27:[function(_dereq_,module,exports){\nmodule.exports = {};\n},{}],28:[function(_dereq_,module,exports){\nvar $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n},{}],29:[function(_dereq_,module,exports){\nmodule.exports = true;\n},{}],30:[function(_dereq_,module,exports){\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n},{}],31:[function(_dereq_,module,exports){\nvar redefine = _dereq_('./$.redefine');\nmodule.exports = function(target, src){\n  for(var key in src)redefine(target, key, src[key]);\n  return target;\n};\n},{\"./$.redefine\":32}],32:[function(_dereq_,module,exports){\nmodule.exports = _dereq_('./$.hide');\n},{\"./$.hide\":19}],33:[function(_dereq_,module,exports){\n'use strict';\nvar core        = _dereq_('./$.core')\n  , $           = _dereq_('./$')\n  , DESCRIPTORS = _dereq_('./$.descriptors')\n  , SPECIES     = _dereq_('./$.wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n},{\"./$\":28,\"./$.core\":10,\"./$.descriptors\":13,\"./$.wks\":42}],34:[function(_dereq_,module,exports){\nvar def = _dereq_('./$').setDesc\n  , has = _dereq_('./$.has')\n  , TAG = _dereq_('./$.wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n},{\"./$\":28,\"./$.has\":18,\"./$.wks\":42}],35:[function(_dereq_,module,exports){\nvar global = _dereq_('./$.global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n},{\"./$.global\":17}],36:[function(_dereq_,module,exports){\nmodule.exports = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};\n},{}],37:[function(_dereq_,module,exports){\nvar toInteger = _dereq_('./$.to-integer')\n  , defined   = _dereq_('./$.defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n},{\"./$.defined\":12,\"./$.to-integer\":38}],38:[function(_dereq_,module,exports){\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n},{}],39:[function(_dereq_,module,exports){\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = _dereq_('./$.iobject')\n  , defined = _dereq_('./$.defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n},{\"./$.defined\":12,\"./$.iobject\":20}],40:[function(_dereq_,module,exports){\n// 7.1.15 ToLength\nvar toInteger = _dereq_('./$.to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n},{\"./$.to-integer\":38}],41:[function(_dereq_,module,exports){\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n},{}],42:[function(_dereq_,module,exports){\nvar store  = _dereq_('./$.shared')('wks')\n  , uid    = _dereq_('./$.uid')\n  , Symbol = _dereq_('./$.global').Symbol;\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n};\n},{\"./$.global\":17,\"./$.shared\":35,\"./$.uid\":41}],43:[function(_dereq_,module,exports){\nvar classof   = _dereq_('./$.classof')\n  , ITERATOR  = _dereq_('./$.wks')('iterator')\n  , Iterators = _dereq_('./$.iterators');\nmodule.exports = _dereq_('./$.core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n},{\"./$.classof\":5,\"./$.core\":10,\"./$.iterators\":27,\"./$.wks\":42}],44:[function(_dereq_,module,exports){\n'use strict';\nvar addToUnscopables = _dereq_('./$.add-to-unscopables')\n  , step             = _dereq_('./$.iter-step')\n  , Iterators        = _dereq_('./$.iterators')\n  , toIObject        = _dereq_('./$.to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = _dereq_('./$.iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n},{\"./$.add-to-unscopables\":3,\"./$.iter-define\":25,\"./$.iter-step\":26,\"./$.iterators\":27,\"./$.to-iobject\":39}],45:[function(_dereq_,module,exports){\n'use strict';\nvar strong = _dereq_('./$.collection-strong');\n\n// 23.1 Map Objects\n_dereq_('./$.collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n},{\"./$.collection\":9,\"./$.collection-strong\":7}],46:[function(_dereq_,module,exports){\n\n},{}],47:[function(_dereq_,module,exports){\n'use strict';\nvar $at  = _dereq_('./$.string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_dereq_('./$.iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n},{\"./$.iter-define\":25,\"./$.string-at\":37}],48:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = _dereq_('./$.export');\n\n$export($export.P, 'Map', {toJSON: _dereq_('./$.collection-to-json')('Map')});\n},{\"./$.collection-to-json\":8,\"./$.export\":14}],49:[function(_dereq_,module,exports){\n_dereq_('./es6.array.iterator');\nvar Iterators = _dereq_('./$.iterators');\nIterators.NodeList = Iterators.HTMLCollection = Iterators.Array;\n},{\"./$.iterators\":27,\"./es6.array.iterator\":44}],50:[function(_dereq_,module,exports){\n(function (global){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.dolphin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.map');\n_dereq_('../modules/es7.map.to-json');\nmodule.exports = _dereq_('../modules/_core').Map;\n},{\"../modules/_core\":15,\"../modules/es6.map\":57,\"../modules/es6.object.to-string\":58,\"../modules/es6.string.iterator\":61,\"../modules/es7.map.to-json\":62,\"../modules/web.dom.iterable\":64}],2:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.promise');\nmodule.exports = _dereq_('../modules/_core').Promise;\n},{\"../modules/_core\":15,\"../modules/es6.object.to-string\":58,\"../modules/es6.promise\":59,\"../modules/es6.string.iterator\":61,\"../modules/web.dom.iterable\":64}],3:[function(_dereq_,module,exports){\n_dereq_('../modules/es6.object.to-string');\n_dereq_('../modules/es6.string.iterator');\n_dereq_('../modules/web.dom.iterable');\n_dereq_('../modules/es6.set');\n_dereq_('../modules/es7.set.to-json');\nmodule.exports = _dereq_('../modules/_core').Set;\n},{\"../modules/_core\":15,\"../modules/es6.object.to-string\":58,\"../modules/es6.set\":60,\"../modules/es6.string.iterator\":61,\"../modules/es7.set.to-json\":63,\"../modules/web.dom.iterable\":64}],4:[function(_dereq_,module,exports){\nvar $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n},{}],5:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n},{}],6:[function(_dereq_,module,exports){\nmodule.exports = function(){ /* empty */ };\n},{}],7:[function(_dereq_,module,exports){\nmodule.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n},{}],8:[function(_dereq_,module,exports){\nvar isObject = _dereq_('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n},{\"./_is-object\":30}],9:[function(_dereq_,module,exports){\nvar forOf = _dereq_('./_for-of');\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n},{\"./_for-of\":22}],10:[function(_dereq_,module,exports){\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = _dereq_('./_cof')\n  , TAG = _dereq_('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n},{\"./_cof\":11,\"./_wks\":54}],11:[function(_dereq_,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n},{}],12:[function(_dereq_,module,exports){\n'use strict';\nvar $           = _dereq_('./_')\n  , hide        = _dereq_('./_hide')\n  , redefineAll = _dereq_('./_redefine-all')\n  , ctx         = _dereq_('./_ctx')\n  , anInstance  = _dereq_('./_an-instance')\n  , defined     = _dereq_('./_defined')\n  , forOf       = _dereq_('./_for-of')\n  , $iterDefine = _dereq_('./_iter-define')\n  , step        = _dereq_('./_iter-step')\n  , setSpecies  = _dereq_('./_set-species')\n  , DESCRIPTORS = _dereq_('./_descriptors')\n  , fastKey     = _dereq_('./_meta').fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n},{\"./_\":4,\"./_an-instance\":7,\"./_ctx\":16,\"./_defined\":17,\"./_descriptors\":18,\"./_for-of\":22,\"./_hide\":25,\"./_iter-define\":33,\"./_iter-step\":35,\"./_meta\":38,\"./_redefine-all\":41,\"./_set-species\":44}],13:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = _dereq_('./_classof')\n  , from    = _dereq_('./_array-from-iterable');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n},{\"./_array-from-iterable\":9,\"./_classof\":10}],14:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./_')\n  , global         = _dereq_('./_global')\n  , $export        = _dereq_('./_export')\n  , meta           = _dereq_('./_meta')\n  , fails          = _dereq_('./_fails')\n  , hide           = _dereq_('./_hide')\n  , redefineAll    = _dereq_('./_redefine-all')\n  , forOf          = _dereq_('./_for-of')\n  , anInstance     = _dereq_('./_an-instance')\n  , isObject       = _dereq_('./_is-object')\n  , setToStringTag = _dereq_('./_set-to-string-tag')\n  , DESCRIPTORS    = _dereq_('./_descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function(target, iterable){\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        anInstance(this, C, KEY);\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n},{\"./_\":4,\"./_an-instance\":7,\"./_descriptors\":18,\"./_export\":20,\"./_fails\":21,\"./_for-of\":22,\"./_global\":23,\"./_hide\":25,\"./_is-object\":30,\"./_meta\":38,\"./_redefine-all\":41,\"./_set-to-string-tag\":45}],15:[function(_dereq_,module,exports){\nvar core = module.exports = {version: '2.0.3'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n},{}],16:[function(_dereq_,module,exports){\n// optional / simple context binding\nvar aFunction = _dereq_('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n},{\"./_a-function\":5}],17:[function(_dereq_,module,exports){\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n},{}],18:[function(_dereq_,module,exports){\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !_dereq_('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n},{\"./_fails\":21}],19:[function(_dereq_,module,exports){\nvar isObject = _dereq_('./_is-object')\n  , document = _dereq_('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n},{\"./_global\":23,\"./_is-object\":30}],20:[function(_dereq_,module,exports){\nvar global    = _dereq_('./_global')\n  , core      = _dereq_('./_core')\n  , ctx       = _dereq_('./_ctx')\n  , hide      = _dereq_('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n},{\"./_core\":15,\"./_ctx\":16,\"./_global\":23,\"./_hide\":25}],21:[function(_dereq_,module,exports){\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n},{}],22:[function(_dereq_,module,exports){\nvar ctx         = _dereq_('./_ctx')\n  , call        = _dereq_('./_iter-call')\n  , isArrayIter = _dereq_('./_is-array-iter')\n  , anObject    = _dereq_('./_an-object')\n  , toLength    = _dereq_('./_to-length')\n  , getIterFn   = _dereq_('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};\n},{\"./_an-object\":8,\"./_ctx\":16,\"./_is-array-iter\":29,\"./_iter-call\":31,\"./_to-length\":52,\"./core.get-iterator-method\":55}],23:[function(_dereq_,module,exports){\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n},{}],24:[function(_dereq_,module,exports){\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n},{}],25:[function(_dereq_,module,exports){\nvar $          = _dereq_('./_')\n  , createDesc = _dereq_('./_property-desc');\nmodule.exports = _dereq_('./_descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n},{\"./_\":4,\"./_descriptors\":18,\"./_property-desc\":40}],26:[function(_dereq_,module,exports){\nmodule.exports = _dereq_('./_global').document && document.documentElement;\n},{\"./_global\":23}],27:[function(_dereq_,module,exports){\n// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};\n},{}],28:[function(_dereq_,module,exports){\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = _dereq_('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n},{\"./_cof\":11}],29:[function(_dereq_,module,exports){\n// check on default Array iterator\nvar Iterators  = _dereq_('./_iterators')\n  , ITERATOR   = _dereq_('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n},{\"./_iterators\":36,\"./_wks\":54}],30:[function(_dereq_,module,exports){\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n},{}],31:[function(_dereq_,module,exports){\n// call something on iterator step with safe closing on error\nvar anObject = _dereq_('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n},{\"./_an-object\":8}],32:[function(_dereq_,module,exports){\n'use strict';\nvar $              = _dereq_('./_')\n  , descriptor     = _dereq_('./_property-desc')\n  , setToStringTag = _dereq_('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_dereq_('./_hide')(IteratorPrototype, _dereq_('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n},{\"./_\":4,\"./_hide\":25,\"./_property-desc\":40,\"./_set-to-string-tag\":45,\"./_wks\":54}],33:[function(_dereq_,module,exports){\n'use strict';\nvar LIBRARY        = _dereq_('./_library')\n  , $export        = _dereq_('./_export')\n  , redefine       = _dereq_('./_redefine')\n  , hide           = _dereq_('./_hide')\n  , has            = _dereq_('./_has')\n  , Iterators      = _dereq_('./_iterators')\n  , $iterCreate    = _dereq_('./_iter-create')\n  , setToStringTag = _dereq_('./_set-to-string-tag')\n  , getProto       = _dereq_('./_').getProto\n  , ITERATOR       = _dereq_('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getProto($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n},{\"./_\":4,\"./_export\":20,\"./_has\":24,\"./_hide\":25,\"./_iter-create\":32,\"./_iterators\":36,\"./_library\":37,\"./_redefine\":42,\"./_set-to-string-tag\":45,\"./_wks\":54}],34:[function(_dereq_,module,exports){\nvar ITERATOR     = _dereq_('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n},{\"./_wks\":54}],35:[function(_dereq_,module,exports){\nmodule.exports = function(done, value){\n  return {value: value, done: !!done};\n};\n},{}],36:[function(_dereq_,module,exports){\nmodule.exports = {};\n},{}],37:[function(_dereq_,module,exports){\nmodule.exports = true;\n},{}],38:[function(_dereq_,module,exports){\nvar META     = _dereq_('./_uid')('meta')\n  , isObject = _dereq_('./_is-object')\n  , has      = _dereq_('./_has')\n  , setDesc  = _dereq_('./_').setDesc\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !_dereq_('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};\n},{\"./_\":4,\"./_fails\":21,\"./_has\":24,\"./_is-object\":30,\"./_uid\":53}],39:[function(_dereq_,module,exports){\nvar global    = _dereq_('./_global')\n  , macrotask = _dereq_('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = _dereq_('./_cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};\n},{\"./_cof\":11,\"./_global\":23,\"./_task\":49}],40:[function(_dereq_,module,exports){\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n},{}],41:[function(_dereq_,module,exports){\nvar hide = _dereq_('./_hide');\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n},{\"./_hide\":25}],42:[function(_dereq_,module,exports){\nmodule.exports = _dereq_('./_hide');\n},{\"./_hide\":25}],43:[function(_dereq_,module,exports){\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar getDesc  = _dereq_('./_').getDesc\n  , isObject = _dereq_('./_is-object')\n  , anObject = _dereq_('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = _dereq_('./_ctx')(Function.call, getDesc(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n},{\"./_\":4,\"./_an-object\":8,\"./_ctx\":16,\"./_is-object\":30}],44:[function(_dereq_,module,exports){\n'use strict';\nvar core        = _dereq_('./_core')\n  , $           = _dereq_('./_')\n  , DESCRIPTORS = _dereq_('./_descriptors')\n  , SPECIES     = _dereq_('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};\n},{\"./_\":4,\"./_core\":15,\"./_descriptors\":18,\"./_wks\":54}],45:[function(_dereq_,module,exports){\nvar def = _dereq_('./_').setDesc\n  , has = _dereq_('./_has')\n  , TAG = _dereq_('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n},{\"./_\":4,\"./_has\":24,\"./_wks\":54}],46:[function(_dereq_,module,exports){\nvar global = _dereq_('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n},{\"./_global\":23}],47:[function(_dereq_,module,exports){\n// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = _dereq_('./_an-object')\n  , aFunction = _dereq_('./_a-function')\n  , SPECIES   = _dereq_('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n},{\"./_a-function\":5,\"./_an-object\":8,\"./_wks\":54}],48:[function(_dereq_,module,exports){\nvar toInteger = _dereq_('./_to-integer')\n  , defined   = _dereq_('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n},{\"./_defined\":17,\"./_to-integer\":50}],49:[function(_dereq_,module,exports){\nvar ctx                = _dereq_('./_ctx')\n  , invoke             = _dereq_('./_invoke')\n  , html               = _dereq_('./_html')\n  , cel                = _dereq_('./_dom-create')\n  , global             = _dereq_('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listner = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(_dereq_('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listner;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listner, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};\n},{\"./_cof\":11,\"./_ctx\":16,\"./_dom-create\":19,\"./_global\":23,\"./_html\":26,\"./_invoke\":27}],50:[function(_dereq_,module,exports){\n// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n},{}],51:[function(_dereq_,module,exports){\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = _dereq_('./_iobject')\n  , defined = _dereq_('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n},{\"./_defined\":17,\"./_iobject\":28}],52:[function(_dereq_,module,exports){\n// 7.1.15 ToLength\nvar toInteger = _dereq_('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n},{\"./_to-integer\":50}],53:[function(_dereq_,module,exports){\nvar id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n},{}],54:[function(_dereq_,module,exports){\nvar store      = _dereq_('./_shared')('wks')\n  , uid        = _dereq_('./_uid')\n  , Symbol     = _dereq_('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n},{\"./_global\":23,\"./_shared\":46,\"./_uid\":53}],55:[function(_dereq_,module,exports){\nvar classof   = _dereq_('./_classof')\n  , ITERATOR  = _dereq_('./_wks')('iterator')\n  , Iterators = _dereq_('./_iterators');\nmodule.exports = _dereq_('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n},{\"./_classof\":10,\"./_core\":15,\"./_iterators\":36,\"./_wks\":54}],56:[function(_dereq_,module,exports){\n'use strict';\nvar addToUnscopables = _dereq_('./_add-to-unscopables')\n  , step             = _dereq_('./_iter-step')\n  , Iterators        = _dereq_('./_iterators')\n  , toIObject        = _dereq_('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = _dereq_('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n},{\"./_add-to-unscopables\":6,\"./_iter-define\":33,\"./_iter-step\":35,\"./_iterators\":36,\"./_to-iobject\":51}],57:[function(_dereq_,module,exports){\n'use strict';\nvar strong = _dereq_('./_collection-strong');\n\n// 23.1 Map Objects\nmodule.exports = _dereq_('./_collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n},{\"./_collection\":14,\"./_collection-strong\":12}],58:[function(_dereq_,module,exports){\n\n},{}],59:[function(_dereq_,module,exports){\n'use strict';\nvar $                  = _dereq_('./_')\n  , LIBRARY            = _dereq_('./_library')\n  , global             = _dereq_('./_global')\n  , ctx                = _dereq_('./_ctx')\n  , classof            = _dereq_('./_classof')\n  , $export            = _dereq_('./_export')\n  , isObject           = _dereq_('./_is-object')\n  , anObject           = _dereq_('./_an-object')\n  , aFunction          = _dereq_('./_a-function')\n  , anInstance         = _dereq_('./_an-instance')\n  , forOf              = _dereq_('./_for-of')\n  , from               = _dereq_('./_array-from-iterable')\n  , setProto           = _dereq_('./_set-proto').set\n  , speciesConstructor = _dereq_('./_species-constructor')\n  , task               = _dereq_('./_task').set\n  , microtask          = _dereq_('./_microtask')\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar testResolve = function(sub){\n  var test = new $Promise(empty), promise;\n  if(sub)test.constructor = function(exec){\n    exec(empty, empty);\n  };\n  (promise = $Promise.resolve(test))['catch'](empty);\n  return promise === test;\n};\n\nvar USE_NATIVE = function(){\n  var works = false;\n  var SubPromise = function(x){\n    var self = new $Promise(x);\n    setProto(self, SubPromise.prototype);\n    return self;\n  };\n  try {\n    works = $Promise && $Promise.resolve && testResolve();\n    setProto(SubPromise, $Promise);\n    SubPromise.prototype = $.create($Promise.prototype, {constructor: {value: SubPromise}});\n    // actual Firefox has broken subclass support, test that\n    if(!(SubPromise.resolve(5).then(empty) instanceof SubPromise)){\n      works = false;\n    }\n    // V8 4.8- bug, https://code.google.com/p/v8/issues/detail?id=4162\n    if(works && _dereq_('./_descriptors')){\n      var thenableThenGotten = false;\n      $Promise.resolve($.setDesc({}, 'then', {\n        get: function(){ thenableThenGotten = true; }\n      }));\n      works = thenableThenGotten;\n    }\n  } catch(e){ works = false; }\n  return !!works;\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          result = handler === true ? value : handler(value);\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    if(isUnhandled(promise)){\n      var value = promise._v\n        , handler, console;\n      if(isNode){\n        process.emit('unhandledRejection', value, promise);\n      } else if(handler = global.onunhandledrejection){\n        handler({promise: promise, reason: value});\n      } else if((console = global.console) && console.error){\n        console.error('Unhandled promise rejection', value);\n      } promise._h = 2;\n    } promise._a = undefined;\n  });\n};\nvar isUnhandled = function(promise){\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  if(promise._h == 1)return false;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = _dereq_('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok   = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\n_dereq_('./_set-to-string-tag')($Promise, PROMISE);\n_dereq_('./_set-species')(PROMISE);\nWrapper = _dereq_('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE || testResolve(true)), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && _dereq_('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = from(iterable)\n        , remaining = values.length\n        , results   = Array(remaining);\n      if(remaining)$.each.call(values, function(promise, index){\n        var alreadyCalled = false;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled = true;\n          results[index] = value;\n          --remaining || resolve(results);\n        }, reject);\n      });\n      else resolve(results);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});\n},{\"./_\":4,\"./_a-function\":5,\"./_an-instance\":7,\"./_an-object\":8,\"./_array-from-iterable\":9,\"./_classof\":10,\"./_core\":15,\"./_ctx\":16,\"./_descriptors\":18,\"./_export\":20,\"./_for-of\":22,\"./_global\":23,\"./_is-object\":30,\"./_iter-detect\":34,\"./_library\":37,\"./_microtask\":39,\"./_redefine-all\":41,\"./_set-proto\":43,\"./_set-species\":44,\"./_set-to-string-tag\":45,\"./_species-constructor\":47,\"./_task\":49}],60:[function(_dereq_,module,exports){\n'use strict';\nvar strong = _dereq_('./_collection-strong');\n\n// 23.2 Set Objects\nmodule.exports = _dereq_('./_collection')('Set', function(get){\n  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value){\n    return strong.def(this, value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n},{\"./_collection\":14,\"./_collection-strong\":12}],61:[function(_dereq_,module,exports){\n'use strict';\nvar $at  = _dereq_('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_dereq_('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n},{\"./_iter-define\":33,\"./_string-at\":48}],62:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = _dereq_('./_export');\n\n$export($export.P + $export.R, 'Map', {toJSON: _dereq_('./_collection-to-json')('Map')});\n},{\"./_collection-to-json\":13,\"./_export\":20}],63:[function(_dereq_,module,exports){\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = _dereq_('./_export');\n\n$export($export.P + $export.R, 'Set', {toJSON: _dereq_('./_collection-to-json')('Set')});\n},{\"./_collection-to-json\":13,\"./_export\":20}],64:[function(_dereq_,module,exports){\n_dereq_('./es6.array.iterator');\nvar global        = _dereq_('./_global')\n  , hide          = _dereq_('./_hide')\n  , Iterators     = _dereq_('./_iterators')\n  , TO_STRING_TAG = _dereq_('./_wks')('toStringTag')\n  , ArrayValues   = Iterators.Array;\n\n_dereq_('./_').each.call(['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], function(NAME){\n  var Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = ArrayValues;\n});\n},{\"./_\":4,\"./_global\":23,\"./_hide\":25,\"./_iterators\":36,\"./_wks\":54,\"./es6.array.iterator\":56}],65:[function(_dereq_,module,exports){\nvar opendolphin;\n(function (opendolphin) {\n    var Attribute = (function () {\n        function Attribute() {\n        }\n        Attribute.QUALIFIER_PROPERTY = \"qualifier\";\n        Attribute.DIRTY_PROPERTY = \"dirty\";\n        Attribute.BASE_VALUE = \"baseValue\";\n        Attribute.VALUE = \"value\";\n        Attribute.TAG = \"tag\";\n        return Attribute;\n    })();\n    opendolphin.Attribute = Attribute;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Command = (function () {\n        function Command() {\n            this.id = \"dolphin-core-command\";\n        }\n        return Command;\n    })();\n    opendolphin.Command = Command;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Tag = (function () {\n        function Tag() {\n        }\n        //Implemented as function so that it will never be changed from outside\n        /** The actual value of the attribute. This is the default if no tag is given.*/\n        Tag.value = function () {\n            return \"VALUE\";\n        };\n        /** the to-be-displayed String, not the key. I18N happens on the server. */\n        Tag.label = function () {\n            return \"LABEL\";\n        };\n        /** If the attribute represent tooltip**/\n        Tag.tooltip = function () {\n            return \"TOOLTIP\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint nullable:false */\n        Tag.mandatory = function () {\n            return \"MANDATORY\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint display:true */\n        Tag.visible = function () {\n            return \"VISIBLE\";\n        };\n        /** \"true\" or \"false\" */\n        Tag.enabled = function () {\n            return \"ENABLED\";\n        };\n        /** regular expression for local, syntactical constraints like in \"rejectField\" */\n        Tag.regex = function () {\n            return \"REGEX\";\n        };\n        /** a single text; e.g. \"textArea\" if the String value should be displayed in a text area instead of a textField */\n        Tag.widgetHint = function () {\n            return \"WIDGET_HINT\";\n        };\n        /** a single text; e.g. \"java.util.Date\" if the value String represents a date */\n        Tag.valueType = function () {\n            return \"VALUE_TYPE\";\n        };\n        return Tag;\n    })();\n    opendolphin.Tag = Tag;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeCreatedNotification = (function (_super) {\n        __extends(AttributeCreatedNotification, _super);\n        function AttributeCreatedNotification(pmId, attributeId, propertyName, newValue, qualifier, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.attributeId = attributeId;\n            this.propertyName = propertyName;\n            this.newValue = newValue;\n            this.qualifier = qualifier;\n            this.tag = tag;\n            this.id = 'AttributeCreated';\n            this.className = \"org.opendolphin.core.comm.AttributeCreatedNotification\";\n        }\n        return AttributeCreatedNotification;\n    })(opendolphin.Command);\n    opendolphin.AttributeCreatedNotification = AttributeCreatedNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeMetadataChangedCommand = (function (_super) {\n        __extends(AttributeMetadataChangedCommand, _super);\n        function AttributeMetadataChangedCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'AttributeMetadataChanged';\n            this.className = \"org.opendolphin.core.comm.AttributeMetadataChangedCommand\";\n        }\n        return AttributeMetadataChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.AttributeMetadataChangedCommand = AttributeMetadataChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var BaseValueChangedCommand = (function (_super) {\n        __extends(BaseValueChangedCommand, _super);\n        function BaseValueChangedCommand(attributeId) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.id = 'BaseValueChanged';\n            this.className = \"org.opendolphin.core.comm.BaseValueChangedCommand\";\n        }\n        return BaseValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.BaseValueChangedCommand = BaseValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CallNamedActionCommand = (function (_super) {\n        __extends(CallNamedActionCommand, _super);\n        function CallNamedActionCommand(actionName) {\n            _super.call(this);\n            this.actionName = actionName;\n            this.id = 'CallNamedAction';\n            this.className = \"org.opendolphin.core.comm.CallNamedActionCommand\";\n        }\n        return CallNamedActionCommand;\n    })(opendolphin.Command);\n    opendolphin.CallNamedActionCommand = CallNamedActionCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ChangeAttributeMetadataCommand = (function (_super) {\n        __extends(ChangeAttributeMetadataCommand, _super);\n        function ChangeAttributeMetadataCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'ChangeAttributeMetadata';\n            this.className = \"org.opendolphin.core.comm.ChangeAttributeMetadataCommand\";\n        }\n        return ChangeAttributeMetadataCommand;\n    })(opendolphin.Command);\n    opendolphin.ChangeAttributeMetadataCommand = ChangeAttributeMetadataCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var EventBus = (function () {\n        function EventBus() {\n            this.eventHandlers = [];\n        }\n        EventBus.prototype.onEvent = function (eventHandler) {\n            this.eventHandlers.push(eventHandler);\n        };\n        EventBus.prototype.trigger = function (event) {\n            this.eventHandlers.forEach(function (handle) { return handle(event); });\n        };\n        return EventBus;\n    })();\n    opendolphin.EventBus = EventBus;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var presentationModelInstanceCount = 0; // todo dk: consider making this static in class\n    var ClientPresentationModel = (function () {\n        function ClientPresentationModel(id, presentationModelType) {\n            this.id = id;\n            this.presentationModelType = presentationModelType;\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.dirty = false;\n            if (typeof id !== 'undefined' && id != null) {\n                this.id = id;\n            }\n            else {\n                this.id = (presentationModelInstanceCount++).toString();\n            }\n            this.invalidBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n        }\n        // todo dk: align with Java version: move to ClientDolphin and auto-add to model store\n        /** a copy constructor for anything but IDs. Per default, copies are client side only, no automatic update applies. */\n        ClientPresentationModel.prototype.copy = function () {\n            var result = new ClientPresentationModel(null, this.presentationModelType);\n            result.clientSideOnly = true;\n            this.getAttributes().forEach(function (attribute) {\n                var attributeCopy = attribute.copy();\n                result.addAttribute(attributeCopy);\n            });\n            return result;\n        };\n        //add array of attributes\n        ClientPresentationModel.prototype.addAttributes = function (attributes) {\n            var _this = this;\n            if (!attributes || attributes.length < 1)\n                return;\n            attributes.forEach(function (attr) {\n                _this.addAttribute(attr);\n            });\n        };\n        ClientPresentationModel.prototype.addAttribute = function (attribute) {\n            var _this = this;\n            if (!attribute || (this.attributes.indexOf(attribute) > -1)) {\n                return;\n            }\n            if (this.findAttributeByPropertyNameAndTag(attribute.propertyName, attribute.tag)) {\n                throw new Error(\"There already is an attribute with property name: \" + attribute.propertyName\n                    + \" and tag: \" + attribute.tag + \" in presentation model with id: \" + this.id);\n            }\n            if (attribute.getQualifier() && this.findAttributeByQualifier(attribute.getQualifier())) {\n                throw new Error(\"There already is an attribute with qualifier: \" + attribute.getQualifier()\n                    + \" in presentation model with id: \" + this.id);\n            }\n            attribute.setPresentationModel(this);\n            this.attributes.push(attribute);\n            if (attribute.tag == opendolphin.Tag.value()) {\n                this.updateDirty();\n            }\n            attribute.onValueChange(function (evt) {\n                _this.invalidBus.trigger({ source: _this });\n            });\n        };\n        ClientPresentationModel.prototype.updateDirty = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].isDirty()) {\n                    this.setDirty(true);\n                    return;\n                }\n            }\n            ;\n            this.setDirty(false);\n        };\n        ClientPresentationModel.prototype.updateAttributeDirtyness = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                this.attributes[i].updateDirty();\n            }\n        };\n        ClientPresentationModel.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientPresentationModel.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n        };\n        ClientPresentationModel.prototype.reset = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.reset();\n            });\n        };\n        ClientPresentationModel.prototype.rebase = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.rebase();\n            });\n        };\n        ClientPresentationModel.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientPresentationModel.prototype.onInvalidated = function (handleInvalidate) {\n            this.invalidBus.onEvent(handleInvalidate);\n        };\n        /** returns a copy of the internal state */\n        ClientPresentationModel.prototype.getAttributes = function () {\n            return this.attributes.slice(0);\n        };\n        ClientPresentationModel.prototype.getAt = function (propertyName, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            return this.findAttributeByPropertyNameAndTag(propertyName, tag);\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyName = function (propertyName) {\n            return this.findAttributeByPropertyNameAndTag(propertyName, opendolphin.Tag.value());\n        };\n        ClientPresentationModel.prototype.findAllAttributesByPropertyName = function (propertyName) {\n            var result = [];\n            if (!propertyName)\n                return null;\n            this.attributes.forEach(function (attribute) {\n                if (attribute.propertyName == propertyName) {\n                    result.push(attribute);\n                }\n            });\n            return result;\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyNameAndTag = function (propertyName, tag) {\n            if (!propertyName || !tag)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if ((this.attributes[i].propertyName == propertyName) && (this.attributes[i].tag == tag)) {\n                    return this.attributes[i];\n                }\n            }\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeByQualifier = function (qualifier) {\n            if (!qualifier)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].getQualifier() == qualifier) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeById = function (id) {\n            if (!id)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].id == id) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.syncWith = function (sourcePresentationModel) {\n            this.attributes.forEach(function (targetAttribute) {\n                var sourceAttribute = sourcePresentationModel.getAt(targetAttribute.propertyName, targetAttribute.tag);\n                if (sourceAttribute) {\n                    targetAttribute.syncWith(sourceAttribute);\n                }\n            });\n        };\n        return ClientPresentationModel;\n    })();\n    opendolphin.ClientPresentationModel = ClientPresentationModel;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientAttribute = (function () {\n        function ClientAttribute(propertyName, qualifier, value, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            this.propertyName = propertyName;\n            this.tag = tag;\n            this.dirty = false;\n            this.id = \"\" + (ClientAttribute.clientAttributeInstanceCount++) + \"C\";\n            this.valueChangeBus = new opendolphin.EventBus();\n            this.qualifierChangeBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n            this.baseValueChangeBus = new opendolphin.EventBus();\n            this.setValue(value);\n            this.setBaseValue(value);\n            this.setQualifier(qualifier);\n        }\n        /** a copy constructor with new id and no presentation model */\n        ClientAttribute.prototype.copy = function () {\n            var result = new ClientAttribute(this.propertyName, this.getQualifier(), this.getValue(), this.tag);\n            result.setBaseValue(this.getBaseValue());\n            return result;\n        };\n        ClientAttribute.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientAttribute.prototype.getBaseValue = function () {\n            return this.baseValue;\n        };\n        ClientAttribute.prototype.setPresentationModel = function (presentationModel) {\n            if (this.presentationModel) {\n                alert(\"You can not set a presentation model for an attribute that is already bound.\");\n            }\n            this.presentationModel = presentationModel;\n        };\n        ClientAttribute.prototype.getPresentationModel = function () {\n            return this.presentationModel;\n        };\n        ClientAttribute.prototype.getValue = function () {\n            return this.value;\n        };\n        ClientAttribute.prototype.setValue = function (newValue) {\n            var verifiedValue = ClientAttribute.checkValue(newValue);\n            if (this.value == verifiedValue)\n                return;\n            var oldValue = this.value;\n            this.value = verifiedValue;\n            this.setDirty(this.calculateDirty(this.baseValue, verifiedValue));\n            this.valueChangeBus.trigger({ 'oldValue': oldValue, 'newValue': verifiedValue });\n        };\n        ClientAttribute.prototype.calculateDirty = function (baseValue, value) {\n            if (baseValue == null) {\n                return value != null;\n            }\n            else {\n                return baseValue != value;\n            }\n        };\n        ClientAttribute.prototype.updateDirty = function () {\n            this.setDirty(this.calculateDirty(this.baseValue, this.value));\n        };\n        ClientAttribute.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n            if (this.presentationModel)\n                this.presentationModel.updateDirty();\n        };\n        ClientAttribute.prototype.setQualifier = function (newQualifier) {\n            if (this.qualifier == newQualifier)\n                return;\n            var oldQualifier = this.qualifier;\n            this.qualifier = newQualifier;\n            this.qualifierChangeBus.trigger({ 'oldValue': oldQualifier, 'newValue': newQualifier });\n        };\n        ClientAttribute.prototype.getQualifier = function () {\n            return this.qualifier;\n        };\n        ClientAttribute.prototype.setBaseValue = function (baseValue) {\n            if (this.baseValue == baseValue)\n                return;\n            var oldBaseValue = this.baseValue;\n            this.baseValue = baseValue;\n            this.setDirty(this.calculateDirty(baseValue, this.value));\n            this.baseValueChangeBus.trigger({ 'oldValue': oldBaseValue, 'newValue': baseValue });\n        };\n        ClientAttribute.prototype.rebase = function () {\n            this.setBaseValue(this.value);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.prototype.reset = function () {\n            this.setValue(this.baseValue);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.checkValue = function (value) {\n            if (value == null || value == undefined) {\n                return null;\n            }\n            var result = value;\n            if (result instanceof String || result instanceof Boolean || result instanceof Number) {\n                result = value.valueOf();\n            }\n            if (result instanceof ClientAttribute) {\n                console.log(\"An Attribute may not itself contain an attribute as a value. Assuming you forgot to call value.\");\n                result = this.checkValue(value.value);\n            }\n            var ok = false;\n            if (this.SUPPORTED_VALUE_TYPES.indexOf(typeof result) > -1 || result instanceof Date) {\n                ok = true;\n            }\n            if (!ok) {\n                throw new Error(\"Attribute values of this type are not allowed: \" + typeof value);\n            }\n            return result;\n        };\n        ClientAttribute.prototype.onValueChange = function (eventHandler) {\n            this.valueChangeBus.onEvent(eventHandler);\n            eventHandler({ \"oldValue\": this.value, \"newValue\": this.value });\n        };\n        ClientAttribute.prototype.onQualifierChange = function (eventHandler) {\n            this.qualifierChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onBaseValueChange = function (eventHandler) {\n            this.baseValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.syncWith = function (sourceAttribute) {\n            if (sourceAttribute) {\n                this.setQualifier(sourceAttribute.getQualifier()); // sequence is important\n                this.setBaseValue(sourceAttribute.getBaseValue());\n                this.setValue(sourceAttribute.value);\n            }\n        };\n        ClientAttribute.SUPPORTED_VALUE_TYPES = [\"string\", \"number\", \"boolean\"];\n        ClientAttribute.clientAttributeInstanceCount = 0;\n        return ClientAttribute;\n    })();\n    opendolphin.ClientAttribute = ClientAttribute;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var ValueChangedCommand = (function (_super) {\n        __extends(ValueChangedCommand, _super);\n        function ValueChangedCommand(attributeId, oldValue, newValue) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.oldValue = oldValue;\n            this.newValue = newValue;\n            this.id = \"ValueChanged\";\n            this.className = \"org.opendolphin.core.comm.ValueChangedCommand\";\n        }\n        return ValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.ValueChangedCommand = ValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var NamedCommand = (function (_super) {\n        __extends(NamedCommand, _super);\n        function NamedCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.NamedCommand\";\n        }\n        return NamedCommand;\n    })(opendolphin.Command);\n    opendolphin.NamedCommand = NamedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var EmptyNotification = (function (_super) {\n        __extends(EmptyNotification, _super);\n        function EmptyNotification() {\n            _super.call(this);\n            this.id = \"Empty\";\n            this.className = \"org.opendolphin.core.comm.EmptyNotification\";\n        }\n        return EmptyNotification;\n    })(opendolphin.Command);\n    opendolphin.EmptyNotification = EmptyNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"NamedCommand.ts\"/>\n/// <reference path=\"EmptyNotification.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /** A Batcher that does no batching but merely takes the first element of the queue as the single item in the batch */\n    var NoCommandBatcher = (function () {\n        function NoCommandBatcher() {\n        }\n        NoCommandBatcher.prototype.batch = function (queue) {\n            return [queue.shift()];\n        };\n        return NoCommandBatcher;\n    })();\n    opendolphin.NoCommandBatcher = NoCommandBatcher;\n    /** A batcher that batches the blinds (commands with no callback) and optionally also folds value changes */\n    var BlindCommandBatcher = (function () {\n        /** folding: whether we should try folding ValueChangedCommands */\n        function BlindCommandBatcher(folding, maxBatchSize) {\n            if (folding === void 0) { folding = true; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.folding = folding;\n            this.maxBatchSize = maxBatchSize;\n        }\n        BlindCommandBatcher.prototype.batch = function (queue) {\n            var result = [];\n            this.processNext(this.maxBatchSize, queue, result); // do not batch more than this.maxBatchSize commands to avoid stack overflow on recursion.\n            return result;\n        };\n        // recursive impl method to side-effect both queue and batch\n        BlindCommandBatcher.prototype.processNext = function (maxBatchSize, queue, batch) {\n            if (queue.length < 1 || maxBatchSize < 1)\n                return;\n            var candidate = queue.shift();\n            if (this.folding && candidate.command instanceof opendolphin.ValueChangedCommand && (!candidate.handler)) {\n                var found = null;\n                var canCmd = candidate.command;\n                for (var i = 0; i < batch.length && found == null; i++) {\n                    if (batch[i].command instanceof opendolphin.ValueChangedCommand) {\n                        var batchCmd = batch[i].command;\n                        if (canCmd.attributeId == batchCmd.attributeId && batchCmd.newValue == canCmd.oldValue) {\n                            found = batchCmd;\n                        }\n                    }\n                }\n                if (found) {\n                    found.newValue = canCmd.newValue; // change existing value, do not batch\n                }\n                else {\n                    batch.push(candidate); // we cannot merge, so batch the candidate\n                }\n            }\n            else {\n                batch.push(candidate);\n            }\n            if (!candidate.handler &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.NamedCommand\") &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.EmptyNotification\") // and no unknown client side effect\n            ) {\n                this.processNext(maxBatchSize - 1, queue, batch); // then we can proceed with batching\n            }\n        };\n        return BlindCommandBatcher;\n    })();\n    opendolphin.BlindCommandBatcher = BlindCommandBatcher;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Codec = (function () {\n        function Codec() {\n        }\n        Codec.prototype.encode = function (commands) {\n            return JSON.stringify(commands); // todo dk: look for possible API support for character encoding\n        };\n        Codec.prototype.decode = function (transmitted) {\n            if (typeof transmitted == 'string') {\n                return JSON.parse(transmitted);\n            }\n            else {\n                return transmitted;\n            }\n        };\n        return Codec;\n    })();\n    opendolphin.Codec = Codec;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var SignalCommand = (function (_super) {\n        __extends(SignalCommand, _super);\n        function SignalCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.SignalCommand\";\n        }\n        return SignalCommand;\n    })(opendolphin.Command);\n    opendolphin.SignalCommand = SignalCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CreatePresentationModelCommand = (function (_super) {\n        __extends(CreatePresentationModelCommand, _super);\n        function CreatePresentationModelCommand(presentationModel) {\n            _super.call(this);\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.id = \"CreatePresentationModel\";\n            this.className = \"org.opendolphin.core.comm.CreatePresentationModelCommand\";\n            this.pmId = presentationModel.id;\n            this.pmType = presentationModel.presentationModelType;\n            var attrs = this.attributes;\n            presentationModel.getAttributes().forEach(function (attr) {\n                attrs.push({\n                    propertyName: attr.propertyName,\n                    id: attr.id,\n                    qualifier: attr.getQualifier(),\n                    value: attr.getValue(),\n                    tag: attr.tag\n                });\n            });\n        }\n        return CreatePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.CreatePresentationModelCommand = CreatePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Map = (function () {\n        function Map() {\n            this.keys = [];\n            this.data = [];\n        }\n        Map.prototype.put = function (key, value) {\n            if (!this.containsKey(key)) {\n                this.keys.push(key);\n            }\n            this.data[this.keys.indexOf(key)] = value;\n        };\n        Map.prototype.get = function (key) {\n            return this.data[this.keys.indexOf(key)];\n        };\n        Map.prototype.remove = function (key) {\n            if (this.containsKey(key)) {\n                var index = this.keys.indexOf(key);\n                this.keys.splice(index, 1);\n                this.data.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        Map.prototype.isEmpty = function () {\n            return this.keys.length == 0;\n        };\n        Map.prototype.length = function () {\n            return this.keys.length;\n        };\n        Map.prototype.forEach = function (handler) {\n            for (var i = 0; i < this.keys.length; i++) {\n                handler(this.keys[i], this.data[i]);\n            }\n        };\n        Map.prototype.containsKey = function (key) {\n            return this.keys.indexOf(key) > -1;\n        };\n        Map.prototype.containsValue = function (value) {\n            return this.data.indexOf(value) > -1;\n        };\n        Map.prototype.values = function () {\n            return this.data.slice(0);\n        };\n        Map.prototype.keySet = function () {\n            return this.keys.slice(0);\n        };\n        return Map;\n    })();\n    opendolphin.Map = Map;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedAllPresentationModelsOfTypeNotification = (function (_super) {\n        __extends(DeletedAllPresentationModelsOfTypeNotification, _super);\n        function DeletedAllPresentationModelsOfTypeNotification(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeletedAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeletedAllPresentationModelsOfTypeNotification\";\n        }\n        return DeletedAllPresentationModelsOfTypeNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedAllPresentationModelsOfTypeNotification = DeletedAllPresentationModelsOfTypeNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedPresentationModelNotification = (function (_super) {\n        __extends(DeletedPresentationModelNotification, _super);\n        function DeletedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletedPresentationModelNotification\";\n        }\n        return DeletedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedPresentationModelNotification = DeletedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"CreatePresentationModelCommand.ts\"/>\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"ChangeAttributeMetadataCommand.ts\"/>\n/// <reference path=\"Attribute.ts\"/>\n/// <reference path=\"Map.ts\"/>\n/// <reference path=\"DeletedAllPresentationModelsOfTypeNotification.ts\"/>\n/// <reference path=\"EventBus.ts\"/>\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"DeletedPresentationModelNotification.ts\"/>\n/// <reference path=\"BaseValueChangedCommand.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    (function (Type) {\n        Type[Type[\"ADDED\"] = 'ADDED'] = \"ADDED\";\n        Type[Type[\"REMOVED\"] = 'REMOVED'] = \"REMOVED\";\n    })(opendolphin.Type || (opendolphin.Type = {}));\n    var Type = opendolphin.Type;\n    var ClientModelStore = (function () {\n        function ClientModelStore(clientDolphin) {\n            this.clientDolphin = clientDolphin;\n            this.presentationModels = new opendolphin.Map();\n            this.presentationModelsPerType = new opendolphin.Map();\n            this.attributesPerId = new opendolphin.Map();\n            this.attributesPerQualifier = new opendolphin.Map();\n            this.modelStoreChangeBus = new opendolphin.EventBus();\n        }\n        ClientModelStore.prototype.getClientDolphin = function () {\n            return this.clientDolphin;\n        };\n        ClientModelStore.prototype.registerModel = function (model) {\n            var _this = this;\n            if (model.clientSideOnly) {\n                return;\n            }\n            var connector = this.clientDolphin.getClientConnector();\n            var createPMCommand = new opendolphin.CreatePresentationModelCommand(model);\n            connector.send(createPMCommand, null);\n            model.getAttributes().forEach(function (attribute) {\n                _this.registerAttribute(attribute);\n            });\n        };\n        ClientModelStore.prototype.registerAttribute = function (attribute) {\n            var _this = this;\n            this.addAttributeById(attribute);\n            if (attribute.getQualifier()) {\n                this.addAttributeByQualifier(attribute);\n            }\n            // whenever an attribute changes its value, the server needs to be notified\n            // and all other attributes with the same qualifier are given the same value\n            attribute.onValueChange(function (evt) {\n                var valueChangeCommand = new opendolphin.ValueChangedCommand(attribute.id, evt.oldValue, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(valueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setValue(attribute.getValue());\n                    });\n                }\n            });\n            // all attributes with the same qualifier should have the same base value\n            attribute.onBaseValueChange(function (evt) {\n                var baseValueChangeCommand = new opendolphin.BaseValueChangedCommand(attribute.id);\n                _this.clientDolphin.getClientConnector().send(baseValueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setBaseValue(attribute.getBaseValue());\n                    });\n                }\n            });\n            attribute.onQualifierChange(function (evt) {\n                var changeAttrMetadataCmd = new opendolphin.ChangeAttributeMetadataCommand(attribute.id, opendolphin.Attribute.QUALIFIER_PROPERTY, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(changeAttrMetadataCmd, null);\n            });\n        };\n        ClientModelStore.prototype.add = function (model) {\n            if (!model) {\n                return false;\n            }\n            if (this.presentationModels.containsKey(model.id)) {\n                console.log(\"There already is a PM with id \" + model.id);\n            }\n            var added = false;\n            if (!this.presentationModels.containsValue(model)) {\n                this.presentationModels.put(model.id, model);\n                this.addPresentationModelByType(model);\n                this.registerModel(model);\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.ADDED, 'clientPresentationModel': model });\n                added = true;\n            }\n            return added;\n        };\n        ClientModelStore.prototype.remove = function (model) {\n            var _this = this;\n            if (!model) {\n                return false;\n            }\n            var removed = false;\n            if (this.presentationModels.containsValue(model)) {\n                this.removePresentationModelByType(model);\n                this.presentationModels.remove(model.id);\n                model.getAttributes().forEach(function (attribute) {\n                    _this.removeAttributeById(attribute);\n                    if (attribute.getQualifier()) {\n                        _this.removeAttributeByQualifier(attribute);\n                    }\n                });\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.REMOVED, 'clientPresentationModel': model });\n                removed = true;\n            }\n            return removed;\n        };\n        ClientModelStore.prototype.findAttributesByFilter = function (filter) {\n            var matches = [];\n            this.presentationModels.forEach(function (key, model) {\n                model.getAttributes().forEach(function (attr) {\n                    if (filter(attr)) {\n                        matches.push(attr);\n                    }\n                });\n            });\n            return matches;\n        };\n        ClientModelStore.prototype.addPresentationModelByType = function (model) {\n            if (!model) {\n                return;\n            }\n            var type = model.presentationModelType;\n            if (!type) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(type);\n            if (!presentationModels) {\n                presentationModels = [];\n                this.presentationModelsPerType.put(type, presentationModels);\n            }\n            if (!(presentationModels.indexOf(model) > -1)) {\n                presentationModels.push(model);\n            }\n        };\n        ClientModelStore.prototype.removePresentationModelByType = function (model) {\n            if (!model || !(model.presentationModelType)) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(model.presentationModelType);\n            if (!presentationModels) {\n                return;\n            }\n            if (presentationModels.length > -1) {\n                presentationModels.splice(presentationModels.indexOf(model), 1);\n            }\n            if (presentationModels.length === 0) {\n                this.presentationModelsPerType.remove(model.presentationModelType);\n            }\n        };\n        ClientModelStore.prototype.listPresentationModelIds = function () {\n            return this.presentationModels.keySet().slice(0);\n        };\n        ClientModelStore.prototype.listPresentationModels = function () {\n            return this.presentationModels.values();\n        };\n        ClientModelStore.prototype.findPresentationModelById = function (id) {\n            return this.presentationModels.get(id);\n        };\n        ClientModelStore.prototype.findAllPresentationModelByType = function (type) {\n            if (!type || !this.presentationModelsPerType.containsKey(type)) {\n                return [];\n            }\n            return this.presentationModelsPerType.get(type).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            var _this = this;\n            var presentationModels = this.findAllPresentationModelByType(presentationModelType);\n            presentationModels.forEach(function (pm) {\n                _this.deletePresentationModel(pm, false);\n            });\n            this.clientDolphin.getClientConnector().send(new opendolphin.DeletedAllPresentationModelsOfTypeNotification(presentationModelType), undefined);\n        };\n        ClientModelStore.prototype.deletePresentationModel = function (model, notify) {\n            if (!model) {\n                return;\n            }\n            if (this.containsPresentationModel(model.id)) {\n                this.remove(model);\n                if (!notify || model.clientSideOnly) {\n                    return;\n                }\n                this.clientDolphin.getClientConnector().send(new opendolphin.DeletedPresentationModelNotification(model.id), null);\n            }\n        };\n        ClientModelStore.prototype.containsPresentationModel = function (id) {\n            return this.presentationModels.containsKey(id);\n        };\n        ClientModelStore.prototype.addAttributeById = function (attribute) {\n            if (!attribute || this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.put(attribute.id, attribute);\n        };\n        ClientModelStore.prototype.removeAttributeById = function (attribute) {\n            if (!attribute || !this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.remove(attribute.id);\n        };\n        ClientModelStore.prototype.findAttributeById = function (id) {\n            return this.attributesPerId.get(id);\n        };\n        ClientModelStore.prototype.addAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                attributes = [];\n                this.attributesPerQualifier.put(attribute.getQualifier(), attributes);\n            }\n            if (!(attributes.indexOf(attribute) > -1)) {\n                attributes.push(attribute);\n            }\n        };\n        ClientModelStore.prototype.removeAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                return;\n            }\n            if (attributes.length > -1) {\n                attributes.splice(attributes.indexOf(attribute), 1);\n            }\n            if (attributes.length === 0) {\n                this.attributesPerQualifier.remove(attribute.getQualifier());\n            }\n        };\n        ClientModelStore.prototype.findAllAttributesByQualifier = function (qualifier) {\n            if (!qualifier || !this.attributesPerQualifier.containsKey(qualifier)) {\n                return [];\n            }\n            return this.attributesPerQualifier.get(qualifier).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.onModelStoreChange = function (eventHandler) {\n            this.modelStoreChangeBus.onEvent(eventHandler);\n        };\n        ClientModelStore.prototype.onModelStoreChangeForType = function (presentationModelType, eventHandler) {\n            this.modelStoreChangeBus.onEvent(function (pmStoreEvent) {\n                if (pmStoreEvent.clientPresentationModel.presentationModelType == presentationModelType) {\n                    eventHandler(pmStoreEvent);\n                }\n            });\n        };\n        return ClientModelStore;\n    })();\n    opendolphin.ClientModelStore = ClientModelStore;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"EmptyNotification.ts\" />\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientModelStore.ts\" />\n/// <reference path=\"ClientConnector.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"AttributeCreatedNotification.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientDolphin = (function () {\n        function ClientDolphin() {\n        }\n        ClientDolphin.prototype.setClientConnector = function (clientConnector) {\n            this.clientConnector = clientConnector;\n        };\n        ClientDolphin.prototype.getClientConnector = function () {\n            return this.clientConnector;\n        };\n        ClientDolphin.prototype.send = function (commandName, onFinished) {\n            this.clientConnector.send(new opendolphin.NamedCommand(commandName), onFinished);\n        };\n        ClientDolphin.prototype.sendEmpty = function (onFinished) {\n            this.clientConnector.send(new opendolphin.EmptyNotification(), onFinished);\n        };\n        // factory method for attributes\n        ClientDolphin.prototype.attribute = function (propertyName, qualifier, value, tag) {\n            return new opendolphin.ClientAttribute(propertyName, qualifier, value, tag);\n        };\n        // factory method for presentation models\n        ClientDolphin.prototype.presentationModel = function (id, type) {\n            var attributes = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                attributes[_i - 2] = arguments[_i];\n            }\n            var model = new opendolphin.ClientPresentationModel(id, type);\n            if (attributes && attributes.length > 0) {\n                attributes.forEach(function (attribute) {\n                    model.addAttribute(attribute);\n                });\n            }\n            this.getClientModelStore().add(model);\n            return model;\n        };\n        ClientDolphin.prototype.setClientModelStore = function (clientModelStore) {\n            this.clientModelStore = clientModelStore;\n        };\n        ClientDolphin.prototype.getClientModelStore = function () {\n            return this.clientModelStore;\n        };\n        ClientDolphin.prototype.listPresentationModelIds = function () {\n            return this.getClientModelStore().listPresentationModelIds();\n        };\n        ClientDolphin.prototype.listPresentationModels = function () {\n            return this.getClientModelStore().listPresentationModels();\n        };\n        ClientDolphin.prototype.findAllPresentationModelByType = function (presentationModelType) {\n            return this.getClientModelStore().findAllPresentationModelByType(presentationModelType);\n        };\n        ClientDolphin.prototype.getAt = function (id) {\n            return this.findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.findPresentationModelById = function (id) {\n            return this.getClientModelStore().findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.deletePresentationModel = function (modelToDelete) {\n            this.getClientModelStore().deletePresentationModel(modelToDelete, true);\n        };\n        ClientDolphin.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            this.getClientModelStore().deleteAllPresentationModelOfType(presentationModelType);\n        };\n        ClientDolphin.prototype.updatePresentationModelQualifier = function (presentationModel) {\n            var _this = this;\n            presentationModel.getAttributes().forEach(function (sourceAttribute) {\n                _this.updateAttributeQualifier(sourceAttribute);\n            });\n        };\n        ClientDolphin.prototype.updateAttributeQualifier = function (sourceAttribute) {\n            if (!sourceAttribute.getQualifier())\n                return;\n            var attributes = this.getClientModelStore().findAllAttributesByQualifier(sourceAttribute.getQualifier());\n            attributes.forEach(function (targetAttribute) {\n                if (targetAttribute.tag != sourceAttribute.tag)\n                    return; // attributes with same qualifier and tag\n                targetAttribute.setValue(sourceAttribute.getValue()); // should always have the same value\n                targetAttribute.setBaseValue(sourceAttribute.getBaseValue()); // and same base value and so dirtyness\n            });\n        };\n        ClientDolphin.prototype.tag = function (presentationModel, propertyName, value, tag) {\n            var clientAttribute = new opendolphin.ClientAttribute(propertyName, null, value, tag);\n            this.addAttributeToModel(presentationModel, clientAttribute);\n            return clientAttribute;\n        };\n        ClientDolphin.prototype.addAttributeToModel = function (presentationModel, clientAttribute) {\n            presentationModel.addAttribute(clientAttribute);\n            this.getClientModelStore().registerAttribute(clientAttribute);\n            if (!presentationModel.clientSideOnly) {\n                this.clientConnector.send(new opendolphin.AttributeCreatedNotification(presentationModel.id, clientAttribute.id, clientAttribute.propertyName, clientAttribute.getValue(), clientAttribute.getQualifier(), clientAttribute.tag), null);\n            }\n        };\n        ////// push support ///////\n        ClientDolphin.prototype.startPushListening = function (pushActionName, releaseActionName) {\n            this.clientConnector.setPushListener(new opendolphin.NamedCommand(pushActionName));\n            this.clientConnector.setReleaseCommand(new opendolphin.SignalCommand(releaseActionName));\n            this.clientConnector.setPushEnabled(true);\n            this.clientConnector.listen();\n        };\n        ClientDolphin.prototype.stopPushListening = function () {\n            this.clientConnector.setPushEnabled(false);\n        };\n        return ClientDolphin;\n    })();\n    opendolphin.ClientDolphin = ClientDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var PresentationModelResetedCommand = (function (_super) {\n        __extends(PresentationModelResetedCommand, _super);\n        function PresentationModelResetedCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'PresentationModelReseted';\n            this.className = \"org.opendolphin.core.comm.PresentationModelResetedCommand\";\n        }\n        return PresentationModelResetedCommand;\n    })(opendolphin.Command);\n    opendolphin.PresentationModelResetedCommand = PresentationModelResetedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SavedPresentationModelNotification = (function (_super) {\n        __extends(SavedPresentationModelNotification, _super);\n        function SavedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'SavedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SavedPresentationModelNotification\";\n        }\n        return SavedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.SavedPresentationModelNotification = SavedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var InitializeAttributeCommand = (function (_super) {\n        __extends(InitializeAttributeCommand, _super);\n        function InitializeAttributeCommand(pmId, pmType, propertyName, qualifier, newValue, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.pmType = pmType;\n            this.propertyName = propertyName;\n            this.qualifier = qualifier;\n            this.newValue = newValue;\n            this.tag = tag;\n            this.id = 'InitializeAttribute';\n            this.className = \"org.opendolphin.core.comm.InitializeAttributeCommand\";\n        }\n        return InitializeAttributeCommand;\n    })(opendolphin.Command);\n    opendolphin.InitializeAttributeCommand = InitializeAttributeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SwitchPresentationModelCommand = (function (_super) {\n        __extends(SwitchPresentationModelCommand, _super);\n        function SwitchPresentationModelCommand(pmId, sourcePmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.sourcePmId = sourcePmId;\n            this.id = 'SwitchPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SwitchPresentationModelCommand\";\n        }\n        return SwitchPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.SwitchPresentationModelCommand = SwitchPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeleteAllPresentationModelsOfTypeCommand = (function (_super) {\n        __extends(DeleteAllPresentationModelsOfTypeCommand, _super);\n        function DeleteAllPresentationModelsOfTypeCommand(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeleteAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeleteAllPresentationModelsOfTypeCommand\";\n        }\n        return DeleteAllPresentationModelsOfTypeCommand;\n    })(opendolphin.Command);\n    opendolphin.DeleteAllPresentationModelsOfTypeCommand = DeleteAllPresentationModelsOfTypeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletePresentationModelCommand = (function (_super) {\n        __extends(DeletePresentationModelCommand, _super);\n        function DeletePresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletePresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletePresentationModelCommand\";\n        }\n        return DeletePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.DeletePresentationModelCommand = DeletePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DataCommand = (function (_super) {\n        __extends(DataCommand, _super);\n        function DataCommand(data) {\n            _super.call(this);\n            this.data = data;\n            this.id = \"Data\";\n            this.className = \"org.opendolphin.core.comm.DataCommand\";\n        }\n        return DataCommand;\n    })(opendolphin.Command);\n    opendolphin.DataCommand = DataCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"CommandBatcher.ts\" />\n/// <reference path=\"Codec.ts\" />\n/// <reference path=\"CallNamedActionCommand.ts\" />\n/// <reference path=\"ClientDolphin.ts\" />\n/// <reference path=\"AttributeMetadataChangedCommand.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"PresentationModelResetedCommand.ts\" />\n/// <reference path=\"SavedPresentationModelNotification.ts\" />\n/// <reference path=\"InitializeAttributeCommand.ts\" />\n/// <reference path=\"SwitchPresentationModelCommand.ts\" />\n/// <reference path=\"BaseValueChangedCommand.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeletePresentationModelCommand.ts\" />\n/// <reference path=\"CreatePresentationModelCommand.ts\" />\n/// <reference path=\"DataCommand.ts\" />\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientConnector = (function () {\n        function ClientConnector(transmitter, clientDolphin, slackMS, maxBatchSize) {\n            if (slackMS === void 0) { slackMS = 0; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.commandQueue = [];\n            this.currentlySending = false;\n            this.pushEnabled = false;\n            this.waiting = false;\n            this.transmitter = transmitter;\n            this.clientDolphin = clientDolphin;\n            this.slackMS = slackMS;\n            this.codec = new opendolphin.Codec();\n            this.commandBatcher = new opendolphin.BlindCommandBatcher(true, maxBatchSize);\n        }\n        ClientConnector.prototype.setCommandBatcher = function (newBatcher) {\n            this.commandBatcher = newBatcher;\n        };\n        ClientConnector.prototype.setPushEnabled = function (enabled) {\n            this.pushEnabled = enabled;\n        };\n        ClientConnector.prototype.setPushListener = function (newListener) {\n            this.pushListener = newListener;\n        };\n        ClientConnector.prototype.setReleaseCommand = function (newCommand) {\n            this.releaseCommand = newCommand;\n        };\n        ClientConnector.prototype.send = function (command, onFinished) {\n            this.commandQueue.push({ command: command, handler: onFinished });\n            if (this.currentlySending) {\n                this.release(); // there is not point in releasing if we do not send atm\n                return;\n            }\n            this.doSendNext();\n        };\n        ClientConnector.prototype.doSendNext = function () {\n            var _this = this;\n            if (this.commandQueue.length < 1) {\n                if (this.pushEnabled) {\n                    this.enqueuePushCommand();\n                }\n                else {\n                    this.currentlySending = false;\n                    return;\n                }\n            }\n            this.currentlySending = true;\n            var cmdsAndHandlers = this.commandBatcher.batch(this.commandQueue);\n            var callback = cmdsAndHandlers[cmdsAndHandlers.length - 1].handler;\n            var commands = cmdsAndHandlers.map(function (cah) { return cah.command; });\n            this.transmitter.transmit(commands, function (response) {\n                //console.log(\"server response: [\" + response.map(it => it.id).join(\", \") + \"] \");\n                var touchedPMs = [];\n                response.forEach(function (command) {\n                    var touched = _this.handle(command);\n                    if (touched)\n                        touchedPMs.push(touched);\n                });\n                if (callback) {\n                    callback.onFinished(touchedPMs); // todo: make them unique?\n                }\n                // recursive call: fetch the next in line but allow a bit of slack such that\n                // document events can fire, rendering is done and commands can batch up\n                setTimeout(function () { return _this.doSendNext(); }, _this.slackMS);\n            });\n        };\n        ClientConnector.prototype.handle = function (command) {\n            if (command.id == \"Data\") {\n                return this.handleDataCommand(command);\n            }\n            else if (command.id == \"DeletePresentationModel\") {\n                return this.handleDeletePresentationModelCommand(command);\n            }\n            else if (command.id == \"DeleteAllPresentationModelsOfType\") {\n                return this.handleDeleteAllPresentationModelOfTypeCommand(command);\n            }\n            else if (command.id == \"CreatePresentationModel\") {\n                return this.handleCreatePresentationModelCommand(command);\n            }\n            else if (command.id == \"ValueChanged\") {\n                return this.handleValueChangedCommand(command);\n            }\n            else if (command.id == \"BaseValueChanged\") {\n                return this.handleBaseValueChangedCommand(command);\n            }\n            else if (command.id == \"SwitchPresentationModel\") {\n                return this.handleSwitchPresentationModelCommand(command);\n            }\n            else if (command.id == \"InitializeAttribute\") {\n                return this.handleInitializeAttributeCommand(command);\n            }\n            else if (command.id == \"SavedPresentationModel\") {\n                return this.handleSavedPresentationModelNotification(command);\n            }\n            else if (command.id == \"PresentationModelReseted\") {\n                return this.handlePresentationModelResetedCommand(command);\n            }\n            else if (command.id == \"AttributeMetadataChanged\") {\n                return this.handleAttributeMetadataChangedCommand(command);\n            }\n            else if (command.id == \"CallNamedAction\") {\n                return this.handleCallNamedActionCommand(command);\n            }\n            else {\n                console.log(\"Cannot handle, unknown command \" + command);\n            }\n            return null;\n        };\n        ClientConnector.prototype.handleDataCommand = function (serverCommand) {\n            return serverCommand.data;\n        };\n        ClientConnector.prototype.handleDeletePresentationModelCommand = function (serverCommand) {\n            var model = this.clientDolphin.findPresentationModelById(serverCommand.pmId);\n            if (!model)\n                return null;\n            this.clientDolphin.getClientModelStore().deletePresentationModel(model, true);\n            return model;\n        };\n        ClientConnector.prototype.handleDeleteAllPresentationModelOfTypeCommand = function (serverCommand) {\n            this.clientDolphin.deleteAllPresentationModelOfType(serverCommand.pmType);\n            return null;\n        };\n        ClientConnector.prototype.handleCreatePresentationModelCommand = function (serverCommand) {\n            var _this = this;\n            if (this.clientDolphin.getClientModelStore().containsPresentationModel(serverCommand.pmId)) {\n                throw new Error(\"There already is a presentation model with id \" + serverCommand.pmId + \"  known to the client.\");\n            }\n            var attributes = [];\n            serverCommand.attributes.forEach(function (attr) {\n                var clientAttribute = _this.clientDolphin.attribute(attr.propertyName, attr.qualifier, attr.value, attr.tag ? attr.tag : opendolphin.Tag.value());\n                clientAttribute.setBaseValue(attr.baseValue);\n                if (attr.id && attr.id.match(\".*S$\")) {\n                    clientAttribute.id = attr.id;\n                }\n                attributes.push(clientAttribute);\n            });\n            var clientPm = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n            clientPm.addAttributes(attributes);\n            if (serverCommand.clientSideOnly) {\n                clientPm.clientSideOnly = true;\n            }\n            this.clientDolphin.getClientModelStore().add(clientPm);\n            this.clientDolphin.updatePresentationModelQualifier(clientPm);\n            clientPm.updateAttributeDirtyness();\n            clientPm.updateDirty();\n            return clientPm;\n        };\n        ClientConnector.prototype.handleValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot update old value \" + serverCommand.oldValue + \" to new value \" + serverCommand.newValue);\n                return null;\n            }\n            if (clientAttribute.getValue() == serverCommand.newValue) {\n                //console.log(\"nothing to do. new value == old value\");\n                return null;\n            }\n            // Below was the code that would enforce that value changes only appear when the proper oldValue is given.\n            // While that seemed appropriate at first, there are actually valid command sequences where the oldValue is not properly set.\n            // We leave the commented code in the codebase to allow for logging/debugging such cases.\n            //            if(clientAttribute.getValue() != serverCommand.oldValue) {\n            //                console.log(\"attribute with id \"+serverCommand.attributeId+\" and value \" + clientAttribute.getValue() +\n            //                            \" was set to value \" + serverCommand.newValue + \" even though the change was based on an outdated old value of \" + serverCommand.oldValue);\n            //            }\n            clientAttribute.setValue(serverCommand.newValue);\n            return null;\n        };\n        ClientConnector.prototype.handleBaseValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot set base value.\");\n                return null;\n            }\n            clientAttribute.rebase();\n            return null;\n        };\n        ClientConnector.prototype.handleSwitchPresentationModelCommand = function (serverCommand) {\n            var switchPm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!switchPm) {\n                console.log(\"switch model with id \" + serverCommand.pmId + \" not found, cannot switch.\");\n                return null;\n            }\n            var sourcePm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.sourcePmId);\n            if (!sourcePm) {\n                console.log(\"source model with id \" + serverCommand.sourcePmId + \" not found, cannot switch.\");\n                return null;\n            }\n            switchPm.syncWith(sourcePm);\n            return switchPm;\n        };\n        ClientConnector.prototype.handleInitializeAttributeCommand = function (serverCommand) {\n            var attribute = new opendolphin.ClientAttribute(serverCommand.propertyName, serverCommand.qualifier, serverCommand.newValue, serverCommand.tag);\n            if (serverCommand.qualifier) {\n                var attributesCopy = this.clientDolphin.getClientModelStore().findAllAttributesByQualifier(serverCommand.qualifier);\n                if (attributesCopy) {\n                    if (!serverCommand.newValue) {\n                        var attr = attributesCopy.shift();\n                        if (attr) {\n                            attribute.setValue(attr.getValue());\n                        }\n                    }\n                    else {\n                        attributesCopy.forEach(function (attr) {\n                            attr.setValue(attribute.getValue());\n                        });\n                    }\n                }\n            }\n            var presentationModel;\n            if (serverCommand.pmId) {\n                presentationModel = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            }\n            if (!presentationModel) {\n                presentationModel = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n                this.clientDolphin.getClientModelStore().add(presentationModel);\n            }\n            this.clientDolphin.addAttributeToModel(presentationModel, attribute);\n            this.clientDolphin.updatePresentationModelQualifier(presentationModel);\n            return presentationModel;\n        };\n        ClientConnector.prototype.handleSavedPresentationModelNotification = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot rebase.\");\n                return null;\n            }\n            model.rebase();\n            return model;\n        };\n        ClientConnector.prototype.handlePresentationModelResetedCommand = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot reset.\");\n                return null;\n            }\n            model.reset();\n            return model;\n        };\n        ClientConnector.prototype.handleAttributeMetadataChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute)\n                return null;\n            clientAttribute[serverCommand.metadataName] = serverCommand.value;\n            return null;\n        };\n        ClientConnector.prototype.handleCallNamedActionCommand = function (serverCommand) {\n            this.clientDolphin.send(serverCommand.actionName, null);\n            return null;\n        };\n        ///////////// push support ///////////////\n        ClientConnector.prototype.listen = function () {\n            if (!this.pushEnabled)\n                return;\n            if (this.waiting)\n                return;\n            // todo: how to issue a warning if no pushListener is set?\n            if (!this.currentlySending) {\n                this.doSendNext();\n            }\n        };\n        ClientConnector.prototype.enqueuePushCommand = function () {\n            var me = this;\n            this.waiting = true;\n            this.commandQueue.push({\n                command: this.pushListener,\n                handler: {\n                    onFinished: function (models) { me.waiting = false; },\n                    onFinishedData: null\n                }\n            });\n        };\n        ClientConnector.prototype.release = function () {\n            if (!this.waiting)\n                return;\n            this.waiting = false;\n            // todo: how to issue a warning if no releaseCommand is set?\n            this.transmitter.signal(this.releaseCommand);\n        };\n        return ClientConnector;\n    })();\n    opendolphin.ClientConnector = ClientConnector;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"DolphinBuilder.ts\"/>\n/**\n * JS-friendly facade to avoid too many dependencies in plain JS code.\n * The name of this file is also used for the initial lookup of the\n * one javascript file that contains all the dolphin code.\n * Changing the name requires the build support and all users\n * to be updated as well.\n * Dierk Koenig\n */\nvar opendolphin;\n(function (opendolphin) {\n    // factory method for the initialized dolphin\n    // Deprecated ! Use 'makeDolphin() instead\n    function dolphin(url, reset, slackMS) {\n        if (slackMS === void 0) { slackMS = 300; }\n        return makeDolphin().url(url).reset(reset).slackMS(slackMS).build();\n    }\n    opendolphin.dolphin = dolphin;\n    // factory method to build an initialized dolphin\n    function makeDolphin() {\n        return new opendolphin.DolphinBuilder();\n    }\n    opendolphin.makeDolphin = makeDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /**\n     * A transmitter that is not transmitting at all.\n     * It may serve as a stand-in when no real transmitter is needed.\n     */\n    var NoTransmitter = (function () {\n        function NoTransmitter() {\n        }\n        NoTransmitter.prototype.transmit = function (commands, onDone) {\n            // do nothing special\n            onDone([]);\n        };\n        NoTransmitter.prototype.signal = function (command) {\n            // do nothing\n        };\n        return NoTransmitter;\n    })();\n    opendolphin.NoTransmitter = NoTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"Codec.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var HttpTransmitter = (function () {\n        function HttpTransmitter(url, reset, charset, errorHandler, supportCORS) {\n            if (reset === void 0) { reset = true; }\n            if (charset === void 0) { charset = \"UTF-8\"; }\n            if (errorHandler === void 0) { errorHandler = null; }\n            if (supportCORS === void 0) { supportCORS = false; }\n            this.url = url;\n            this.charset = charset;\n            this.HttpCodes = {\n                finished: 4,\n                success: 200\n            };\n            this.errorHandler = errorHandler;\n            this.supportCORS = supportCORS;\n            this.http = new XMLHttpRequest();\n            this.sig = new XMLHttpRequest();\n            if (this.supportCORS) {\n                if (\"withCredentials\" in this.http) {\n                    this.http.withCredentials = true; // NOTE: doing this for non CORS requests has no impact\n                    this.sig.withCredentials = true;\n                }\n            }\n            this.codec = new opendolphin.Codec();\n            if (reset) {\n                this.invalidate();\n            }\n        }\n        HttpTransmitter.prototype.transmit = function (commands, onDone) {\n            var _this = this;\n            this.http.onerror = function (evt) {\n                _this.handleError('onerror', \"\");\n                onDone([]);\n            };\n            this.http.onreadystatechange = function (evt) {\n                if (_this.http.readyState == _this.HttpCodes.finished) {\n                    if (_this.http.status == _this.HttpCodes.success) {\n                        var responseText = _this.http.responseText;\n                        if (responseText.trim().length > 0) {\n                            try {\n                                var responseCommands = _this.codec.decode(responseText);\n                                onDone(responseCommands);\n                            }\n                            catch (err) {\n                                console.log(\"Error occurred parsing responseText: \", err);\n                                console.log(\"Incorrect responseText: \", responseText);\n                                _this.handleError('application', \"HttpTransmitter: Incorrect responseText: \" + responseText);\n                                onDone([]);\n                            }\n                        }\n                        else {\n                            _this.handleError('application', \"HttpTransmitter: empty responseText\");\n                            onDone([]);\n                        }\n                    }\n                    else {\n                        _this.handleError('application', \"HttpTransmitter: HTTP Status != 200\");\n                        onDone([]);\n                    }\n                }\n            };\n            this.http.open('POST', this.url, true);\n            if (\"overrideMimeType\" in this.http) {\n                this.http.overrideMimeType(\"application/json; charset=\" + this.charset); // todo make injectable\n            }\n            this.http.send(this.codec.encode(commands));\n        };\n        HttpTransmitter.prototype.handleError = function (kind, message) {\n            var errorEvent = { kind: kind, url: this.url, httpStatus: this.http.status, message: message };\n            if (this.errorHandler) {\n                this.errorHandler(errorEvent);\n            }\n            else {\n                console.log(\"Error occurred: \", errorEvent);\n            }\n        };\n        HttpTransmitter.prototype.signal = function (command) {\n            this.sig.open('POST', this.url, true);\n            this.sig.send(this.codec.encode([command]));\n        };\n        HttpTransmitter.prototype.invalidate = function () {\n            this.http.open('POST', this.url + 'invalidate?', false);\n            this.http.send();\n        };\n        return HttpTransmitter;\n    })();\n    opendolphin.HttpTransmitter = HttpTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"OpenDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ClientModelStore.ts\"/>\n/// <reference path=\"NoTransmitter.ts\"/>\n/// <reference path=\"HttpTransmitter.ts\"/>\n/// <reference path=\"ClientAttribute.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var DolphinBuilder = (function () {\n        function DolphinBuilder() {\n            this.reset_ = false;\n            this.slackMS_ = 300;\n            this.maxBatchSize_ = 50;\n            this.supportCORS_ = false;\n        }\n        DolphinBuilder.prototype.url = function (url) {\n            this.url_ = url;\n            return this;\n        };\n        DolphinBuilder.prototype.reset = function (reset) {\n            this.reset_ = reset;\n            return this;\n        };\n        DolphinBuilder.prototype.slackMS = function (slackMS) {\n            this.slackMS_ = slackMS;\n            return this;\n        };\n        DolphinBuilder.prototype.maxBatchSize = function (maxBatchSize) {\n            this.maxBatchSize_ = maxBatchSize;\n            return this;\n        };\n        DolphinBuilder.prototype.supportCORS = function (supportCORS) {\n            this.supportCORS_ = supportCORS;\n            return this;\n        };\n        DolphinBuilder.prototype.errorHandler = function (errorHandler) {\n            this.errorHandler_ = errorHandler;\n            return this;\n        };\n        DolphinBuilder.prototype.build = function () {\n            console.log(\"OpenDolphin js found\");\n            var clientDolphin = new opendolphin.ClientDolphin();\n            var transmitter;\n            if (this.url_ != null && this.url_.length > 0) {\n                transmitter = new opendolphin.HttpTransmitter(this.url_, this.reset_, \"UTF-8\", this.errorHandler_, this.supportCORS_);\n            }\n            else {\n                transmitter = new opendolphin.NoTransmitter();\n            }\n            clientDolphin.setClientConnector(new opendolphin.ClientConnector(transmitter, clientDolphin, this.slackMS_, this.maxBatchSize_));\n            clientDolphin.setClientModelStore(new opendolphin.ClientModelStore(clientDolphin));\n            console.log(\"ClientDolphin initialized\");\n            return clientDolphin;\n        };\n        return DolphinBuilder;\n    })();\n    opendolphin.DolphinBuilder = DolphinBuilder;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var GetPresentationModelCommand = (function (_super) {\n        __extends(GetPresentationModelCommand, _super);\n        function GetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'GetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.GetPresentationModelCommand\";\n        }\n        return GetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.GetPresentationModelCommand = GetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ResetPresentationModelCommand = (function (_super) {\n        __extends(ResetPresentationModelCommand, _super);\n        function ResetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'ResetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.ResetPresentationModelCommand\";\n        }\n        return ResetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.ResetPresentationModelCommand = ResetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n\nmodule.exports = opendolphin;\n},{}],66:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Map = _dereq_('../bower_components/core.js/library/fn/map');\nvar utils = _dereq_('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\nfunction BeanManager(classRepository) {\n    checkMethod('BeanManager(classRepository)');\n    checkParam(classRepository, 'classRepository');\n\n    this.classRepository = classRepository;\n    this.addedHandlers = new Map();\n    this.removedHandlers = new Map();\n    this.updatedHandlers = new Map();\n    this.arrayUpdatedHandlers = new Map();\n    this.allAddedHandlers = [];\n    this.allRemovedHandlers = [];\n    this.allUpdatedHandlers = [];\n    this.allArrayUpdatedHandlers = [];\n\n    var self = this;\n    this.classRepository.onBeanAdded(function(type, bean) {\n        var handlerList = self.addedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanAdded-handler for type', type, e);\n                }\n            });\n        }\n        self.allAddedHandlers.forEach(function (handler) {\n            try {\n                handler(bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanAdded-handler', e);\n            }\n        });\n    });\n    this.classRepository.onBeanRemoved(function(type, bean) {\n        var handlerList = self.removedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function(handler) {\n                try {\n                    handler(bean);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanRemoved-handler for type', type, e);\n                }\n            });\n        }\n        self.allRemovedHandlers.forEach(function(handler) {\n            try {\n                handler(bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanRemoved-handler', e);\n            }\n        });\n    });\n    this.classRepository.onBeanUpdate(function(type, bean, propertyName, newValue, oldValue) {\n        var handlerList = self.updatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean, propertyName, newValue, oldValue);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanUpdate-handler for type', type, e);\n                }\n            });\n        }\n        self.allUpdatedHandlers.forEach(function (handler) {\n            try {\n                handler(bean, propertyName, newValue, oldValue);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanUpdate-handler', e);\n            }\n        });\n    });\n    this.classRepository.onArrayUpdate(function(type, bean, propertyName, index, count, newElements) {\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean, propertyName, index, count, newElements);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onArrayUpdate-handler for type', type, e);\n                }\n            });\n        }\n        self.allArrayUpdatedHandlers.forEach(function (handler) {\n            try {\n                handler(bean, propertyName, index, count, newElements);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onArrayUpdate-handler', e);\n            }\n        });\n    });\n\n}\n\n\nBeanManager.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    checkMethod('BeanManager.notifyBeanChange(bean, propertyName, newValue)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n\n    return this.classRepository.notifyBeanChange(bean, propertyName, newValue);\n};\n\n\nBeanManager.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    checkMethod('BeanManager.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n    checkParam(index, 'index');\n    checkParam(count, 'count');\n    checkParam(removedElements, 'removedElements');\n\n    this.classRepository.notifyArrayChange(bean, propertyName, index, count, removedElements);\n};\n\n\nBeanManager.prototype.isManaged = function(bean) {\n    checkMethod('BeanManager.isManaged(bean)');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.isManaged() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.create = function(type) {\n    checkMethod('BeanManager.create(type)');\n    checkParam(type, 'type');\n\n    // TODO: Implement dolphin.create() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.add = function(type, bean) {\n    checkMethod('BeanManager.add(type, bean)');\n    checkParam(type, 'type');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.add() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.addAll = function(type, collection) {\n    checkMethod('BeanManager.addAll(type, collection)');\n    checkParam(type, 'type');\n    checkParam(collection, 'collection');\n\n    // TODO: Implement dolphin.addAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.remove = function(bean) {\n    checkMethod('BeanManager.remove(bean)');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.remove() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeAll = function(collection) {\n    checkMethod('BeanManager.removeAll(collection)');\n    checkParam(collection, 'collection');\n\n    // TODO: Implement dolphin.removeAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeIf = function(predicate) {\n    checkMethod('BeanManager.removeIf(predicate)');\n    checkParam(predicate, 'predicate');\n\n    // TODO: Implement dolphin.removeIf() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.onAdded = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onAdded(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allAddedHandlers = self.allAddedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allAddedHandlers = self.allAddedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onAdded(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.addedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.addedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.addedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.addedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onRemoved = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onRemoved(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allRemovedHandlers = self.allRemovedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allRemovedHandlers = self.allRemovedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onRemoved(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.removedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.removedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.removedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onBeanUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onBeanUpdate(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allUpdatedHandlers = self.allUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allUpdatedHandlers = self.allUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onBeanUpdate(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.updatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.updatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.updatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.updatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onArrayUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onArrayUpdate(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onArrayUpdate(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.arrayUpdatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.arrayUpdatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.arrayUpdatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\n\nexports.BeanManager = BeanManager;\n},{\"../bower_components/core.js/library/fn/map\":1,\"./polyfills.js\":74,\"./utils.js\":75}],67:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Platform, console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Map = _dereq_('../bower_components/core.js/library/fn/map');\nvar opendolphin = _dereq_('../libsrc/opendolphin.js');\n\nvar utils = _dereq_('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nvar blocked = null;\n\nfunction fromDolphin(classRepository, type, value) {\n    return ! exists(value)? null\n        : type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, value) {\n    return typeof value === 'object' && value !== null? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction sendListSplice(classRepository, modelId, propertyName, from, to, newElements) {\n    var dolphin = classRepository.dolphin;\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('from', null, from),\n        dolphin.attribute('to', null, to),\n        dolphin.attribute('count', null, newElements.length)\n    ];\n    newElements.forEach(function(element, index) {\n        attributes.push(dolphin.attribute(index.toString(), null, toDolphin(classRepository, element)));\n    });\n    dolphin.presentationModel.apply(dolphin, [null, '@DP:LS@'].concat(attributes));\n}\n\nfunction validateList(classRepository, type, bean, propertyName) {\n    var list = bean[propertyName];\n    if (!exists(list)) {\n        classRepository.propertyUpdateHandlers.forEach(function(handler) {\n            try {\n                handler(type, bean, propertyName, [], undefined);\n            } catch(e) {\n                console.warn('An exception occurred while calling an onBeanUpdate-handler', e);\n            }\n        });\n    }\n}\n\nfunction block(bean, propertyName) {\n    if (exists(blocked)) {\n        throw new Error('Trying to create a block while another block exists');\n    }\n    blocked = {\n        bean: bean,\n        propertyName: propertyName\n    };\n}\n\nfunction isBlocked(bean, propertyName) {\n    return exists(blocked) && blocked.bean === bean && blocked.propertyName === propertyName;\n}\n\nfunction unblock() {\n    blocked = null;\n}\n\n\nfunction ClassRepository(dolphin) {\n    checkMethod('ClassRepository(dolphin)');\n    checkParam(dolphin, 'dolphin');\n\n    this.dolphin = dolphin;\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n    this.beanAddedHandlers = [];\n    this.beanRemovedHandlers = [];\n    this.propertyUpdateHandlers = [];\n    this.arrayUpdateHandlers = [];\n}\n\n\nClassRepository.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    checkMethod('ClassRepository.notifyBeanChange(bean, propertyName, newValue)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n\n    var modelId = this.beanToDolphin.get(bean);\n    if (exists(modelId)) {\n        var model = this.dolphin.findPresentationModelById(modelId);\n        if (exists(model)) {\n            var classInfo = this.classes.get(model.presentationModelType);\n            var type = classInfo[propertyName];\n            var attribute = model.findAttributeByPropertyName(propertyName);\n            if (exists(type) && exists(attribute)) {\n                var oldValue = attribute.getValue();\n                attribute.setValue(toDolphin(this, newValue));\n                return fromDolphin(this, type, oldValue);\n            }\n        }\n    }\n};\n\n\nClassRepository.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    checkMethod('ClassRepository.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n    checkParam(index, 'index');\n    checkParam(count, 'count');\n    checkParam(removedElements, 'removedElements');\n\n    if (isBlocked(bean, propertyName)) {\n        return;\n    }\n    var modelId = this.beanToDolphin.get(bean);\n    var array = bean[propertyName];\n    if (exists(modelId) && exists(array)) {\n        var removedElementsCount = Array.isArray(removedElements)? removedElements.length : 0;\n        sendListSplice(this, modelId, propertyName, index, index + removedElementsCount, array.slice(index, index + count));\n    }\n};\n\n\nClassRepository.prototype.onBeanAdded = function(handler) {\n    checkMethod('ClassRepository.onBeanAdded(handler)');\n    checkParam(handler, 'handler');\n    this.beanAddedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanRemoved = function(handler) {\n    checkMethod('ClassRepository.onBeanRemoved(handler)');\n    checkParam(handler, 'handler');\n    this.beanRemovedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanUpdate = function(handler) {\n    checkMethod('ClassRepository.onBeanUpdate(handler)');\n    checkParam(handler, 'handler');\n    this.propertyUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onArrayUpdate = function(handler) {\n    checkMethod('ClassRepository.onArrayUpdate(handler)');\n    checkParam(handler, 'handler');\n    this.arrayUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.registerClass = function (model) {\n    checkMethod('ClassRepository.registerClass(model)');\n    checkParam(model, 'model');\n\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.filter(function(attribute) {\n        return attribute.propertyName.search(/^@/) < 0;\n    }).forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    checkMethod('ClassRepository.unregisterClass(model)');\n    checkParam(model, 'model');\n\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    checkMethod('ClassRepository.load(model)');\n    checkParam(model, 'model');\n\n    var self = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return (attribute.tag === opendolphin.Tag.value()) && (attribute.propertyName.search(/^@/) < 0);\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                var oldValue = fromDolphin(self, classInfo[attribute.propertyName], event.oldValue);\n                var newValue = fromDolphin(self, classInfo[attribute.propertyName], event.newValue);\n                self.propertyUpdateHandlers.forEach(function(handler) {\n                    try {\n                        handler(model.presentationModelType, bean, attribute.propertyName, newValue, oldValue);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onBeanUpdate-handler', e);\n                    }\n                });\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    this.beanAddedHandlers.forEach(function(handler) {\n        try {\n            handler(model.presentationModelType, bean);\n        } catch(e) {\n            console.warn('An exception occurred while calling an onBeanAdded-handler', e);\n        }\n    });\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    checkMethod('ClassRepository.unload(model)');\n    checkParam(model, 'model');\n\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    if (exists(bean)) {\n        this.beanRemovedHandlers.forEach(function(handler) {\n            try {\n                handler(model.presentationModelType, bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling an onBeanRemoved-handler', e);\n            }\n        });\n    }\n    return bean;\n};\n\n\nClassRepository.prototype.spliceListEntry = function(model) {\n    checkMethod('ClassRepository.spliceListEntry(model)');\n    checkParam(model, 'model');\n\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n    var count = model.findAttributeByPropertyName('count');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to) && exists(count)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            //var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            var newElements = [],\n                element = null;\n            for (var i = 0; i < count.value; i++) {\n                element = model.findAttributeByPropertyName(i.toString());\n                if (! exists(element)) {\n                    throw new Error(\"Invalid list modification update received\");\n                }\n                newElements.push(fromDolphin(this, classInfo[attribute.value], element.value));\n            }\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    try {\n                        handler(type, bean, attribute.value, from.value, to.value - from.value, newElements);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onArrayUpdate-handler', e);\n                    }\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\nClassRepository.prototype.mapDolphinToBean = function(value, type) {\n    return fromDolphin(this, type, value);\n};\n\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n\n},{\"../bower_components/core.js/library/fn/map\":1,\"../libsrc/opendolphin.js\":65,\"./polyfills.js\":74,\"./utils.js\":75}],68:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar utils = _dereq_('./utils.js');\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar INIT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'initClientContext';\nvar DISCONNECT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'disconnectClientContext';\n\nfunction ClientContext(dolphin, beanManager, controllerManager, connector) {\n    checkMethod('ClientContext(dolphin, beanManager, controllerManager, connector)');\n    checkParam(dolphin, 'dolphin');\n    checkParam(beanManager, 'beanManager');\n    checkParam(controllerManager, 'controllerManager');\n    checkParam(connector, 'connector');\n\n    this.dolphin = dolphin;\n    this.beanManager = beanManager;\n    this._controllerManager = controllerManager;\n    this._connector = connector;\n\n    this._connector.invoke(INIT_COMMAND_NAME);\n}\n\n\nClientContext.prototype.createController = function(name) {\n    checkMethod('ClientContext.createController(name)');\n    checkParam(name, 'name');\n\n    return this._controllerManager.createController(name);\n};\n\n\nClientContext.prototype.disconnect = function() {\n    // TODO: Implement ClientContext.disconnect [DP-46]\n    var self = this;\n    this.dolphin.stopPushListening();\n    this._controllerManager.destroy().then(function() {\n        self._connector.invoke(DISCONNECT_COMMAND_NAME);\n        self.dolphin = null;\n        self.beanManager = null;\n        self._controllerManager = null;\n        self._connector = null;\n    });\n};\n\n\nexports.ClientContext = ClientContext;\n},{\"./polyfills.js\":74,\"./utils.js\":75}],69:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\n\nvar exists = _dereq_('./utils.js').exists;\n\n\nfunction encodeCreatePresentationModelCommand(command) {\n    return {\n        'p': command.pmId,\n        't': command.pmType,\n        'a': command.attributes.map(function (attribute) {\n            var result = {\n                'n': attribute.propertyName,\n                'i': attribute.id\n            };\n            if (exists(attribute.value)) {\n                result.v = attribute.value;\n            }\n            if (exists(attribute.tag) && attribute.tag !== 'VALUE') {\n                result.t = attribute.tag;\n            }\n            return result;\n        }),\n        'id': 'CreatePresentationModel'\n    };\n}\n\nfunction decodeCreatePresentationModelCommand(command) {\n    return {\n        'id': 'CreatePresentationModel',\n        'className': \"org.opendolphin.core.comm.CreatePresentationModelCommand\",\n        'clientSideOnly': false,\n        'pmId': command.p,\n        'pmType': command.t,\n        'attributes': command.a.map(function (attribute) {\n            return {\n                'propertyName': attribute.n,\n                'id': attribute.i,\n                'value': exists(attribute.v)? attribute.v : null,\n                'baseValue': exists(attribute.v)? attribute.v : null,\n                'qualifier': null,\n                'tag': exists(attribute.t)? attribute.t : 'VALUE'\n            };\n        })\n    };\n}\n\n\nfunction encodeValueChangedCommand(command) {\n    var result = {\n        'a': command.attributeId\n    };\n    if (exists(command.oldValue)) {\n        result.o = command.oldValue;\n    }\n    if (exists(command.newValue)) {\n        result.n = command.newValue;\n    }\n    result.id = 'ValueChanged';\n    return result;\n}\n\nfunction decodeValueChangedCommand(command) {\n    return {\n        'id': 'ValueChanged',\n        'className': \"org.opendolphin.core.comm.ValueChangedCommand\",\n        'attributeId': command.a,\n        'oldValue': exists(command.o)? command.o : null,\n        'newValue': exists(command.n)? command.n : null\n    };\n}\n\n\nexports.Codec = {\n    encode: function (commands) {\n        return JSON.stringify(commands.map(function (command) {\n            if (command.id === 'CreatePresentationModel') {\n                return encodeCreatePresentationModelCommand(command);\n            } else if (command.id === 'ValueChanged') {\n                return encodeValueChangedCommand(command);\n            }\n            return command;\n        }));\n    },\n    decode: function (transmitted) {\n        if (typeof transmitted == 'string') {\n            return JSON.parse(transmitted).map(function (command) {\n                if (command.id === 'CreatePresentationModel') {\n                    return decodeCreatePresentationModelCommand(command);\n                } else if (command.id === 'ValueChanged') {\n                    return decodeValueChangedCommand(command);\n                }\n                return command;\n            });\n        }\n        else {\n            return transmitted;\n        }\n    }\n};\n},{\"./utils.js\":75}],70:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Promise = _dereq_('../bower_components/core.js/library/fn/promise');\nvar opendolphin = _dereq_('../libsrc/opendolphin.js');\nvar utils = _dereq_('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar POLL_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'longPoll';\nvar RELEASE_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'release';\n\nvar DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nvar ACTION_CALL_BEAN = '@@@ CONTROLLER_ACTION_CALL_BEAN @@@';\nvar HIGHLANDER_BEAN = '@@@ HIGHLANDER_BEAN @@@';\nvar DOLPHIN_LIST_SPLICE = '@DP:LS@';\nvar SOURCE_SYSTEM = '@@@ SOURCE_SYSTEM @@@';\nvar SOURCE_SYSTEM_CLIENT = 'client';\nvar SOURCE_SYSTEM_SERVER = 'server';\n\n\n\nvar initializer;\n\nfunction Connector(url, dolphin, classRepository, config) {\n    checkMethod('Connector(url, dolphin, classRepository, config)');\n    checkParam(url, 'url');\n    checkParam(dolphin, 'dolphin');\n    checkParam(classRepository, 'classRepository');\n\n    var self = this;\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.highlanderPMResolver = function() {};\n    this.highlanderPMPromise = new Promise(function(resolve) {\n        self.highlanderPMResolver = resolve;\n    });\n\n    dolphin.getClientModelStore().onModelStoreChange(function (event) {\n        var model = event.clientPresentationModel;\n        var sourceSystem = model.findAttributeByPropertyName(SOURCE_SYSTEM);\n        if (exists(sourceSystem) && sourceSystem.value === SOURCE_SYSTEM_SERVER) {\n            if (event.eventType === opendolphin.Type.ADDED) {\n                self.onModelAdded(model);\n            } else if (event.eventType === opendolphin.Type.REMOVED) {\n                self.onModelRemoved(model);\n            }\n        }\n    });\n\n    if (!exists(config) || !exists(config.serverPush) || config.serverPush === true) {\n        setTimeout(function() {\n            dolphin.startPushListening(POLL_COMMAND_NAME, RELEASE_COMMAND_NAME);\n        }, 500);\n    }\n\n    initializer = new Promise(function(resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.withCredentials = true;\n\n        req.onload = function() {\n            if (req.status === 200) {\n                resolve();\n            }\n            else {\n                reject(Error(req.statusText));\n            }\n        };\n\n        req.onerror = function() {\n            reject(Error(\"Network Error\"));\n        };\n\n        req.open('POST', url + 'invalidate?');\n        req.send();\n    });\n}\n\n\nConnector.prototype.onModelAdded = function(model) {\n    checkMethod('Connector.onModelAdded(model)');\n    checkParam(model, 'model');\n\n    var type = model.presentationModelType;\n    switch (type) {\n        case ACTION_CALL_BEAN:\n            // ignore\n            break;\n        case DOLPHIN_BEAN:\n            this.classRepository.registerClass(model);\n            break;\n        case HIGHLANDER_BEAN:\n            this.highlanderPMResolver(model);\n            break;\n        case DOLPHIN_LIST_SPLICE:\n            this.classRepository.spliceListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        default:\n            this.classRepository.load(model);\n            break;\n    }\n};\n\n\nConnector.prototype.onModelRemoved = function(model) {\n    checkMethod('Connector.onModelRemoved(model)');\n    checkParam(model, 'model');\n\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            this.classRepository.unregisterClass(model);\n            break;\n        case DOLPHIN_LIST_SPLICE:\n            // do nothing\n            break;\n        default:\n            this.classRepository.unload(model);\n            break;\n    }\n};\n\n\nConnector.prototype.invoke = function(command) {\n    checkMethod('Connector.invoke(command)');\n    checkParam(command, 'command');\n\n    var dolphin = this.dolphin;\n    return new Promise(function(resolve) {\n        //initializer.then(function () {\n            dolphin.send(command, {\n                onFinished: function() {\n                    resolve();\n                }\n            });\n        //});\n    });\n};\n\n\nConnector.prototype.getHighlanderPM = function() {\n    return this.highlanderPMPromise;\n};\n\n\n\nexports.Connector = Connector;\nexports.SOURCE_SYSTEM = SOURCE_SYSTEM;\nexports.SOURCE_SYSTEM_CLIENT = SOURCE_SYSTEM_CLIENT;\nexports.SOURCE_SYSTEM_SERVER = SOURCE_SYSTEM_SERVER;\nexports.ACTION_CALL_BEAN = ACTION_CALL_BEAN;\n\n},{\"../bower_components/core.js/library/fn/promise\":2,\"../libsrc/opendolphin.js\":65,\"./polyfills.js\":74,\"./utils.js\":75}],71:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Promise = _dereq_('../bower_components/core.js/library/fn/promise');\nvar Set = _dereq_('../bower_components/core.js/library/fn/set');\nvar utils = _dereq_('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar ControllerProxy = _dereq_('./controllerproxy.js').ControllerProxy;\n\nvar DOLPHIN_BEAN_TYPE = _dereq_('./classrepo.js').DOLPHIN_BEAN;\n\nvar SOURCE_SYSTEM = _dereq_('./connector.js').SOURCE_SYSTEM;\nvar SOURCE_SYSTEM_CLIENT = _dereq_('./connector.js').SOURCE_SYSTEM_CLIENT;\nvar ACTION_CALL_BEAN = _dereq_('./connector.js').ACTION_CALL_BEAN;\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar REGISTER_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'registerController';\nvar CALL_CONTROLLER_ACTION_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'callControllerAction';\nvar DESTROY_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'destroyController';\n\nvar CONTROLLER_NAME = 'controllerName';\nvar CONTROLLER_ID = 'controllerId';\nvar MODEL = 'model';\nvar ACTION_NAME = 'actionName';\nvar ERROR_CODE = 'errorCode';\nvar PARAM_PREFIX = '_';\n\n\nfunction ControllerManager(dolphin, classRepository, connector) {\n    checkMethod('ControllerManager(dolphin, classRepository, connector)');\n    checkParam(dolphin, 'dolphin');\n    checkParam(classRepository, 'classRepository');\n    checkParam(connector, 'connector');\n\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.connector = connector;\n    this.controllers = new Set();\n}\n\n\nControllerManager.prototype.createController = function(name) {\n    checkMethod('ControllerManager.createController(name)');\n    checkParam(name, 'name');\n\n    var self = this;\n    var controllerId, modelId, model, controller;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_NAME).setValue(name);\n            self.connector.invoke(REGISTER_CONTROLLER_COMMAND_NAME).then(function() {\n                controllerId = highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).getValue();\n                modelId = highlanderPM.findAttributeByPropertyName(MODEL).getValue();\n                model = self.classRepository.mapDolphinToBean(modelId, DOLPHIN_BEAN_TYPE);\n                controller = new ControllerProxy(controllerId, model, self);\n                self.controllers.add(controller);\n                resolve(controller);\n            });\n        });\n    });\n};\n\n\nControllerManager.prototype.invokeAction = function(controllerId, actionName, params) {\n    checkMethod('ControllerManager.invokeAction(controllerId, actionName, params)');\n    checkParam(controllerId, 'controllerId');\n    checkParam(actionName, 'actionName');\n\n    var self = this;\n    return new Promise(function(resolve, reject) {\n\n        var attributes = [\n            self.dolphin.attribute(SOURCE_SYSTEM, null, SOURCE_SYSTEM_CLIENT),\n            self.dolphin.attribute(CONTROLLER_ID, null, controllerId),\n            self.dolphin.attribute(ACTION_NAME, null, actionName),\n            self.dolphin.attribute(ERROR_CODE)\n        ];\n\n        if (exists(params)) {\n            for (var prop in params) {\n                if (params.hasOwnProperty(prop)) {\n                    var param = self.classRepository.mapParamToDolphin(params[prop]);\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.value, 'VALUE'));\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.type, 'VALUE_TYPE'));\n                }\n            }\n        }\n\n        var pm = self.dolphin.presentationModel.apply(self.dolphin, [null, ACTION_CALL_BEAN].concat(attributes));\n\n        self.connector.invoke(CALL_CONTROLLER_ACTION_COMMAND_NAME, params).then(function() {\n            var isError = pm.findAttributeByPropertyName(ERROR_CODE).getValue();\n            if (isError) {\n                reject(new Error(\"ControllerAction caused an error\"));\n            } else {\n                resolve();\n            }\n            self.dolphin.deletePresentationModel(pm);\n        });\n    });\n};\n\n\nControllerManager.prototype.destroyController = function(controller) {\n    checkMethod('ControllerManager.destroyController(controller)');\n    checkParam(controller, 'controller');\n\n    var self = this;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            self.controllers.delete(controller);\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).setValue(controller.controllerId);\n            self.connector.invoke(DESTROY_CONTROLLER_COMMAND_NAME).then(resolve);\n        });\n    });\n};\n\n\nControllerManager.prototype.destroy = function() {\n    var controllersCopy = this.controllers;\n    var promises = [];\n    this.controllers = new Set();\n    controllersCopy.forEach(function (controller) {\n        try {\n            promises.push(controller.destroy());\n        } catch (e) {\n            // ignore\n        }\n    });\n    return Promise.all(promises);\n};\n\n\n\nexports.ControllerManager = ControllerManager;\n\n},{\"../bower_components/core.js/library/fn/promise\":2,\"../bower_components/core.js/library/fn/set\":3,\"./classrepo.js\":67,\"./connector.js\":70,\"./controllerproxy.js\":72,\"./polyfills.js\":74,\"./utils.js\":75}],72:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar Set = _dereq_('../bower_components/core.js/library/fn/set');\nvar utils = _dereq_('./utils.js');\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\n\nfunction ControllerProxy(controllerId, model, manager) {\n    checkMethod('ControllerProxy(controllerId, model, manager)');\n    checkParam(controllerId, 'controllerId');\n    checkParam(model, 'model');\n    checkParam(manager, 'manager');\n\n    this.controllerId = controllerId;\n    this.model = model;\n    this.manager = manager;\n    this.destroyed = false;\n    this.onDestroyedHandlers = new Set();\n}\n\n\nControllerProxy.prototype.invoke = function(name, params) {\n    checkMethod('ControllerProxy.invoke(name, params)');\n    checkParam(name, 'name');\n\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    return this.manager.invokeAction(this.controllerId, name, params);\n};\n\n\nControllerProxy.prototype.destroy = function() {\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    this.destroyed = true;\n    this.onDestroyedHandlers.forEach(function(handler) {\n        try {\n            handler(this);\n        } catch(e) {\n            console.warn('An exception occurred while calling an onDestroyed-handler', e);\n        }\n    }, this);\n    return this.manager.destroyController(this);\n};\n\n\nControllerProxy.prototype.onDestroyed = function(handler) {\n    checkMethod('ControllerProxy.onDestroyed(handler)');\n    checkParam(handler, 'handler');\n\n    var self = this;\n    this.onDestroyedHandlers.add(handler);\n    return {\n        unsubscribe: function() {\n            self.onDestroyedHandlers.delete(handler);\n        }\n    };\n};\n\n\n\nexports.ControllerProxy = ControllerProxy;\n\n},{\"../bower_components/core.js/library/fn/set\":3,\"./polyfills.js\":74,\"./utils.js\":75}],73:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\n_dereq_('./polyfills.js');\nvar opendolphin = _dereq_('../libsrc/opendolphin.js');\n\nvar utils = _dereq_('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\nvar Connector = _dereq_('./connector.js').Connector;\nvar BeanManager = _dereq_('./beanmanager.js').BeanManager;\nvar ClassRepository = _dereq_('./classrepo.js').ClassRepository;\nvar ControllerManager = _dereq_('./controllermanager.js').ControllerManager;\nvar ClientContext = _dereq_('./clientcontext.js').ClientContext;\nvar Codec = _dereq_('./codec.js').Codec;\n\nexports.connect = function(url, config) {\n    checkMethod('connect(url, config)');\n    checkParam(url, 'url');\n\n    var builder = opendolphin.makeDolphin().url(url).reset(false).slackMS(4).supportCORS(true);\n    if (exists(config) && exists(config.errorHandler)) {\n        builder.errorHandler(config.errorHandler);\n    }\n    var dolphin = builder.build();\n    dolphin.clientConnector.transmitter.codec = Codec;\n\n    var classRepository = new ClassRepository(dolphin);\n    var beanManager = new BeanManager(classRepository);\n    var connector = new Connector(url, dolphin, classRepository, config);\n    var controllerManager = new ControllerManager(dolphin, classRepository, connector);\n\n    return new ClientContext(dolphin, beanManager, controllerManager, connector);\n};\n\n},{\"../libsrc/opendolphin.js\":65,\"./beanmanager.js\":66,\"./classrepo.js\":67,\"./clientcontext.js\":68,\"./codec.js\":69,\"./connector.js\":70,\"./controllermanager.js\":71,\"./polyfills.js\":74,\"./utils.js\":75}],74:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n ////////////////////\n// Array.forEach()\n////////////////////\nif (!Array.prototype.forEach) {\n\n    Array.prototype.forEach = function(callback, thisArg) {\n\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n\n\n////////////////////\n// Array.filter()\n////////////////////\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun/*, thisArg*/) {\n        'use strict';\n\n        if (this === void 0 || this === null) {\n            throw new TypeError();\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n\n                // NOTE: Technically this should Object.defineProperty at\n                //       the next index, as push can be affected by\n                //       properties on Object.prototype and Array.prototype.\n                //       But that method's new, and collisions should be\n                //       rare, so use the more-compatible alternative.\n                if (fun.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}\n},{}],75:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar checkMethodName;\n\nvar exists = function(object) {\n    return typeof object !== 'undefined' && object !== null;\n};\n\nmodule.exports.exists = exists;\n\nmodule.exports.checkMethod = function(name) {\n    checkMethodName = name;\n};\n\nmodule.exports.checkParam = function(param, parameterName) {\n    if (!exists(param)) {\n        throw new Error('The parameter ' + parameterName + ' is mandatory in ' + checkMethodName);\n    }\n};\n\n},{}]},{},[73])(73)\n});\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],51:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Polymer, console */\n\"use strict\";\n\nvar Binder = _dereq_('./binder.js').Binder;\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\n\nvar arrayKeyBug;\nfunction polymer1_1hack(element, path) {\n    // This is a temporary hack to deal with Polymer's API consistency concerning arrays and paths.\n    // An observer uses keys in an array, while the get() and set() methods expect the index.\n    // This is hopefully fixed in Polymer 1.2.\n    do {\n        var pathElements = path.match(/^([^\\.]+)\\.(.*)$/);\n        var key = pathElements !== null? pathElements[1] : path;\n        path = pathElements !== null? pathElements[2] : null;\n\n        if (Array.isArray(element)) {\n            var arrayKey = parseInt(key);\n            if (isNaN(arrayKey)) {\n                element = element[key];\n            } else {\n                var collection = Polymer.Collection.get(element);\n                element = collection.getItem(arrayKey);\n            }\n        } else {\n            element = element[key];\n        }\n    } while (path !== null && exists(element));\n\n    return element;\n}\nfunction navigateToBean(element, path) {\n    var navigation = path.match(/^(.*)\\.[^\\.]*$/);\n    if (! exists(navigation)) {\n        return element;\n    } else {\n        if (!exists(arrayKeyBug)) {\n            arrayKeyBug = typeof Polymer.version !== 'string' || (Polymer.version.match(/^1\\.[01]\\./) !== null);\n        }\n        return arrayKeyBug? polymer1_1hack(element, navigation[1]) : element.get(navigation[1], element);\n    }\n}\n\n\nfunction setupCreateBehavior(clientContext) {\n\n    var binder = new Binder(clientContext.beanManager);\n\n    return function(controllerName) {\n        var state = 'INITIALIZING';\n        return {\n\n            properties: {\n                model: {\n                    type: Object,\n                    value: function() { return {}; }\n                }\n            },\n\n            observers: ['_dolphinObserver(model.*)'],\n\n            created: function() {\n                var self = this;\n                clientContext.createController(controllerName).then(function(controller) {\n                    self._controller = controller;\n                    state = 'READY';\n                    self.set('model', controller.model);\n                    controller.onDestroyed(function() {\n                        state = 'DESTROYED';\n                        self.set('model', null);\n                    });\n                });\n            },\n\n            invoke: function(actionName, params) {\n                // TODO Call this after init has finished\n                if (state !== 'READY') {\n                    console.warn('Controller.invoke() called before init() finished');\n                    return;\n                }\n                return this._controller.invoke(actionName, params);\n            },\n\n            _dolphinObserver: function(event) {\n                if (state !== 'READY') {\n                    return;\n                }\n                var path = event.path;\n                var bean, propertyName, i, j;\n                var newValue = event.value;\n\n                if (exists(newValue) && exists(newValue.indexSplices)) {\n                    path = path.substr(0, path.length - \".splices\".length);\n                    bean = navigateToBean(this, path);\n                    if (exists(bean)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var n = newValue.indexSplices.length;\n                        for (i = 0; i < n; i++) {\n                            var change = newValue.indexSplices[i];\n                            clientContext.beanManager.notifyArrayChange(bean, propertyName[0], change.index, change.addedCount, change.removed);\n\n                            var array = bean[propertyName[0]];\n                            for (j = 0; j < change.removed.length; j++) {\n                                binder.unbind(this, path + '.' + (change.index + j), change.removed[j]);\n                            }\n                            for (j = change.index + change.addedCount; j < array.length; j++) {\n                                var oldPos = j - change.addedCount + change.removed.length;\n                                binder.unbind(this, path + '.' + oldPos, array[j]);\n                            }\n                            for (j = change.index; j < array.length; j++) {\n                                binder.bind(this, path + '.' + j, array[j]);\n                            }\n                        }\n                    }\n                } else {\n                    bean = navigateToBean(this, path);\n                    if (exists(bean) && !Array.isArray(bean) && !Array.isArray(newValue)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var oldValue = clientContext.beanManager.notifyBeanChange(bean, propertyName[0], newValue);\n                        if (exists(oldValue)) {\n                            binder.unbind(this, path, oldValue);\n                        }\n                        if (exists(newValue)) {\n                            binder.bind(this, path, newValue);\n                        }\n                    }\n                }\n            }\n        };\n    };\n}\n\n\n\nexports.setupCreateBehavior = setupCreateBehavior;\n},{\"./binder.js\":52}],52:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar Map  = _dereq_('../bower_components/core.js/library/fn/map');\n\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\nfunction bindScope(scope, fn) {\n    return function () {\n        fn.apply(scope, arguments);\n    };\n}\n\nfunction deepEqual(array1, array2) {\n    if (array1 === array2 || (!exists(array1) && !exists(array2))) {\n        return true;\n    }\n    if (exists(array1) !== exists(array2)) {\n        return false;\n    }\n    var n = array1.length;\n    if (array2.length !== n) {\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\nfunction Binder(beanManager) {\n    this.listeners = new Map();\n\n    beanManager.onBeanUpdate(bindScope(this, this.onBeanUpdateHandler));\n    beanManager.onArrayUpdate(bindScope(this, this.onArrayUpdateHandler));\n}\n\n\nBinder.prototype.onBeanUpdateHandler = function(bean, propertyName, newValue, oldValue) {\n    if (oldValue === newValue) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        element.set(path, newValue);\n    } else {\n        bean[propertyName] = newValue;\n    }\n};\n\n\nBinder.prototype.onArrayUpdateHandler = function(bean, propertyName, index, count, newElements) {\n    var array = bean[propertyName];\n    var oldElements = array.slice(index, index + count);\n    if (deepEqual(newElements, oldElements)) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        if (typeof newElements === 'undefined') {\n            element.splice(path, index, count);\n        } else {\n            element.splice.apply(element, [path, index, count].concat(newElements));\n        }\n    } else {\n        if (typeof newElements === 'undefined') {\n            array.splice(index, count);\n        } else {\n            array.splice.apply(array, [index, count].concat(newElements));\n        }\n    }\n};\n\n\nBinder.prototype.bind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (!exists(listenerList)) {\n        listenerList = [];\n        this.listeners.set(value, listenerList);\n    }\n    listenerList.push({element: element, rootPath: rootPath});\n\n    if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n            this.bind(element, rootPath + '.' + i, value[i]);\n        }\n    } else if (typeof value === 'object') {\n        for (var propertyName in value) {\n            if (value.hasOwnProperty(propertyName)) {\n                this.bind(element, rootPath + '.' + propertyName, value[propertyName]);\n            }\n        }\n    }\n};\n\nBinder.prototype.unbind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (exists(listenerList)) {\n        var n = listenerList.length;\n        for (var i = 0; i < n; i++) {\n            var entry = listenerList[i];\n            if (entry.element === element && entry.rootPath === rootPath) {\n                listenerList.splice(i, 1);\n\n                if (Array.isArray(value)) {\n                    for (var j = 0; j < value.length; j++) {\n                        this.unbind(element, rootPath + '.' + j, value[j]);\n                    }\n                } else if (typeof value === 'object') {\n                    for (var propertyName in value) {\n                        if (value.hasOwnProperty(propertyName)) {\n                            this.unbind(element, rootPath + '.' + propertyName, value[propertyName]);\n                        }\n                    }\n                }\n                return;\n            }\n        }\n    }\n};\n\n\n\nexports.Binder = Binder;\n\n},{\"../bower_components/core.js/library/fn/map\":1}],53:[function(_dereq_,module,exports){\n/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar connect = _dereq_('../bower_components/dolphin-js/dist/dolphin.js').connect;\nvar setupCreateBehavior = _dereq_('./behavior.js').setupCreateBehavior;\n\n\nexports.connect = function(url, config) {\n    var clientContext = connect(url, config);\n    clientContext.createBehavior = setupCreateBehavior(clientContext);\n    return clientContext;\n};\n\n},{\"../bower_components/dolphin-js/dist/dolphin.js\":50,\"./behavior.js\":51}]},{},[53])(53)\n});\n\n","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","module.exports = function(){ /* empty */ };","var isObject = require('./$.is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./$.cof')\n  , TAG = require('./$.wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","'use strict';\nvar $            = require('./$')\n  , hide         = require('./$.hide')\n  , redefineAll  = require('./$.redefine-all')\n  , ctx          = require('./$.ctx')\n  , strictNew    = require('./$.strict-new')\n  , defined      = require('./$.defined')\n  , forOf        = require('./$.for-of')\n  , $iterDefine  = require('./$.iter-define')\n  , step         = require('./$.iter-step')\n  , ID           = require('./$.uid')('id')\n  , $has         = require('./$.has')\n  , isObject     = require('./$.is-object')\n  , setSpecies   = require('./$.set-species')\n  , DESCRIPTORS  = require('./$.descriptors')\n  , isExtensible = Object.isExtensible || isObject\n  , SIZE         = DESCRIPTORS ? '_s' : 'size'\n  , id           = 0;\n\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!$has(it, ID)){\n    // can't set id to frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add id\n    if(!create)return 'E';\n    // add missing object id\n    hide(it, ID, ++id);\n  // return object id with prefix\n  } return 'O' + it[ID];\n};\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      strictNew(that, C, NAME);\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar forOf   = require('./$.for-of')\n  , classof = require('./$.classof');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    var arr = [];\n    forOf(this, false, arr.push, arr);\n    return arr;\n  };\n};","'use strict';\nvar $              = require('./$')\n  , global         = require('./$.global')\n  , $export        = require('./$.export')\n  , fails          = require('./$.fails')\n  , hide           = require('./$.hide')\n  , redefineAll    = require('./$.redefine-all')\n  , forOf          = require('./$.for-of')\n  , strictNew      = require('./$.strict-new')\n  , isObject       = require('./$.is-object')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , DESCRIPTORS    = require('./$.descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n  } else {\n    C = wrapper(function(target, iterable){\n      strictNew(target, C, NAME);\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};","var core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./$.fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var global    = require('./$.global')\n  , core      = require('./$.core')\n  , ctx       = require('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","var ctx         = require('./$.ctx')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , anObject    = require('./$.an-object')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that){\n  var iterFn = getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var $          = require('./$')\n  , createDesc = require('./$.property-desc');\nmodule.exports = require('./$.descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./$.cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// check on default Array iterator\nvar Iterators  = require('./$.iterators')\n  , ITERATOR   = require('./$.wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","// call something on iterator step with safe closing on error\nvar anObject = require('./$.an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};","'use strict';\nvar $              = require('./$')\n  , descriptor     = require('./$.property-desc')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./$.hide')(IteratorPrototype, require('./$.wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./$.library')\n  , $export        = require('./$.export')\n  , redefine       = require('./$.redefine')\n  , hide           = require('./$.hide')\n  , has            = require('./$.has')\n  , Iterators      = require('./$.iterators')\n  , $iterCreate    = require('./$.iter-create')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , getProto       = require('./$').getProto\n  , ITERATOR       = require('./$.wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , methods, key;\n  // Fix native\n  if($native){\n    var IteratorPrototype = getProto($default.call(new Base));\n    // Set @@toStringTag to native iterators\n    setToStringTag(IteratorPrototype, TAG, true);\n    // FF fix\n    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    // fix Array#{values, @@iterator}.name in V8 / FF\n    if(DEF_VALUES && $native.name !== VALUES){\n      VALUES_BUG = true;\n      $default = function values(){ return $native.call(this); };\n    }\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n      keys:    IS_SET      ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","module.exports = {};","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};","module.exports = true;","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var redefine = require('./$.redefine');\nmodule.exports = function(target, src){\n  for(var key in src)redefine(target, key, src[key]);\n  return target;\n};","module.exports = require('./$.hide');","'use strict';\nvar core        = require('./$.core')\n  , $           = require('./$')\n  , DESCRIPTORS = require('./$.descriptors')\n  , SPECIES     = require('./$.wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};","var def = require('./$').setDesc\n  , has = require('./$.has')\n  , TAG = require('./$.wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","var global = require('./$.global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","module.exports = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};","var toInteger = require('./$.to-integer')\n  , defined   = require('./$.defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./$.iobject')\n  , defined = require('./$.defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.15 ToLength\nvar toInteger = require('./$.to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var store  = require('./$.shared')('wks')\n  , uid    = require('./$.uid')\n  , Symbol = require('./$.global').Symbol;\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n};","var classof   = require('./$.classof')\n  , ITERATOR  = require('./$.wks')('iterator')\n  , Iterators = require('./$.iterators');\nmodule.exports = require('./$.core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};","'use strict';\nvar addToUnscopables = require('./$.add-to-unscopables')\n  , step             = require('./$.iter-step')\n  , Iterators        = require('./$.iterators')\n  , toIObject        = require('./$.to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./$.iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","'use strict';\nvar strong = require('./$.collection-strong');\n\n// 23.1 Map Objects\nrequire('./$.collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","'use strict';\nvar $at  = require('./$.string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./$.iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./$.export');\n\n$export($export.P, 'Map', {toJSON: require('./$.collection-to-json')('Map')});","require('./es6.array.iterator');\nvar Iterators = require('./$.iterators');\nIterators.NodeList = Iterators.HTMLCollection = Iterators.Array;","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nmodule.exports = require('../modules/_core').Map;","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nmodule.exports = require('../modules/_core').Promise;","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.set');\nrequire('../modules/es7.set.to-json');\nmodule.exports = require('../modules/_core').Set;","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","module.exports = function(){ /* empty */ };","module.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","var forOf = require('./_for-of');\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","'use strict';\nvar $           = require('./_')\n  , hide        = require('./_hide')\n  , redefineAll = require('./_redefine-all')\n  , ctx         = require('./_ctx')\n  , anInstance  = require('./_an-instance')\n  , defined     = require('./_defined')\n  , forOf       = require('./_for-of')\n  , $iterDefine = require('./_iter-define')\n  , step        = require('./_iter-step')\n  , setSpecies  = require('./_set-species')\n  , DESCRIPTORS = require('./_descriptors')\n  , fastKey     = require('./_meta').fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = $.create(null); // index\n      that._f = undefined;      // first entry\n      that._l = undefined;      // last entry\n      that[SIZE] = 0;           // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof')\n  , from    = require('./_array-from-iterable');\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};","'use strict';\nvar $              = require('./_')\n  , global         = require('./_global')\n  , $export        = require('./_export')\n  , meta           = require('./_meta')\n  , fails          = require('./_fails')\n  , hide           = require('./_hide')\n  , redefineAll    = require('./_redefine-all')\n  , forOf          = require('./_for-of')\n  , anInstance     = require('./_an-instance')\n  , isObject       = require('./_is-object')\n  , setToStringTag = require('./_set-to-string-tag')\n  , DESCRIPTORS    = require('./_descriptors');\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function(target, iterable){\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    $.each.call('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        anInstance(this, C, KEY);\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)$.setDesc(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};","var core = module.exports = {version: '2.0.3'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","var ctx         = require('./_ctx')\n  , call        = require('./_iter-call')\n  , isArrayIter = require('./_is-array-iter')\n  , anObject    = require('./_an-object')\n  , toLength    = require('./_to-length')\n  , getIterFn   = require('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var $          = require('./_')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","module.exports = require('./_global').document && document.documentElement;","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// check on default Array iterator\nvar Iterators  = require('./_iterators')\n  , ITERATOR   = require('./_wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};","'use strict';\nvar $              = require('./_')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getProto       = require('./_').getProto\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getProto($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","var ITERATOR     = require('./_wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","module.exports = {};","module.exports = true;","var META     = require('./_uid')('meta')\n  , isObject = require('./_is-object')\n  , has      = require('./_has')\n  , setDesc  = require('./_').setDesc\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !require('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};","var global    = require('./_global')\n  , macrotask = require('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./_cof')(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var hide = require('./_hide');\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};","module.exports = require('./_hide');","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar getDesc  = require('./_').getDesc\n  , isObject = require('./_is-object')\n  , anObject = require('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = require('./_ctx')(Function.call, getDesc(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};","'use strict';\nvar core        = require('./_core')\n  , $           = require('./_')\n  , DESCRIPTORS = require('./_descriptors')\n  , SPECIES     = require('./_wks')('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};","var def = require('./_').setDesc\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = require('./_an-object')\n  , aFunction = require('./_a-function')\n  , SPECIES   = require('./_wks')('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","var ctx                = require('./_ctx')\n  , invoke             = require('./_invoke')\n  , html               = require('./_html')\n  , cel                = require('./_dom-create')\n  , global             = require('./_global')\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listner = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(require('./_cof')(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listner;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listner, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')('Map', function(get){\n  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key){\n    var entry = strong.getEntry(this, key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value){\n    return strong.def(this, key === 0 ? 0 : key, value);\n  }\n}, strong, true);","'use strict';\nvar $                  = require('./_')\n  , LIBRARY            = require('./_library')\n  , global             = require('./_global')\n  , ctx                = require('./_ctx')\n  , classof            = require('./_classof')\n  , $export            = require('./_export')\n  , isObject           = require('./_is-object')\n  , anObject           = require('./_an-object')\n  , aFunction          = require('./_a-function')\n  , anInstance         = require('./_an-instance')\n  , forOf              = require('./_for-of')\n  , from               = require('./_array-from-iterable')\n  , setProto           = require('./_set-proto').set\n  , speciesConstructor = require('./_species-constructor')\n  , task               = require('./_task').set\n  , microtask          = require('./_microtask')\n  , PROMISE            = 'Promise'\n  , TypeError          = global.TypeError\n  , process            = global.process\n  , $Promise           = global[PROMISE]\n  , isNode             = classof(process) == 'process'\n  , empty              = function(){ /* empty */ }\n  , Internal, GenericPromiseCapability, Wrapper;\n\nvar testResolve = function(sub){\n  var test = new $Promise(empty), promise;\n  if(sub)test.constructor = function(exec){\n    exec(empty, empty);\n  };\n  (promise = $Promise.resolve(test))['catch'](empty);\n  return promise === test;\n};\n\nvar USE_NATIVE = function(){\n  var works = false;\n  var SubPromise = function(x){\n    var self = new $Promise(x);\n    setProto(self, SubPromise.prototype);\n    return self;\n  };\n  try {\n    works = $Promise && $Promise.resolve && testResolve();\n    setProto(SubPromise, $Promise);\n    SubPromise.prototype = $.create($Promise.prototype, {constructor: {value: SubPromise}});\n    // actual Firefox has broken subclass support, test that\n    if(!(SubPromise.resolve(5).then(empty) instanceof SubPromise)){\n      works = false;\n    }\n    // V8 4.8- bug, https://code.google.com/p/v8/issues/detail?id=4162\n    if(works && require('./_descriptors')){\n      var thenableThenGotten = false;\n      $Promise.resolve($.setDesc({}, 'then', {\n        get: function(){ thenableThenGotten = true; }\n      }));\n      works = thenableThenGotten;\n    }\n  } catch(e){ works = false; }\n  return !!works;\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // with library wrapper special case\n  return a === b || a === $Promise && b === Wrapper;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar newPromiseCapability = function(C){\n  return sameConstructor($Promise, C)\n    ? new PromiseCapability(C)\n    : new GenericPromiseCapability(C);\n};\nvar PromiseCapability = GenericPromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject  = aFunction(reject);\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(promise, isReject){\n  if(promise._n)return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function(){\n    var value = promise._v\n      , ok    = promise._s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , result, then;\n      try {\n        if(handler){\n          if(!ok){\n            if(promise._h == 2)onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          result = handler === true ? value : handler(value);\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if(isReject && !promise._h)onUnhandled(promise);\n  });\n};\nvar onUnhandled = function(promise){\n  task.call(global, function(){\n    if(isUnhandled(promise)){\n      var value = promise._v\n        , handler, console;\n      if(isNode){\n        process.emit('unhandledRejection', value, promise);\n      } else if(handler = global.onunhandledrejection){\n        handler({promise: promise, reason: value});\n      } else if((console = global.console) && console.error){\n        console.error('Unhandled promise rejection', value);\n      } promise._h = 2;\n    } promise._a = undefined;\n  });\n};\nvar isUnhandled = function(promise){\n  var chain = promise._a || promise._c\n    , i     = 0\n    , reaction;\n  if(promise._h == 1)return false;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar onHandleUnhandled = function(promise){\n  task.call(global, function(){\n    var handler;\n    if(isNode){\n      process.emit('rejectionHandled', promise);\n    } else if(handler = global.onrejectionhandled){\n      handler({promise: promise, reason: promise._v});\n    }\n  });\n};\nvar $reject = function(value){\n  var promise = this;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if(!promise._a)promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function(value){\n  var promise = this\n    , then;\n  if(promise._d)return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if(promise === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      microtask(function(){\n        var wrapper = {_w: promise, _d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch(e){\n    $reject.call({_w: promise, _d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor){\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch(err){\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor){\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok   = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      this._c.push(reaction);\n      if(this._a)this._a.push(reaction);\n      if(this._s)notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n  PromiseCapability = function(){\n    var promise  = new Internal;\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject  = ctx($reject, promise, 1);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = newPromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE || testResolve(true)), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;\n    var capability = newPromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      var values    = from(iterable)\n        , remaining = values.length\n        , results   = Array(remaining);\n      if(remaining)$.each.call(values, function(promise, index){\n        var alreadyCalled = false;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled = true;\n          results[index] = value;\n          --remaining || resolve(results);\n        }, reject);\n      });\n      else resolve(results);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = this\n      , capability = newPromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});","'use strict';\nvar strong = require('./_collection-strong');\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')('Set', function(get){\n  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value){\n    return strong.def(this, value = value === 0 ? 0 : value, value);\n  }\n}, strong);","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Map', {toJSON: require('./_collection-to-json')('Map')});","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = require('./_export');\n\n$export($export.P + $export.R, 'Set', {toJSON: require('./_collection-to-json')('Set')});","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag')\n  , ArrayValues   = Iterators.Array;\n\nrequire('./_').each.call(['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], function(NAME){\n  var Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = ArrayValues;\n});","var opendolphin;\n(function (opendolphin) {\n    var Attribute = (function () {\n        function Attribute() {\n        }\n        Attribute.QUALIFIER_PROPERTY = \"qualifier\";\n        Attribute.DIRTY_PROPERTY = \"dirty\";\n        Attribute.BASE_VALUE = \"baseValue\";\n        Attribute.VALUE = \"value\";\n        Attribute.TAG = \"tag\";\n        return Attribute;\n    })();\n    opendolphin.Attribute = Attribute;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Command = (function () {\n        function Command() {\n            this.id = \"dolphin-core-command\";\n        }\n        return Command;\n    })();\n    opendolphin.Command = Command;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Tag = (function () {\n        function Tag() {\n        }\n        //Implemented as function so that it will never be changed from outside\n        /** The actual value of the attribute. This is the default if no tag is given.*/\n        Tag.value = function () {\n            return \"VALUE\";\n        };\n        /** the to-be-displayed String, not the key. I18N happens on the server. */\n        Tag.label = function () {\n            return \"LABEL\";\n        };\n        /** If the attribute represent tooltip**/\n        Tag.tooltip = function () {\n            return \"TOOLTIP\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint nullable:false */\n        Tag.mandatory = function () {\n            return \"MANDATORY\";\n        };\n        /** \"true\" or \"false\", maps to Grails constraint display:true */\n        Tag.visible = function () {\n            return \"VISIBLE\";\n        };\n        /** \"true\" or \"false\" */\n        Tag.enabled = function () {\n            return \"ENABLED\";\n        };\n        /** regular expression for local, syntactical constraints like in \"rejectField\" */\n        Tag.regex = function () {\n            return \"REGEX\";\n        };\n        /** a single text; e.g. \"textArea\" if the String value should be displayed in a text area instead of a textField */\n        Tag.widgetHint = function () {\n            return \"WIDGET_HINT\";\n        };\n        /** a single text; e.g. \"java.util.Date\" if the value String represents a date */\n        Tag.valueType = function () {\n            return \"VALUE_TYPE\";\n        };\n        return Tag;\n    })();\n    opendolphin.Tag = Tag;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeCreatedNotification = (function (_super) {\n        __extends(AttributeCreatedNotification, _super);\n        function AttributeCreatedNotification(pmId, attributeId, propertyName, newValue, qualifier, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.attributeId = attributeId;\n            this.propertyName = propertyName;\n            this.newValue = newValue;\n            this.qualifier = qualifier;\n            this.tag = tag;\n            this.id = 'AttributeCreated';\n            this.className = \"org.opendolphin.core.comm.AttributeCreatedNotification\";\n        }\n        return AttributeCreatedNotification;\n    })(opendolphin.Command);\n    opendolphin.AttributeCreatedNotification = AttributeCreatedNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var AttributeMetadataChangedCommand = (function (_super) {\n        __extends(AttributeMetadataChangedCommand, _super);\n        function AttributeMetadataChangedCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'AttributeMetadataChanged';\n            this.className = \"org.opendolphin.core.comm.AttributeMetadataChangedCommand\";\n        }\n        return AttributeMetadataChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.AttributeMetadataChangedCommand = AttributeMetadataChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var BaseValueChangedCommand = (function (_super) {\n        __extends(BaseValueChangedCommand, _super);\n        function BaseValueChangedCommand(attributeId) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.id = 'BaseValueChanged';\n            this.className = \"org.opendolphin.core.comm.BaseValueChangedCommand\";\n        }\n        return BaseValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.BaseValueChangedCommand = BaseValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CallNamedActionCommand = (function (_super) {\n        __extends(CallNamedActionCommand, _super);\n        function CallNamedActionCommand(actionName) {\n            _super.call(this);\n            this.actionName = actionName;\n            this.id = 'CallNamedAction';\n            this.className = \"org.opendolphin.core.comm.CallNamedActionCommand\";\n        }\n        return CallNamedActionCommand;\n    })(opendolphin.Command);\n    opendolphin.CallNamedActionCommand = CallNamedActionCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ChangeAttributeMetadataCommand = (function (_super) {\n        __extends(ChangeAttributeMetadataCommand, _super);\n        function ChangeAttributeMetadataCommand(attributeId, metadataName, value) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.metadataName = metadataName;\n            this.value = value;\n            this.id = 'ChangeAttributeMetadata';\n            this.className = \"org.opendolphin.core.comm.ChangeAttributeMetadataCommand\";\n        }\n        return ChangeAttributeMetadataCommand;\n    })(opendolphin.Command);\n    opendolphin.ChangeAttributeMetadataCommand = ChangeAttributeMetadataCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var EventBus = (function () {\n        function EventBus() {\n            this.eventHandlers = [];\n        }\n        EventBus.prototype.onEvent = function (eventHandler) {\n            this.eventHandlers.push(eventHandler);\n        };\n        EventBus.prototype.trigger = function (event) {\n            this.eventHandlers.forEach(function (handle) { return handle(event); });\n        };\n        return EventBus;\n    })();\n    opendolphin.EventBus = EventBus;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var presentationModelInstanceCount = 0; // todo dk: consider making this static in class\n    var ClientPresentationModel = (function () {\n        function ClientPresentationModel(id, presentationModelType) {\n            this.id = id;\n            this.presentationModelType = presentationModelType;\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.dirty = false;\n            if (typeof id !== 'undefined' && id != null) {\n                this.id = id;\n            }\n            else {\n                this.id = (presentationModelInstanceCount++).toString();\n            }\n            this.invalidBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n        }\n        // todo dk: align with Java version: move to ClientDolphin and auto-add to model store\n        /** a copy constructor for anything but IDs. Per default, copies are client side only, no automatic update applies. */\n        ClientPresentationModel.prototype.copy = function () {\n            var result = new ClientPresentationModel(null, this.presentationModelType);\n            result.clientSideOnly = true;\n            this.getAttributes().forEach(function (attribute) {\n                var attributeCopy = attribute.copy();\n                result.addAttribute(attributeCopy);\n            });\n            return result;\n        };\n        //add array of attributes\n        ClientPresentationModel.prototype.addAttributes = function (attributes) {\n            var _this = this;\n            if (!attributes || attributes.length < 1)\n                return;\n            attributes.forEach(function (attr) {\n                _this.addAttribute(attr);\n            });\n        };\n        ClientPresentationModel.prototype.addAttribute = function (attribute) {\n            var _this = this;\n            if (!attribute || (this.attributes.indexOf(attribute) > -1)) {\n                return;\n            }\n            if (this.findAttributeByPropertyNameAndTag(attribute.propertyName, attribute.tag)) {\n                throw new Error(\"There already is an attribute with property name: \" + attribute.propertyName\n                    + \" and tag: \" + attribute.tag + \" in presentation model with id: \" + this.id);\n            }\n            if (attribute.getQualifier() && this.findAttributeByQualifier(attribute.getQualifier())) {\n                throw new Error(\"There already is an attribute with qualifier: \" + attribute.getQualifier()\n                    + \" in presentation model with id: \" + this.id);\n            }\n            attribute.setPresentationModel(this);\n            this.attributes.push(attribute);\n            if (attribute.tag == opendolphin.Tag.value()) {\n                this.updateDirty();\n            }\n            attribute.onValueChange(function (evt) {\n                _this.invalidBus.trigger({ source: _this });\n            });\n        };\n        ClientPresentationModel.prototype.updateDirty = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].isDirty()) {\n                    this.setDirty(true);\n                    return;\n                }\n            }\n            ;\n            this.setDirty(false);\n        };\n        ClientPresentationModel.prototype.updateAttributeDirtyness = function () {\n            for (var i = 0; i < this.attributes.length; i++) {\n                this.attributes[i].updateDirty();\n            }\n        };\n        ClientPresentationModel.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientPresentationModel.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n        };\n        ClientPresentationModel.prototype.reset = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.reset();\n            });\n        };\n        ClientPresentationModel.prototype.rebase = function () {\n            this.attributes.forEach(function (attribute) {\n                attribute.rebase();\n            });\n        };\n        ClientPresentationModel.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientPresentationModel.prototype.onInvalidated = function (handleInvalidate) {\n            this.invalidBus.onEvent(handleInvalidate);\n        };\n        /** returns a copy of the internal state */\n        ClientPresentationModel.prototype.getAttributes = function () {\n            return this.attributes.slice(0);\n        };\n        ClientPresentationModel.prototype.getAt = function (propertyName, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            return this.findAttributeByPropertyNameAndTag(propertyName, tag);\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyName = function (propertyName) {\n            return this.findAttributeByPropertyNameAndTag(propertyName, opendolphin.Tag.value());\n        };\n        ClientPresentationModel.prototype.findAllAttributesByPropertyName = function (propertyName) {\n            var result = [];\n            if (!propertyName)\n                return null;\n            this.attributes.forEach(function (attribute) {\n                if (attribute.propertyName == propertyName) {\n                    result.push(attribute);\n                }\n            });\n            return result;\n        };\n        ClientPresentationModel.prototype.findAttributeByPropertyNameAndTag = function (propertyName, tag) {\n            if (!propertyName || !tag)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if ((this.attributes[i].propertyName == propertyName) && (this.attributes[i].tag == tag)) {\n                    return this.attributes[i];\n                }\n            }\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeByQualifier = function (qualifier) {\n            if (!qualifier)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].getQualifier() == qualifier) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.findAttributeById = function (id) {\n            if (!id)\n                return null;\n            for (var i = 0; i < this.attributes.length; i++) {\n                if (this.attributes[i].id == id) {\n                    return this.attributes[i];\n                }\n            }\n            ;\n            return null;\n        };\n        ClientPresentationModel.prototype.syncWith = function (sourcePresentationModel) {\n            this.attributes.forEach(function (targetAttribute) {\n                var sourceAttribute = sourcePresentationModel.getAt(targetAttribute.propertyName, targetAttribute.tag);\n                if (sourceAttribute) {\n                    targetAttribute.syncWith(sourceAttribute);\n                }\n            });\n        };\n        return ClientPresentationModel;\n    })();\n    opendolphin.ClientPresentationModel = ClientPresentationModel;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"EventBus.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientAttribute = (function () {\n        function ClientAttribute(propertyName, qualifier, value, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            this.propertyName = propertyName;\n            this.tag = tag;\n            this.dirty = false;\n            this.id = \"\" + (ClientAttribute.clientAttributeInstanceCount++) + \"C\";\n            this.valueChangeBus = new opendolphin.EventBus();\n            this.qualifierChangeBus = new opendolphin.EventBus();\n            this.dirtyValueChangeBus = new opendolphin.EventBus();\n            this.baseValueChangeBus = new opendolphin.EventBus();\n            this.setValue(value);\n            this.setBaseValue(value);\n            this.setQualifier(qualifier);\n        }\n        /** a copy constructor with new id and no presentation model */\n        ClientAttribute.prototype.copy = function () {\n            var result = new ClientAttribute(this.propertyName, this.getQualifier(), this.getValue(), this.tag);\n            result.setBaseValue(this.getBaseValue());\n            return result;\n        };\n        ClientAttribute.prototype.isDirty = function () {\n            return this.dirty;\n        };\n        ClientAttribute.prototype.getBaseValue = function () {\n            return this.baseValue;\n        };\n        ClientAttribute.prototype.setPresentationModel = function (presentationModel) {\n            if (this.presentationModel) {\n                alert(\"You can not set a presentation model for an attribute that is already bound.\");\n            }\n            this.presentationModel = presentationModel;\n        };\n        ClientAttribute.prototype.getPresentationModel = function () {\n            return this.presentationModel;\n        };\n        ClientAttribute.prototype.getValue = function () {\n            return this.value;\n        };\n        ClientAttribute.prototype.setValue = function (newValue) {\n            var verifiedValue = ClientAttribute.checkValue(newValue);\n            if (this.value == verifiedValue)\n                return;\n            var oldValue = this.value;\n            this.value = verifiedValue;\n            this.setDirty(this.calculateDirty(this.baseValue, verifiedValue));\n            this.valueChangeBus.trigger({ 'oldValue': oldValue, 'newValue': verifiedValue });\n        };\n        ClientAttribute.prototype.calculateDirty = function (baseValue, value) {\n            if (baseValue == null) {\n                return value != null;\n            }\n            else {\n                return baseValue != value;\n            }\n        };\n        ClientAttribute.prototype.updateDirty = function () {\n            this.setDirty(this.calculateDirty(this.baseValue, this.value));\n        };\n        ClientAttribute.prototype.setDirty = function (dirty) {\n            var oldVal = this.dirty;\n            this.dirty = dirty;\n            this.dirtyValueChangeBus.trigger({ 'oldValue': oldVal, 'newValue': this.dirty });\n            if (this.presentationModel)\n                this.presentationModel.updateDirty();\n        };\n        ClientAttribute.prototype.setQualifier = function (newQualifier) {\n            if (this.qualifier == newQualifier)\n                return;\n            var oldQualifier = this.qualifier;\n            this.qualifier = newQualifier;\n            this.qualifierChangeBus.trigger({ 'oldValue': oldQualifier, 'newValue': newQualifier });\n        };\n        ClientAttribute.prototype.getQualifier = function () {\n            return this.qualifier;\n        };\n        ClientAttribute.prototype.setBaseValue = function (baseValue) {\n            if (this.baseValue == baseValue)\n                return;\n            var oldBaseValue = this.baseValue;\n            this.baseValue = baseValue;\n            this.setDirty(this.calculateDirty(baseValue, this.value));\n            this.baseValueChangeBus.trigger({ 'oldValue': oldBaseValue, 'newValue': baseValue });\n        };\n        ClientAttribute.prototype.rebase = function () {\n            this.setBaseValue(this.value);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.prototype.reset = function () {\n            this.setValue(this.baseValue);\n            this.setDirty(false); // this is not superfluous!\n        };\n        ClientAttribute.checkValue = function (value) {\n            if (value == null || value == undefined) {\n                return null;\n            }\n            var result = value;\n            if (result instanceof String || result instanceof Boolean || result instanceof Number) {\n                result = value.valueOf();\n            }\n            if (result instanceof ClientAttribute) {\n                console.log(\"An Attribute may not itself contain an attribute as a value. Assuming you forgot to call value.\");\n                result = this.checkValue(value.value);\n            }\n            var ok = false;\n            if (this.SUPPORTED_VALUE_TYPES.indexOf(typeof result) > -1 || result instanceof Date) {\n                ok = true;\n            }\n            if (!ok) {\n                throw new Error(\"Attribute values of this type are not allowed: \" + typeof value);\n            }\n            return result;\n        };\n        ClientAttribute.prototype.onValueChange = function (eventHandler) {\n            this.valueChangeBus.onEvent(eventHandler);\n            eventHandler({ \"oldValue\": this.value, \"newValue\": this.value });\n        };\n        ClientAttribute.prototype.onQualifierChange = function (eventHandler) {\n            this.qualifierChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onDirty = function (eventHandler) {\n            this.dirtyValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.onBaseValueChange = function (eventHandler) {\n            this.baseValueChangeBus.onEvent(eventHandler);\n        };\n        ClientAttribute.prototype.syncWith = function (sourceAttribute) {\n            if (sourceAttribute) {\n                this.setQualifier(sourceAttribute.getQualifier()); // sequence is important\n                this.setBaseValue(sourceAttribute.getBaseValue());\n                this.setValue(sourceAttribute.value);\n            }\n        };\n        ClientAttribute.SUPPORTED_VALUE_TYPES = [\"string\", \"number\", \"boolean\"];\n        ClientAttribute.clientAttributeInstanceCount = 0;\n        return ClientAttribute;\n    })();\n    opendolphin.ClientAttribute = ClientAttribute;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var ValueChangedCommand = (function (_super) {\n        __extends(ValueChangedCommand, _super);\n        function ValueChangedCommand(attributeId, oldValue, newValue) {\n            _super.call(this);\n            this.attributeId = attributeId;\n            this.oldValue = oldValue;\n            this.newValue = newValue;\n            this.id = \"ValueChanged\";\n            this.className = \"org.opendolphin.core.comm.ValueChangedCommand\";\n        }\n        return ValueChangedCommand;\n    })(opendolphin.Command);\n    opendolphin.ValueChangedCommand = ValueChangedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var NamedCommand = (function (_super) {\n        __extends(NamedCommand, _super);\n        function NamedCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.NamedCommand\";\n        }\n        return NamedCommand;\n    })(opendolphin.Command);\n    opendolphin.NamedCommand = NamedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var EmptyNotification = (function (_super) {\n        __extends(EmptyNotification, _super);\n        function EmptyNotification() {\n            _super.call(this);\n            this.id = \"Empty\";\n            this.className = \"org.opendolphin.core.comm.EmptyNotification\";\n        }\n        return EmptyNotification;\n    })(opendolphin.Command);\n    opendolphin.EmptyNotification = EmptyNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"NamedCommand.ts\"/>\n/// <reference path=\"EmptyNotification.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /** A Batcher that does no batching but merely takes the first element of the queue as the single item in the batch */\n    var NoCommandBatcher = (function () {\n        function NoCommandBatcher() {\n        }\n        NoCommandBatcher.prototype.batch = function (queue) {\n            return [queue.shift()];\n        };\n        return NoCommandBatcher;\n    })();\n    opendolphin.NoCommandBatcher = NoCommandBatcher;\n    /** A batcher that batches the blinds (commands with no callback) and optionally also folds value changes */\n    var BlindCommandBatcher = (function () {\n        /** folding: whether we should try folding ValueChangedCommands */\n        function BlindCommandBatcher(folding, maxBatchSize) {\n            if (folding === void 0) { folding = true; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.folding = folding;\n            this.maxBatchSize = maxBatchSize;\n        }\n        BlindCommandBatcher.prototype.batch = function (queue) {\n            var result = [];\n            this.processNext(this.maxBatchSize, queue, result); // do not batch more than this.maxBatchSize commands to avoid stack overflow on recursion.\n            return result;\n        };\n        // recursive impl method to side-effect both queue and batch\n        BlindCommandBatcher.prototype.processNext = function (maxBatchSize, queue, batch) {\n            if (queue.length < 1 || maxBatchSize < 1)\n                return;\n            var candidate = queue.shift();\n            if (this.folding && candidate.command instanceof opendolphin.ValueChangedCommand && (!candidate.handler)) {\n                var found = null;\n                var canCmd = candidate.command;\n                for (var i = 0; i < batch.length && found == null; i++) {\n                    if (batch[i].command instanceof opendolphin.ValueChangedCommand) {\n                        var batchCmd = batch[i].command;\n                        if (canCmd.attributeId == batchCmd.attributeId && batchCmd.newValue == canCmd.oldValue) {\n                            found = batchCmd;\n                        }\n                    }\n                }\n                if (found) {\n                    found.newValue = canCmd.newValue; // change existing value, do not batch\n                }\n                else {\n                    batch.push(candidate); // we cannot merge, so batch the candidate\n                }\n            }\n            else {\n                batch.push(candidate);\n            }\n            if (!candidate.handler &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.NamedCommand\") &&\n                !(candidate.command['className'] == \"org.opendolphin.core.comm.EmptyNotification\") // and no unknown client side effect\n            ) {\n                this.processNext(maxBatchSize - 1, queue, batch); // then we can proceed with batching\n            }\n        };\n        return BlindCommandBatcher;\n    })();\n    opendolphin.BlindCommandBatcher = BlindCommandBatcher;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Codec = (function () {\n        function Codec() {\n        }\n        Codec.prototype.encode = function (commands) {\n            return JSON.stringify(commands); // todo dk: look for possible API support for character encoding\n        };\n        Codec.prototype.decode = function (transmitted) {\n            if (typeof transmitted == 'string') {\n                return JSON.parse(transmitted);\n            }\n            else {\n                return transmitted;\n            }\n        };\n        return Codec;\n    })();\n    opendolphin.Codec = Codec;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var SignalCommand = (function (_super) {\n        __extends(SignalCommand, _super);\n        function SignalCommand(name) {\n            _super.call(this);\n            this.id = name;\n            this.className = \"org.opendolphin.core.comm.SignalCommand\";\n        }\n        return SignalCommand;\n    })(opendolphin.Command);\n    opendolphin.SignalCommand = SignalCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var CreatePresentationModelCommand = (function (_super) {\n        __extends(CreatePresentationModelCommand, _super);\n        function CreatePresentationModelCommand(presentationModel) {\n            _super.call(this);\n            this.attributes = [];\n            this.clientSideOnly = false;\n            this.id = \"CreatePresentationModel\";\n            this.className = \"org.opendolphin.core.comm.CreatePresentationModelCommand\";\n            this.pmId = presentationModel.id;\n            this.pmType = presentationModel.presentationModelType;\n            var attrs = this.attributes;\n            presentationModel.getAttributes().forEach(function (attr) {\n                attrs.push({\n                    propertyName: attr.propertyName,\n                    id: attr.id,\n                    qualifier: attr.getQualifier(),\n                    value: attr.getValue(),\n                    tag: attr.tag\n                });\n            });\n        }\n        return CreatePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.CreatePresentationModelCommand = CreatePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\nvar opendolphin;\n(function (opendolphin) {\n    var Map = (function () {\n        function Map() {\n            this.keys = [];\n            this.data = [];\n        }\n        Map.prototype.put = function (key, value) {\n            if (!this.containsKey(key)) {\n                this.keys.push(key);\n            }\n            this.data[this.keys.indexOf(key)] = value;\n        };\n        Map.prototype.get = function (key) {\n            return this.data[this.keys.indexOf(key)];\n        };\n        Map.prototype.remove = function (key) {\n            if (this.containsKey(key)) {\n                var index = this.keys.indexOf(key);\n                this.keys.splice(index, 1);\n                this.data.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        Map.prototype.isEmpty = function () {\n            return this.keys.length == 0;\n        };\n        Map.prototype.length = function () {\n            return this.keys.length;\n        };\n        Map.prototype.forEach = function (handler) {\n            for (var i = 0; i < this.keys.length; i++) {\n                handler(this.keys[i], this.data[i]);\n            }\n        };\n        Map.prototype.containsKey = function (key) {\n            return this.keys.indexOf(key) > -1;\n        };\n        Map.prototype.containsValue = function (value) {\n            return this.data.indexOf(value) > -1;\n        };\n        Map.prototype.values = function () {\n            return this.data.slice(0);\n        };\n        Map.prototype.keySet = function () {\n            return this.keys.slice(0);\n        };\n        return Map;\n    })();\n    opendolphin.Map = Map;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedAllPresentationModelsOfTypeNotification = (function (_super) {\n        __extends(DeletedAllPresentationModelsOfTypeNotification, _super);\n        function DeletedAllPresentationModelsOfTypeNotification(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeletedAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeletedAllPresentationModelsOfTypeNotification\";\n        }\n        return DeletedAllPresentationModelsOfTypeNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedAllPresentationModelsOfTypeNotification = DeletedAllPresentationModelsOfTypeNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletedPresentationModelNotification = (function (_super) {\n        __extends(DeletedPresentationModelNotification, _super);\n        function DeletedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletedPresentationModelNotification\";\n        }\n        return DeletedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.DeletedPresentationModelNotification = DeletedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"CreatePresentationModelCommand.ts\"/>\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\"/>\n/// <reference path=\"ChangeAttributeMetadataCommand.ts\"/>\n/// <reference path=\"Attribute.ts\"/>\n/// <reference path=\"Map.ts\"/>\n/// <reference path=\"DeletedAllPresentationModelsOfTypeNotification.ts\"/>\n/// <reference path=\"EventBus.ts\"/>\n/// <reference path=\"ClientPresentationModel.ts\"/>\n/// <reference path=\"DeletedPresentationModelNotification.ts\"/>\n/// <reference path=\"BaseValueChangedCommand.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    (function (Type) {\n        Type[Type[\"ADDED\"] = 'ADDED'] = \"ADDED\";\n        Type[Type[\"REMOVED\"] = 'REMOVED'] = \"REMOVED\";\n    })(opendolphin.Type || (opendolphin.Type = {}));\n    var Type = opendolphin.Type;\n    var ClientModelStore = (function () {\n        function ClientModelStore(clientDolphin) {\n            this.clientDolphin = clientDolphin;\n            this.presentationModels = new opendolphin.Map();\n            this.presentationModelsPerType = new opendolphin.Map();\n            this.attributesPerId = new opendolphin.Map();\n            this.attributesPerQualifier = new opendolphin.Map();\n            this.modelStoreChangeBus = new opendolphin.EventBus();\n        }\n        ClientModelStore.prototype.getClientDolphin = function () {\n            return this.clientDolphin;\n        };\n        ClientModelStore.prototype.registerModel = function (model) {\n            var _this = this;\n            if (model.clientSideOnly) {\n                return;\n            }\n            var connector = this.clientDolphin.getClientConnector();\n            var createPMCommand = new opendolphin.CreatePresentationModelCommand(model);\n            connector.send(createPMCommand, null);\n            model.getAttributes().forEach(function (attribute) {\n                _this.registerAttribute(attribute);\n            });\n        };\n        ClientModelStore.prototype.registerAttribute = function (attribute) {\n            var _this = this;\n            this.addAttributeById(attribute);\n            if (attribute.getQualifier()) {\n                this.addAttributeByQualifier(attribute);\n            }\n            // whenever an attribute changes its value, the server needs to be notified\n            // and all other attributes with the same qualifier are given the same value\n            attribute.onValueChange(function (evt) {\n                var valueChangeCommand = new opendolphin.ValueChangedCommand(attribute.id, evt.oldValue, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(valueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setValue(attribute.getValue());\n                    });\n                }\n            });\n            // all attributes with the same qualifier should have the same base value\n            attribute.onBaseValueChange(function (evt) {\n                var baseValueChangeCommand = new opendolphin.BaseValueChangedCommand(attribute.id);\n                _this.clientDolphin.getClientConnector().send(baseValueChangeCommand, null);\n                if (attribute.getQualifier()) {\n                    var attrs = _this.findAttributesByFilter(function (attr) {\n                        return attr !== attribute && attr.getQualifier() == attribute.getQualifier();\n                    });\n                    attrs.forEach(function (attr) {\n                        attr.setBaseValue(attribute.getBaseValue());\n                    });\n                }\n            });\n            attribute.onQualifierChange(function (evt) {\n                var changeAttrMetadataCmd = new opendolphin.ChangeAttributeMetadataCommand(attribute.id, opendolphin.Attribute.QUALIFIER_PROPERTY, evt.newValue);\n                _this.clientDolphin.getClientConnector().send(changeAttrMetadataCmd, null);\n            });\n        };\n        ClientModelStore.prototype.add = function (model) {\n            if (!model) {\n                return false;\n            }\n            if (this.presentationModels.containsKey(model.id)) {\n                console.log(\"There already is a PM with id \" + model.id);\n            }\n            var added = false;\n            if (!this.presentationModels.containsValue(model)) {\n                this.presentationModels.put(model.id, model);\n                this.addPresentationModelByType(model);\n                this.registerModel(model);\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.ADDED, 'clientPresentationModel': model });\n                added = true;\n            }\n            return added;\n        };\n        ClientModelStore.prototype.remove = function (model) {\n            var _this = this;\n            if (!model) {\n                return false;\n            }\n            var removed = false;\n            if (this.presentationModels.containsValue(model)) {\n                this.removePresentationModelByType(model);\n                this.presentationModels.remove(model.id);\n                model.getAttributes().forEach(function (attribute) {\n                    _this.removeAttributeById(attribute);\n                    if (attribute.getQualifier()) {\n                        _this.removeAttributeByQualifier(attribute);\n                    }\n                });\n                this.modelStoreChangeBus.trigger({ 'eventType': Type.REMOVED, 'clientPresentationModel': model });\n                removed = true;\n            }\n            return removed;\n        };\n        ClientModelStore.prototype.findAttributesByFilter = function (filter) {\n            var matches = [];\n            this.presentationModels.forEach(function (key, model) {\n                model.getAttributes().forEach(function (attr) {\n                    if (filter(attr)) {\n                        matches.push(attr);\n                    }\n                });\n            });\n            return matches;\n        };\n        ClientModelStore.prototype.addPresentationModelByType = function (model) {\n            if (!model) {\n                return;\n            }\n            var type = model.presentationModelType;\n            if (!type) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(type);\n            if (!presentationModels) {\n                presentationModels = [];\n                this.presentationModelsPerType.put(type, presentationModels);\n            }\n            if (!(presentationModels.indexOf(model) > -1)) {\n                presentationModels.push(model);\n            }\n        };\n        ClientModelStore.prototype.removePresentationModelByType = function (model) {\n            if (!model || !(model.presentationModelType)) {\n                return;\n            }\n            var presentationModels = this.presentationModelsPerType.get(model.presentationModelType);\n            if (!presentationModels) {\n                return;\n            }\n            if (presentationModels.length > -1) {\n                presentationModels.splice(presentationModels.indexOf(model), 1);\n            }\n            if (presentationModels.length === 0) {\n                this.presentationModelsPerType.remove(model.presentationModelType);\n            }\n        };\n        ClientModelStore.prototype.listPresentationModelIds = function () {\n            return this.presentationModels.keySet().slice(0);\n        };\n        ClientModelStore.prototype.listPresentationModels = function () {\n            return this.presentationModels.values();\n        };\n        ClientModelStore.prototype.findPresentationModelById = function (id) {\n            return this.presentationModels.get(id);\n        };\n        ClientModelStore.prototype.findAllPresentationModelByType = function (type) {\n            if (!type || !this.presentationModelsPerType.containsKey(type)) {\n                return [];\n            }\n            return this.presentationModelsPerType.get(type).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            var _this = this;\n            var presentationModels = this.findAllPresentationModelByType(presentationModelType);\n            presentationModels.forEach(function (pm) {\n                _this.deletePresentationModel(pm, false);\n            });\n            this.clientDolphin.getClientConnector().send(new opendolphin.DeletedAllPresentationModelsOfTypeNotification(presentationModelType), undefined);\n        };\n        ClientModelStore.prototype.deletePresentationModel = function (model, notify) {\n            if (!model) {\n                return;\n            }\n            if (this.containsPresentationModel(model.id)) {\n                this.remove(model);\n                if (!notify || model.clientSideOnly) {\n                    return;\n                }\n                this.clientDolphin.getClientConnector().send(new opendolphin.DeletedPresentationModelNotification(model.id), null);\n            }\n        };\n        ClientModelStore.prototype.containsPresentationModel = function (id) {\n            return this.presentationModels.containsKey(id);\n        };\n        ClientModelStore.prototype.addAttributeById = function (attribute) {\n            if (!attribute || this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.put(attribute.id, attribute);\n        };\n        ClientModelStore.prototype.removeAttributeById = function (attribute) {\n            if (!attribute || !this.attributesPerId.containsKey(attribute.id)) {\n                return;\n            }\n            this.attributesPerId.remove(attribute.id);\n        };\n        ClientModelStore.prototype.findAttributeById = function (id) {\n            return this.attributesPerId.get(id);\n        };\n        ClientModelStore.prototype.addAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                attributes = [];\n                this.attributesPerQualifier.put(attribute.getQualifier(), attributes);\n            }\n            if (!(attributes.indexOf(attribute) > -1)) {\n                attributes.push(attribute);\n            }\n        };\n        ClientModelStore.prototype.removeAttributeByQualifier = function (attribute) {\n            if (!attribute || !attribute.getQualifier()) {\n                return;\n            }\n            var attributes = this.attributesPerQualifier.get(attribute.getQualifier());\n            if (!attributes) {\n                return;\n            }\n            if (attributes.length > -1) {\n                attributes.splice(attributes.indexOf(attribute), 1);\n            }\n            if (attributes.length === 0) {\n                this.attributesPerQualifier.remove(attribute.getQualifier());\n            }\n        };\n        ClientModelStore.prototype.findAllAttributesByQualifier = function (qualifier) {\n            if (!qualifier || !this.attributesPerQualifier.containsKey(qualifier)) {\n                return [];\n            }\n            return this.attributesPerQualifier.get(qualifier).slice(0); // slice is used to clone the array\n        };\n        ClientModelStore.prototype.onModelStoreChange = function (eventHandler) {\n            this.modelStoreChangeBus.onEvent(eventHandler);\n        };\n        ClientModelStore.prototype.onModelStoreChangeForType = function (presentationModelType, eventHandler) {\n            this.modelStoreChangeBus.onEvent(function (pmStoreEvent) {\n                if (pmStoreEvent.clientPresentationModel.presentationModelType == presentationModelType) {\n                    eventHandler(pmStoreEvent);\n                }\n            });\n        };\n        return ClientModelStore;\n    })();\n    opendolphin.ClientModelStore = ClientModelStore;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"EmptyNotification.ts\" />\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientModelStore.ts\" />\n/// <reference path=\"ClientConnector.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"AttributeCreatedNotification.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientDolphin = (function () {\n        function ClientDolphin() {\n        }\n        ClientDolphin.prototype.setClientConnector = function (clientConnector) {\n            this.clientConnector = clientConnector;\n        };\n        ClientDolphin.prototype.getClientConnector = function () {\n            return this.clientConnector;\n        };\n        ClientDolphin.prototype.send = function (commandName, onFinished) {\n            this.clientConnector.send(new opendolphin.NamedCommand(commandName), onFinished);\n        };\n        ClientDolphin.prototype.sendEmpty = function (onFinished) {\n            this.clientConnector.send(new opendolphin.EmptyNotification(), onFinished);\n        };\n        // factory method for attributes\n        ClientDolphin.prototype.attribute = function (propertyName, qualifier, value, tag) {\n            return new opendolphin.ClientAttribute(propertyName, qualifier, value, tag);\n        };\n        // factory method for presentation models\n        ClientDolphin.prototype.presentationModel = function (id, type) {\n            var attributes = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                attributes[_i - 2] = arguments[_i];\n            }\n            var model = new opendolphin.ClientPresentationModel(id, type);\n            if (attributes && attributes.length > 0) {\n                attributes.forEach(function (attribute) {\n                    model.addAttribute(attribute);\n                });\n            }\n            this.getClientModelStore().add(model);\n            return model;\n        };\n        ClientDolphin.prototype.setClientModelStore = function (clientModelStore) {\n            this.clientModelStore = clientModelStore;\n        };\n        ClientDolphin.prototype.getClientModelStore = function () {\n            return this.clientModelStore;\n        };\n        ClientDolphin.prototype.listPresentationModelIds = function () {\n            return this.getClientModelStore().listPresentationModelIds();\n        };\n        ClientDolphin.prototype.listPresentationModels = function () {\n            return this.getClientModelStore().listPresentationModels();\n        };\n        ClientDolphin.prototype.findAllPresentationModelByType = function (presentationModelType) {\n            return this.getClientModelStore().findAllPresentationModelByType(presentationModelType);\n        };\n        ClientDolphin.prototype.getAt = function (id) {\n            return this.findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.findPresentationModelById = function (id) {\n            return this.getClientModelStore().findPresentationModelById(id);\n        };\n        ClientDolphin.prototype.deletePresentationModel = function (modelToDelete) {\n            this.getClientModelStore().deletePresentationModel(modelToDelete, true);\n        };\n        ClientDolphin.prototype.deleteAllPresentationModelOfType = function (presentationModelType) {\n            this.getClientModelStore().deleteAllPresentationModelOfType(presentationModelType);\n        };\n        ClientDolphin.prototype.updatePresentationModelQualifier = function (presentationModel) {\n            var _this = this;\n            presentationModel.getAttributes().forEach(function (sourceAttribute) {\n                _this.updateAttributeQualifier(sourceAttribute);\n            });\n        };\n        ClientDolphin.prototype.updateAttributeQualifier = function (sourceAttribute) {\n            if (!sourceAttribute.getQualifier())\n                return;\n            var attributes = this.getClientModelStore().findAllAttributesByQualifier(sourceAttribute.getQualifier());\n            attributes.forEach(function (targetAttribute) {\n                if (targetAttribute.tag != sourceAttribute.tag)\n                    return; // attributes with same qualifier and tag\n                targetAttribute.setValue(sourceAttribute.getValue()); // should always have the same value\n                targetAttribute.setBaseValue(sourceAttribute.getBaseValue()); // and same base value and so dirtyness\n            });\n        };\n        ClientDolphin.prototype.tag = function (presentationModel, propertyName, value, tag) {\n            var clientAttribute = new opendolphin.ClientAttribute(propertyName, null, value, tag);\n            this.addAttributeToModel(presentationModel, clientAttribute);\n            return clientAttribute;\n        };\n        ClientDolphin.prototype.addAttributeToModel = function (presentationModel, clientAttribute) {\n            presentationModel.addAttribute(clientAttribute);\n            this.getClientModelStore().registerAttribute(clientAttribute);\n            if (!presentationModel.clientSideOnly) {\n                this.clientConnector.send(new opendolphin.AttributeCreatedNotification(presentationModel.id, clientAttribute.id, clientAttribute.propertyName, clientAttribute.getValue(), clientAttribute.getQualifier(), clientAttribute.tag), null);\n            }\n        };\n        ////// push support ///////\n        ClientDolphin.prototype.startPushListening = function (pushActionName, releaseActionName) {\n            this.clientConnector.setPushListener(new opendolphin.NamedCommand(pushActionName));\n            this.clientConnector.setReleaseCommand(new opendolphin.SignalCommand(releaseActionName));\n            this.clientConnector.setPushEnabled(true);\n            this.clientConnector.listen();\n        };\n        ClientDolphin.prototype.stopPushListening = function () {\n            this.clientConnector.setPushEnabled(false);\n        };\n        return ClientDolphin;\n    })();\n    opendolphin.ClientDolphin = ClientDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var PresentationModelResetedCommand = (function (_super) {\n        __extends(PresentationModelResetedCommand, _super);\n        function PresentationModelResetedCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'PresentationModelReseted';\n            this.className = \"org.opendolphin.core.comm.PresentationModelResetedCommand\";\n        }\n        return PresentationModelResetedCommand;\n    })(opendolphin.Command);\n    opendolphin.PresentationModelResetedCommand = PresentationModelResetedCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SavedPresentationModelNotification = (function (_super) {\n        __extends(SavedPresentationModelNotification, _super);\n        function SavedPresentationModelNotification(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'SavedPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SavedPresentationModelNotification\";\n        }\n        return SavedPresentationModelNotification;\n    })(opendolphin.Command);\n    opendolphin.SavedPresentationModelNotification = SavedPresentationModelNotification;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var InitializeAttributeCommand = (function (_super) {\n        __extends(InitializeAttributeCommand, _super);\n        function InitializeAttributeCommand(pmId, pmType, propertyName, qualifier, newValue, tag) {\n            if (tag === void 0) { tag = opendolphin.Tag.value(); }\n            _super.call(this);\n            this.pmId = pmId;\n            this.pmType = pmType;\n            this.propertyName = propertyName;\n            this.qualifier = qualifier;\n            this.newValue = newValue;\n            this.tag = tag;\n            this.id = 'InitializeAttribute';\n            this.className = \"org.opendolphin.core.comm.InitializeAttributeCommand\";\n        }\n        return InitializeAttributeCommand;\n    })(opendolphin.Command);\n    opendolphin.InitializeAttributeCommand = InitializeAttributeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var SwitchPresentationModelCommand = (function (_super) {\n        __extends(SwitchPresentationModelCommand, _super);\n        function SwitchPresentationModelCommand(pmId, sourcePmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.sourcePmId = sourcePmId;\n            this.id = 'SwitchPresentationModel';\n            this.className = \"org.opendolphin.core.comm.SwitchPresentationModelCommand\";\n        }\n        return SwitchPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.SwitchPresentationModelCommand = SwitchPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeleteAllPresentationModelsOfTypeCommand = (function (_super) {\n        __extends(DeleteAllPresentationModelsOfTypeCommand, _super);\n        function DeleteAllPresentationModelsOfTypeCommand(pmType) {\n            _super.call(this);\n            this.pmType = pmType;\n            this.id = 'DeleteAllPresentationModelsOfType';\n            this.className = \"org.opendolphin.core.comm.DeleteAllPresentationModelsOfTypeCommand\";\n        }\n        return DeleteAllPresentationModelsOfTypeCommand;\n    })(opendolphin.Command);\n    opendolphin.DeleteAllPresentationModelsOfTypeCommand = DeleteAllPresentationModelsOfTypeCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DeletePresentationModelCommand = (function (_super) {\n        __extends(DeletePresentationModelCommand, _super);\n        function DeletePresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'DeletePresentationModel';\n            this.className = \"org.opendolphin.core.comm.DeletePresentationModelCommand\";\n        }\n        return DeletePresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.DeletePresentationModelCommand = DeletePresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var DataCommand = (function (_super) {\n        __extends(DataCommand, _super);\n        function DataCommand(data) {\n            _super.call(this);\n            this.data = data;\n            this.id = \"Data\";\n            this.className = \"org.opendolphin.core.comm.DataCommand\";\n        }\n        return DataCommand;\n    })(opendolphin.Command);\n    opendolphin.DataCommand = DataCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientPresentationModel.ts\" />\n/// <reference path=\"Command.ts\" />\n/// <reference path=\"CommandBatcher.ts\" />\n/// <reference path=\"Codec.ts\" />\n/// <reference path=\"CallNamedActionCommand.ts\" />\n/// <reference path=\"ClientDolphin.ts\" />\n/// <reference path=\"AttributeMetadataChangedCommand.ts\" />\n/// <reference path=\"ClientAttribute.ts\" />\n/// <reference path=\"PresentationModelResetedCommand.ts\" />\n/// <reference path=\"SavedPresentationModelNotification.ts\" />\n/// <reference path=\"InitializeAttributeCommand.ts\" />\n/// <reference path=\"SwitchPresentationModelCommand.ts\" />\n/// <reference path=\"BaseValueChangedCommand.ts\" />\n/// <reference path=\"ValueChangedCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeleteAllPresentationModelsOfTypeCommand.ts\" />\n/// <reference path=\"DeletePresentationModelCommand.ts\" />\n/// <reference path=\"CreatePresentationModelCommand.ts\" />\n/// <reference path=\"DataCommand.ts\" />\n/// <reference path=\"NamedCommand.ts\" />\n/// <reference path=\"SignalCommand.ts\" />\n/// <reference path=\"Tag.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ClientConnector = (function () {\n        function ClientConnector(transmitter, clientDolphin, slackMS, maxBatchSize) {\n            if (slackMS === void 0) { slackMS = 0; }\n            if (maxBatchSize === void 0) { maxBatchSize = 50; }\n            this.commandQueue = [];\n            this.currentlySending = false;\n            this.pushEnabled = false;\n            this.waiting = false;\n            this.transmitter = transmitter;\n            this.clientDolphin = clientDolphin;\n            this.slackMS = slackMS;\n            this.codec = new opendolphin.Codec();\n            this.commandBatcher = new opendolphin.BlindCommandBatcher(true, maxBatchSize);\n        }\n        ClientConnector.prototype.setCommandBatcher = function (newBatcher) {\n            this.commandBatcher = newBatcher;\n        };\n        ClientConnector.prototype.setPushEnabled = function (enabled) {\n            this.pushEnabled = enabled;\n        };\n        ClientConnector.prototype.setPushListener = function (newListener) {\n            this.pushListener = newListener;\n        };\n        ClientConnector.prototype.setReleaseCommand = function (newCommand) {\n            this.releaseCommand = newCommand;\n        };\n        ClientConnector.prototype.send = function (command, onFinished) {\n            this.commandQueue.push({ command: command, handler: onFinished });\n            if (this.currentlySending) {\n                this.release(); // there is not point in releasing if we do not send atm\n                return;\n            }\n            this.doSendNext();\n        };\n        ClientConnector.prototype.doSendNext = function () {\n            var _this = this;\n            if (this.commandQueue.length < 1) {\n                if (this.pushEnabled) {\n                    this.enqueuePushCommand();\n                }\n                else {\n                    this.currentlySending = false;\n                    return;\n                }\n            }\n            this.currentlySending = true;\n            var cmdsAndHandlers = this.commandBatcher.batch(this.commandQueue);\n            var callback = cmdsAndHandlers[cmdsAndHandlers.length - 1].handler;\n            var commands = cmdsAndHandlers.map(function (cah) { return cah.command; });\n            this.transmitter.transmit(commands, function (response) {\n                //console.log(\"server response: [\" + response.map(it => it.id).join(\", \") + \"] \");\n                var touchedPMs = [];\n                response.forEach(function (command) {\n                    var touched = _this.handle(command);\n                    if (touched)\n                        touchedPMs.push(touched);\n                });\n                if (callback) {\n                    callback.onFinished(touchedPMs); // todo: make them unique?\n                }\n                // recursive call: fetch the next in line but allow a bit of slack such that\n                // document events can fire, rendering is done and commands can batch up\n                setTimeout(function () { return _this.doSendNext(); }, _this.slackMS);\n            });\n        };\n        ClientConnector.prototype.handle = function (command) {\n            if (command.id == \"Data\") {\n                return this.handleDataCommand(command);\n            }\n            else if (command.id == \"DeletePresentationModel\") {\n                return this.handleDeletePresentationModelCommand(command);\n            }\n            else if (command.id == \"DeleteAllPresentationModelsOfType\") {\n                return this.handleDeleteAllPresentationModelOfTypeCommand(command);\n            }\n            else if (command.id == \"CreatePresentationModel\") {\n                return this.handleCreatePresentationModelCommand(command);\n            }\n            else if (command.id == \"ValueChanged\") {\n                return this.handleValueChangedCommand(command);\n            }\n            else if (command.id == \"BaseValueChanged\") {\n                return this.handleBaseValueChangedCommand(command);\n            }\n            else if (command.id == \"SwitchPresentationModel\") {\n                return this.handleSwitchPresentationModelCommand(command);\n            }\n            else if (command.id == \"InitializeAttribute\") {\n                return this.handleInitializeAttributeCommand(command);\n            }\n            else if (command.id == \"SavedPresentationModel\") {\n                return this.handleSavedPresentationModelNotification(command);\n            }\n            else if (command.id == \"PresentationModelReseted\") {\n                return this.handlePresentationModelResetedCommand(command);\n            }\n            else if (command.id == \"AttributeMetadataChanged\") {\n                return this.handleAttributeMetadataChangedCommand(command);\n            }\n            else if (command.id == \"CallNamedAction\") {\n                return this.handleCallNamedActionCommand(command);\n            }\n            else {\n                console.log(\"Cannot handle, unknown command \" + command);\n            }\n            return null;\n        };\n        ClientConnector.prototype.handleDataCommand = function (serverCommand) {\n            return serverCommand.data;\n        };\n        ClientConnector.prototype.handleDeletePresentationModelCommand = function (serverCommand) {\n            var model = this.clientDolphin.findPresentationModelById(serverCommand.pmId);\n            if (!model)\n                return null;\n            this.clientDolphin.getClientModelStore().deletePresentationModel(model, true);\n            return model;\n        };\n        ClientConnector.prototype.handleDeleteAllPresentationModelOfTypeCommand = function (serverCommand) {\n            this.clientDolphin.deleteAllPresentationModelOfType(serverCommand.pmType);\n            return null;\n        };\n        ClientConnector.prototype.handleCreatePresentationModelCommand = function (serverCommand) {\n            var _this = this;\n            if (this.clientDolphin.getClientModelStore().containsPresentationModel(serverCommand.pmId)) {\n                throw new Error(\"There already is a presentation model with id \" + serverCommand.pmId + \"  known to the client.\");\n            }\n            var attributes = [];\n            serverCommand.attributes.forEach(function (attr) {\n                var clientAttribute = _this.clientDolphin.attribute(attr.propertyName, attr.qualifier, attr.value, attr.tag ? attr.tag : opendolphin.Tag.value());\n                clientAttribute.setBaseValue(attr.baseValue);\n                if (attr.id && attr.id.match(\".*S$\")) {\n                    clientAttribute.id = attr.id;\n                }\n                attributes.push(clientAttribute);\n            });\n            var clientPm = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n            clientPm.addAttributes(attributes);\n            if (serverCommand.clientSideOnly) {\n                clientPm.clientSideOnly = true;\n            }\n            this.clientDolphin.getClientModelStore().add(clientPm);\n            this.clientDolphin.updatePresentationModelQualifier(clientPm);\n            clientPm.updateAttributeDirtyness();\n            clientPm.updateDirty();\n            return clientPm;\n        };\n        ClientConnector.prototype.handleValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot update old value \" + serverCommand.oldValue + \" to new value \" + serverCommand.newValue);\n                return null;\n            }\n            if (clientAttribute.getValue() == serverCommand.newValue) {\n                //console.log(\"nothing to do. new value == old value\");\n                return null;\n            }\n            // Below was the code that would enforce that value changes only appear when the proper oldValue is given.\n            // While that seemed appropriate at first, there are actually valid command sequences where the oldValue is not properly set.\n            // We leave the commented code in the codebase to allow for logging/debugging such cases.\n            //            if(clientAttribute.getValue() != serverCommand.oldValue) {\n            //                console.log(\"attribute with id \"+serverCommand.attributeId+\" and value \" + clientAttribute.getValue() +\n            //                            \" was set to value \" + serverCommand.newValue + \" even though the change was based on an outdated old value of \" + serverCommand.oldValue);\n            //            }\n            clientAttribute.setValue(serverCommand.newValue);\n            return null;\n        };\n        ClientConnector.prototype.handleBaseValueChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute) {\n                console.log(\"attribute with id \" + serverCommand.attributeId + \" not found, cannot set base value.\");\n                return null;\n            }\n            clientAttribute.rebase();\n            return null;\n        };\n        ClientConnector.prototype.handleSwitchPresentationModelCommand = function (serverCommand) {\n            var switchPm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!switchPm) {\n                console.log(\"switch model with id \" + serverCommand.pmId + \" not found, cannot switch.\");\n                return null;\n            }\n            var sourcePm = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.sourcePmId);\n            if (!sourcePm) {\n                console.log(\"source model with id \" + serverCommand.sourcePmId + \" not found, cannot switch.\");\n                return null;\n            }\n            switchPm.syncWith(sourcePm);\n            return switchPm;\n        };\n        ClientConnector.prototype.handleInitializeAttributeCommand = function (serverCommand) {\n            var attribute = new opendolphin.ClientAttribute(serverCommand.propertyName, serverCommand.qualifier, serverCommand.newValue, serverCommand.tag);\n            if (serverCommand.qualifier) {\n                var attributesCopy = this.clientDolphin.getClientModelStore().findAllAttributesByQualifier(serverCommand.qualifier);\n                if (attributesCopy) {\n                    if (!serverCommand.newValue) {\n                        var attr = attributesCopy.shift();\n                        if (attr) {\n                            attribute.setValue(attr.getValue());\n                        }\n                    }\n                    else {\n                        attributesCopy.forEach(function (attr) {\n                            attr.setValue(attribute.getValue());\n                        });\n                    }\n                }\n            }\n            var presentationModel;\n            if (serverCommand.pmId) {\n                presentationModel = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            }\n            if (!presentationModel) {\n                presentationModel = new opendolphin.ClientPresentationModel(serverCommand.pmId, serverCommand.pmType);\n                this.clientDolphin.getClientModelStore().add(presentationModel);\n            }\n            this.clientDolphin.addAttributeToModel(presentationModel, attribute);\n            this.clientDolphin.updatePresentationModelQualifier(presentationModel);\n            return presentationModel;\n        };\n        ClientConnector.prototype.handleSavedPresentationModelNotification = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot rebase.\");\n                return null;\n            }\n            model.rebase();\n            return model;\n        };\n        ClientConnector.prototype.handlePresentationModelResetedCommand = function (serverCommand) {\n            if (!serverCommand.pmId)\n                return null;\n            var model = this.clientDolphin.getClientModelStore().findPresentationModelById(serverCommand.pmId);\n            if (!model) {\n                console.log(\"model with id \" + serverCommand.pmId + \" not found, cannot reset.\");\n                return null;\n            }\n            model.reset();\n            return model;\n        };\n        ClientConnector.prototype.handleAttributeMetadataChangedCommand = function (serverCommand) {\n            var clientAttribute = this.clientDolphin.getClientModelStore().findAttributeById(serverCommand.attributeId);\n            if (!clientAttribute)\n                return null;\n            clientAttribute[serverCommand.metadataName] = serverCommand.value;\n            return null;\n        };\n        ClientConnector.prototype.handleCallNamedActionCommand = function (serverCommand) {\n            this.clientDolphin.send(serverCommand.actionName, null);\n            return null;\n        };\n        ///////////// push support ///////////////\n        ClientConnector.prototype.listen = function () {\n            if (!this.pushEnabled)\n                return;\n            if (this.waiting)\n                return;\n            // todo: how to issue a warning if no pushListener is set?\n            if (!this.currentlySending) {\n                this.doSendNext();\n            }\n        };\n        ClientConnector.prototype.enqueuePushCommand = function () {\n            var me = this;\n            this.waiting = true;\n            this.commandQueue.push({\n                command: this.pushListener,\n                handler: {\n                    onFinished: function (models) { me.waiting = false; },\n                    onFinishedData: null\n                }\n            });\n        };\n        ClientConnector.prototype.release = function () {\n            if (!this.waiting)\n                return;\n            this.waiting = false;\n            // todo: how to issue a warning if no releaseCommand is set?\n            this.transmitter.signal(this.releaseCommand);\n        };\n        return ClientConnector;\n    })();\n    opendolphin.ClientConnector = ClientConnector;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"DolphinBuilder.ts\"/>\n/**\n * JS-friendly facade to avoid too many dependencies in plain JS code.\n * The name of this file is also used for the initial lookup of the\n * one javascript file that contains all the dolphin code.\n * Changing the name requires the build support and all users\n * to be updated as well.\n * Dierk Koenig\n */\nvar opendolphin;\n(function (opendolphin) {\n    // factory method for the initialized dolphin\n    // Deprecated ! Use 'makeDolphin() instead\n    function dolphin(url, reset, slackMS) {\n        if (slackMS === void 0) { slackMS = 300; }\n        return makeDolphin().url(url).reset(reset).slackMS(slackMS).build();\n    }\n    opendolphin.dolphin = dolphin;\n    // factory method to build an initialized dolphin\n    function makeDolphin() {\n        return new opendolphin.DolphinBuilder();\n    }\n    opendolphin.makeDolphin = makeDolphin;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    /**\n     * A transmitter that is not transmitting at all.\n     * It may serve as a stand-in when no real transmitter is needed.\n     */\n    var NoTransmitter = (function () {\n        function NoTransmitter() {\n        }\n        NoTransmitter.prototype.transmit = function (commands, onDone) {\n            // do nothing special\n            onDone([]);\n        };\n        NoTransmitter.prototype.signal = function (command) {\n            // do nothing\n        };\n        return NoTransmitter;\n    })();\n    opendolphin.NoTransmitter = NoTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\"/>\n/// <reference path=\"SignalCommand.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"Codec.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var HttpTransmitter = (function () {\n        function HttpTransmitter(url, reset, charset, errorHandler, supportCORS) {\n            if (reset === void 0) { reset = true; }\n            if (charset === void 0) { charset = \"UTF-8\"; }\n            if (errorHandler === void 0) { errorHandler = null; }\n            if (supportCORS === void 0) { supportCORS = false; }\n            this.url = url;\n            this.charset = charset;\n            this.HttpCodes = {\n                finished: 4,\n                success: 200\n            };\n            this.errorHandler = errorHandler;\n            this.supportCORS = supportCORS;\n            this.http = new XMLHttpRequest();\n            this.sig = new XMLHttpRequest();\n            if (this.supportCORS) {\n                if (\"withCredentials\" in this.http) {\n                    this.http.withCredentials = true; // NOTE: doing this for non CORS requests has no impact\n                    this.sig.withCredentials = true;\n                }\n            }\n            this.codec = new opendolphin.Codec();\n            if (reset) {\n                this.invalidate();\n            }\n        }\n        HttpTransmitter.prototype.transmit = function (commands, onDone) {\n            var _this = this;\n            this.http.onerror = function (evt) {\n                _this.handleError('onerror', \"\");\n                onDone([]);\n            };\n            this.http.onreadystatechange = function (evt) {\n                if (_this.http.readyState == _this.HttpCodes.finished) {\n                    if (_this.http.status == _this.HttpCodes.success) {\n                        var responseText = _this.http.responseText;\n                        if (responseText.trim().length > 0) {\n                            try {\n                                var responseCommands = _this.codec.decode(responseText);\n                                onDone(responseCommands);\n                            }\n                            catch (err) {\n                                console.log(\"Error occurred parsing responseText: \", err);\n                                console.log(\"Incorrect responseText: \", responseText);\n                                _this.handleError('application', \"HttpTransmitter: Incorrect responseText: \" + responseText);\n                                onDone([]);\n                            }\n                        }\n                        else {\n                            _this.handleError('application', \"HttpTransmitter: empty responseText\");\n                            onDone([]);\n                        }\n                    }\n                    else {\n                        _this.handleError('application', \"HttpTransmitter: HTTP Status != 200\");\n                        onDone([]);\n                    }\n                }\n            };\n            this.http.open('POST', this.url, true);\n            if (\"overrideMimeType\" in this.http) {\n                this.http.overrideMimeType(\"application/json; charset=\" + this.charset); // todo make injectable\n            }\n            this.http.send(this.codec.encode(commands));\n        };\n        HttpTransmitter.prototype.handleError = function (kind, message) {\n            var errorEvent = { kind: kind, url: this.url, httpStatus: this.http.status, message: message };\n            if (this.errorHandler) {\n                this.errorHandler(errorEvent);\n            }\n            else {\n                console.log(\"Error occurred: \", errorEvent);\n            }\n        };\n        HttpTransmitter.prototype.signal = function (command) {\n            this.sig.open('POST', this.url, true);\n            this.sig.send(this.codec.encode([command]));\n        };\n        HttpTransmitter.prototype.invalidate = function () {\n            this.http.open('POST', this.url + 'invalidate?', false);\n            this.http.send();\n        };\n        return HttpTransmitter;\n    })();\n    opendolphin.HttpTransmitter = HttpTransmitter;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"ClientDolphin.ts\"/>\n/// <reference path=\"OpenDolphin.ts\"/>\n/// <reference path=\"ClientConnector.ts\"/>\n/// <reference path=\"ClientModelStore.ts\"/>\n/// <reference path=\"NoTransmitter.ts\"/>\n/// <reference path=\"HttpTransmitter.ts\"/>\n/// <reference path=\"ClientAttribute.ts\"/>\nvar opendolphin;\n(function (opendolphin) {\n    var DolphinBuilder = (function () {\n        function DolphinBuilder() {\n            this.reset_ = false;\n            this.slackMS_ = 300;\n            this.maxBatchSize_ = 50;\n            this.supportCORS_ = false;\n        }\n        DolphinBuilder.prototype.url = function (url) {\n            this.url_ = url;\n            return this;\n        };\n        DolphinBuilder.prototype.reset = function (reset) {\n            this.reset_ = reset;\n            return this;\n        };\n        DolphinBuilder.prototype.slackMS = function (slackMS) {\n            this.slackMS_ = slackMS;\n            return this;\n        };\n        DolphinBuilder.prototype.maxBatchSize = function (maxBatchSize) {\n            this.maxBatchSize_ = maxBatchSize;\n            return this;\n        };\n        DolphinBuilder.prototype.supportCORS = function (supportCORS) {\n            this.supportCORS_ = supportCORS;\n            return this;\n        };\n        DolphinBuilder.prototype.errorHandler = function (errorHandler) {\n            this.errorHandler_ = errorHandler;\n            return this;\n        };\n        DolphinBuilder.prototype.build = function () {\n            console.log(\"OpenDolphin js found\");\n            var clientDolphin = new opendolphin.ClientDolphin();\n            var transmitter;\n            if (this.url_ != null && this.url_.length > 0) {\n                transmitter = new opendolphin.HttpTransmitter(this.url_, this.reset_, \"UTF-8\", this.errorHandler_, this.supportCORS_);\n            }\n            else {\n                transmitter = new opendolphin.NoTransmitter();\n            }\n            clientDolphin.setClientConnector(new opendolphin.ClientConnector(transmitter, clientDolphin, this.slackMS_, this.maxBatchSize_));\n            clientDolphin.setClientModelStore(new opendolphin.ClientModelStore(clientDolphin));\n            console.log(\"ClientDolphin initialized\");\n            return clientDolphin;\n        };\n        return DolphinBuilder;\n    })();\n    opendolphin.DolphinBuilder = DolphinBuilder;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var GetPresentationModelCommand = (function (_super) {\n        __extends(GetPresentationModelCommand, _super);\n        function GetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'GetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.GetPresentationModelCommand\";\n        }\n        return GetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.GetPresentationModelCommand = GetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n/// <reference path=\"Command.ts\" />\nvar opendolphin;\n(function (opendolphin) {\n    var ResetPresentationModelCommand = (function (_super) {\n        __extends(ResetPresentationModelCommand, _super);\n        function ResetPresentationModelCommand(pmId) {\n            _super.call(this);\n            this.pmId = pmId;\n            this.id = 'ResetPresentationModel';\n            this.className = \"org.opendolphin.core.comm.ResetPresentationModelCommand\";\n        }\n        return ResetPresentationModelCommand;\n    })(opendolphin.Command);\n    opendolphin.ResetPresentationModelCommand = ResetPresentationModelCommand;\n})(opendolphin || (opendolphin = {}));\n\nmodule.exports = opendolphin;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Map = require('../bower_components/core.js/library/fn/map');\nvar utils = require('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\nfunction BeanManager(classRepository) {\n    checkMethod('BeanManager(classRepository)');\n    checkParam(classRepository, 'classRepository');\n\n    this.classRepository = classRepository;\n    this.addedHandlers = new Map();\n    this.removedHandlers = new Map();\n    this.updatedHandlers = new Map();\n    this.arrayUpdatedHandlers = new Map();\n    this.allAddedHandlers = [];\n    this.allRemovedHandlers = [];\n    this.allUpdatedHandlers = [];\n    this.allArrayUpdatedHandlers = [];\n\n    var self = this;\n    this.classRepository.onBeanAdded(function(type, bean) {\n        var handlerList = self.addedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanAdded-handler for type', type, e);\n                }\n            });\n        }\n        self.allAddedHandlers.forEach(function (handler) {\n            try {\n                handler(bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanAdded-handler', e);\n            }\n        });\n    });\n    this.classRepository.onBeanRemoved(function(type, bean) {\n        var handlerList = self.removedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function(handler) {\n                try {\n                    handler(bean);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanRemoved-handler for type', type, e);\n                }\n            });\n        }\n        self.allRemovedHandlers.forEach(function(handler) {\n            try {\n                handler(bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanRemoved-handler', e);\n            }\n        });\n    });\n    this.classRepository.onBeanUpdate(function(type, bean, propertyName, newValue, oldValue) {\n        var handlerList = self.updatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean, propertyName, newValue, oldValue);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onBeanUpdate-handler for type', type, e);\n                }\n            });\n        }\n        self.allUpdatedHandlers.forEach(function (handler) {\n            try {\n                handler(bean, propertyName, newValue, oldValue);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onBeanUpdate-handler', e);\n            }\n        });\n    });\n    this.classRepository.onArrayUpdate(function(type, bean, propertyName, index, count, newElements) {\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (exists(handlerList)) {\n            handlerList.forEach(function (handler) {\n                try {\n                    handler(bean, propertyName, index, count, newElements);\n                } catch(e) {\n                    console.warn('An exception occurred while calling an onArrayUpdate-handler for type', type, e);\n                }\n            });\n        }\n        self.allArrayUpdatedHandlers.forEach(function (handler) {\n            try {\n                handler(bean, propertyName, index, count, newElements);\n            } catch(e) {\n                console.warn('An exception occurred while calling a general onArrayUpdate-handler', e);\n            }\n        });\n    });\n\n}\n\n\nBeanManager.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    checkMethod('BeanManager.notifyBeanChange(bean, propertyName, newValue)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n\n    return this.classRepository.notifyBeanChange(bean, propertyName, newValue);\n};\n\n\nBeanManager.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    checkMethod('BeanManager.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n    checkParam(index, 'index');\n    checkParam(count, 'count');\n    checkParam(removedElements, 'removedElements');\n\n    this.classRepository.notifyArrayChange(bean, propertyName, index, count, removedElements);\n};\n\n\nBeanManager.prototype.isManaged = function(bean) {\n    checkMethod('BeanManager.isManaged(bean)');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.isManaged() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.create = function(type) {\n    checkMethod('BeanManager.create(type)');\n    checkParam(type, 'type');\n\n    // TODO: Implement dolphin.create() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.add = function(type, bean) {\n    checkMethod('BeanManager.add(type, bean)');\n    checkParam(type, 'type');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.add() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.addAll = function(type, collection) {\n    checkMethod('BeanManager.addAll(type, collection)');\n    checkParam(type, 'type');\n    checkParam(collection, 'collection');\n\n    // TODO: Implement dolphin.addAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.remove = function(bean) {\n    checkMethod('BeanManager.remove(bean)');\n    checkParam(bean, 'bean');\n\n    // TODO: Implement dolphin.remove() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeAll = function(collection) {\n    checkMethod('BeanManager.removeAll(collection)');\n    checkParam(collection, 'collection');\n\n    // TODO: Implement dolphin.removeAll() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.removeIf = function(predicate) {\n    checkMethod('BeanManager.removeIf(predicate)');\n    checkParam(predicate, 'predicate');\n\n    // TODO: Implement dolphin.removeIf() [DP-7]\n    throw new Error(\"Not implemented yet\");\n};\n\n\nBeanManager.prototype.onAdded = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onAdded(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allAddedHandlers = self.allAddedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allAddedHandlers = self.allAddedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onAdded(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.addedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.addedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.addedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.addedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onRemoved = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onRemoved(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allRemovedHandlers = self.allRemovedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allRemovedHandlers = self.allRemovedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onRemoved(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.removedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.removedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.removedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.removedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onBeanUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onBeanUpdate(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allUpdatedHandlers = self.allUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allUpdatedHandlers = self.allUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onBeanUpdate(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.updatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.updatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.updatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.updatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\nBeanManager.prototype.onArrayUpdate = function(type, eventHandler) {\n    var self = this;\n    if (!exists(eventHandler)) {\n        eventHandler = type;\n        checkMethod('BeanManager.onArrayUpdate(eventHandler)');\n        checkParam(eventHandler, 'eventHandler');\n\n        self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.concat(eventHandler);\n        return {\n            unsubscribe: function() {\n                self.allArrayUpdatedHandlers = self.allArrayUpdatedHandlers.filter(function(value) {\n                    return value !== eventHandler;\n                });\n            }\n        };\n    } else {\n        checkMethod('BeanManager.onArrayUpdate(type, eventHandler)');\n        checkParam(type, 'type');\n        checkParam(eventHandler, 'eventHandler');\n\n        var handlerList = self.arrayUpdatedHandlers.get(type);\n        if (!exists(handlerList)) {\n            handlerList = [];\n        }\n        self.arrayUpdatedHandlers.set(type, handlerList.concat(eventHandler));\n        return {\n            unsubscribe: function() {\n                var handlerList = self.arrayUpdatedHandlers.get(type);\n                if (exists(handlerList)) {\n                    self.arrayUpdatedHandlers.set(type, handlerList.filter(function(value) {\n                        return value !== eventHandler;\n                    }));\n                }\n            }\n        };\n    }\n};\n\n\n\nexports.BeanManager = BeanManager;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Platform, console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Map = require('../bower_components/core.js/library/fn/map');\nvar opendolphin = require('../libsrc/opendolphin.js');\n\nvar utils = require('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar UNKNOWN = 0,\n    BASIC_TYPE = 1,\n    DOLPHIN_BEAN = 2;\n\nvar blocked = null;\n\nfunction fromDolphin(classRepository, type, value) {\n    return ! exists(value)? null\n        : type === DOLPHIN_BEAN? classRepository.beanFromDolphin.get(value) : value;\n}\n\nfunction toDolphin(classRepository, value) {\n    return typeof value === 'object' && value !== null? classRepository.beanToDolphin.get(value) : value;\n}\n\nfunction sendListSplice(classRepository, modelId, propertyName, from, to, newElements) {\n    var dolphin = classRepository.dolphin;\n    var attributes = [\n        dolphin.attribute('@@@ SOURCE_SYSTEM @@@', null, 'client'),\n        dolphin.attribute('source', null, modelId),\n        dolphin.attribute('attribute', null, propertyName),\n        dolphin.attribute('from', null, from),\n        dolphin.attribute('to', null, to),\n        dolphin.attribute('count', null, newElements.length)\n    ];\n    newElements.forEach(function(element, index) {\n        attributes.push(dolphin.attribute(index.toString(), null, toDolphin(classRepository, element)));\n    });\n    dolphin.presentationModel.apply(dolphin, [null, '@DP:LS@'].concat(attributes));\n}\n\nfunction validateList(classRepository, type, bean, propertyName) {\n    var list = bean[propertyName];\n    if (!exists(list)) {\n        classRepository.propertyUpdateHandlers.forEach(function(handler) {\n            try {\n                handler(type, bean, propertyName, [], undefined);\n            } catch(e) {\n                console.warn('An exception occurred while calling an onBeanUpdate-handler', e);\n            }\n        });\n    }\n}\n\nfunction block(bean, propertyName) {\n    if (exists(blocked)) {\n        throw new Error('Trying to create a block while another block exists');\n    }\n    blocked = {\n        bean: bean,\n        propertyName: propertyName\n    };\n}\n\nfunction isBlocked(bean, propertyName) {\n    return exists(blocked) && blocked.bean === bean && blocked.propertyName === propertyName;\n}\n\nfunction unblock() {\n    blocked = null;\n}\n\n\nfunction ClassRepository(dolphin) {\n    checkMethod('ClassRepository(dolphin)');\n    checkParam(dolphin, 'dolphin');\n\n    this.dolphin = dolphin;\n    this.classes = new Map();\n    this.beanFromDolphin = new Map();\n    this.beanToDolphin = new Map();\n    this.classInfos = new Map();\n    this.beanAddedHandlers = [];\n    this.beanRemovedHandlers = [];\n    this.propertyUpdateHandlers = [];\n    this.arrayUpdateHandlers = [];\n}\n\n\nClassRepository.prototype.notifyBeanChange = function(bean, propertyName, newValue) {\n    checkMethod('ClassRepository.notifyBeanChange(bean, propertyName, newValue)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n\n    var modelId = this.beanToDolphin.get(bean);\n    if (exists(modelId)) {\n        var model = this.dolphin.findPresentationModelById(modelId);\n        if (exists(model)) {\n            var classInfo = this.classes.get(model.presentationModelType);\n            var type = classInfo[propertyName];\n            var attribute = model.findAttributeByPropertyName(propertyName);\n            if (exists(type) && exists(attribute)) {\n                var oldValue = attribute.getValue();\n                attribute.setValue(toDolphin(this, newValue));\n                return fromDolphin(this, type, oldValue);\n            }\n        }\n    }\n};\n\n\nClassRepository.prototype.notifyArrayChange = function(bean, propertyName, index, count, removedElements) {\n    checkMethod('ClassRepository.notifyArrayChange(bean, propertyName, index, count, removedElements)');\n    checkParam(bean, 'bean');\n    checkParam(propertyName, 'propertyName');\n    checkParam(index, 'index');\n    checkParam(count, 'count');\n    checkParam(removedElements, 'removedElements');\n\n    if (isBlocked(bean, propertyName)) {\n        return;\n    }\n    var modelId = this.beanToDolphin.get(bean);\n    var array = bean[propertyName];\n    if (exists(modelId) && exists(array)) {\n        var removedElementsCount = Array.isArray(removedElements)? removedElements.length : 0;\n        sendListSplice(this, modelId, propertyName, index, index + removedElementsCount, array.slice(index, index + count));\n    }\n};\n\n\nClassRepository.prototype.onBeanAdded = function(handler) {\n    checkMethod('ClassRepository.onBeanAdded(handler)');\n    checkParam(handler, 'handler');\n    this.beanAddedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanRemoved = function(handler) {\n    checkMethod('ClassRepository.onBeanRemoved(handler)');\n    checkParam(handler, 'handler');\n    this.beanRemovedHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onBeanUpdate = function(handler) {\n    checkMethod('ClassRepository.onBeanUpdate(handler)');\n    checkParam(handler, 'handler');\n    this.propertyUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.onArrayUpdate = function(handler) {\n    checkMethod('ClassRepository.onArrayUpdate(handler)');\n    checkParam(handler, 'handler');\n    this.arrayUpdateHandlers.push(handler);\n};\n\n\nClassRepository.prototype.registerClass = function (model) {\n    checkMethod('ClassRepository.registerClass(model)');\n    checkParam(model, 'model');\n\n    if (this.classes.has(model.id)) {\n        return;\n    }\n\n    var classInfo = {};\n    model.attributes.filter(function(attribute) {\n        return attribute.propertyName.search(/^@/) < 0;\n    }).forEach(function (attribute) {\n        classInfo[attribute.propertyName] = UNKNOWN;\n\n        attribute.onValueChange(function (event) {\n            classInfo[attribute.propertyName] = event.newValue;\n        });\n    });\n    this.classes.set(model.id, classInfo);\n};\n\n\nClassRepository.prototype.unregisterClass = function (model) {\n    checkMethod('ClassRepository.unregisterClass(model)');\n    checkParam(model, 'model');\n\n    this.classes['delete'](model.id);\n};\n\n\nClassRepository.prototype.load = function (model) {\n    checkMethod('ClassRepository.load(model)');\n    checkParam(model, 'model');\n\n    var self = this;\n    var classInfo = this.classes.get(model.presentationModelType);\n    var bean = {};\n    model.attributes.filter(function (attribute) {\n        return (attribute.tag === opendolphin.Tag.value()) && (attribute.propertyName.search(/^@/) < 0);\n    }).forEach(function (attribute) {\n        bean[attribute.propertyName] = null;\n        attribute.onValueChange(function (event) {\n            if (event.oldValue !== event.newValue) {\n                var oldValue = fromDolphin(self, classInfo[attribute.propertyName], event.oldValue);\n                var newValue = fromDolphin(self, classInfo[attribute.propertyName], event.newValue);\n                self.propertyUpdateHandlers.forEach(function(handler) {\n                    try {\n                        handler(model.presentationModelType, bean, attribute.propertyName, newValue, oldValue);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onBeanUpdate-handler', e);\n                    }\n                });\n            }\n        });\n    });\n    this.beanFromDolphin.set(model.id, bean);\n    this.beanToDolphin.set(bean, model.id);\n    this.classInfos.set(model.id, classInfo);\n    this.beanAddedHandlers.forEach(function(handler) {\n        try {\n            handler(model.presentationModelType, bean);\n        } catch(e) {\n            console.warn('An exception occurred while calling an onBeanAdded-handler', e);\n        }\n    });\n    return bean;\n};\n\n\nClassRepository.prototype.unload = function(model) {\n    checkMethod('ClassRepository.unload(model)');\n    checkParam(model, 'model');\n\n    var bean = this.beanFromDolphin.get(model.id);\n    this.beanFromDolphin['delete'](model.id);\n    this.beanToDolphin['delete'](bean);\n    this.classInfos['delete'](model.id);\n    if (exists(bean)) {\n        this.beanRemovedHandlers.forEach(function(handler) {\n            try {\n                handler(model.presentationModelType, bean);\n            } catch(e) {\n                console.warn('An exception occurred while calling an onBeanRemoved-handler', e);\n            }\n        });\n    }\n    return bean;\n};\n\n\nClassRepository.prototype.spliceListEntry = function(model) {\n    checkMethod('ClassRepository.spliceListEntry(model)');\n    checkParam(model, 'model');\n\n    var source = model.findAttributeByPropertyName('source');\n    var attribute = model.findAttributeByPropertyName('attribute');\n    var from = model.findAttributeByPropertyName('from');\n    var to = model.findAttributeByPropertyName('to');\n    var count = model.findAttributeByPropertyName('count');\n\n    if (exists(source) && exists(attribute) && exists(from) && exists(to) && exists(count)) {\n        var classInfo = this.classInfos.get(source.value);\n        var bean = this.beanFromDolphin.get(source.value);\n        if (exists(bean) && exists(classInfo)) {\n            var type = model.presentationModelType;\n            //var entry = fromDolphin(this, classInfo[attribute.value], element.value);\n            validateList(this, type, bean, attribute.value);\n            var newElements = [],\n                element = null;\n            for (var i = 0; i < count.value; i++) {\n                element = model.findAttributeByPropertyName(i.toString());\n                if (! exists(element)) {\n                    throw new Error(\"Invalid list modification update received\");\n                }\n                newElements.push(fromDolphin(this, classInfo[attribute.value], element.value));\n            }\n            try {\n                block(bean, attribute.value);\n                this.arrayUpdateHandlers.forEach(function (handler) {\n                    try {\n                        handler(type, bean, attribute.value, from.value, to.value - from.value, newElements);\n                    } catch(e) {\n                        console.warn('An exception occurred while calling an onArrayUpdate-handler', e);\n                    }\n                });\n            } finally {\n                unblock();\n            }\n        } else {\n            throw new Error(\"Invalid list modification update received. Source bean unknown.\");\n        }\n    } else {\n        throw new Error(\"Invalid list modification update received\");\n    }\n};\n\n\nClassRepository.prototype.mapParamToDolphin = function(param) {\n    if (!exists(param)) {\n        return {value: param, type: UNKNOWN};\n    }\n    var type = typeof param;\n    if (type === 'object') {\n        var value = this.beanToDolphin.get(param);\n        if (exists(value)) {\n            return {value: value, type: DOLPHIN_BEAN};\n        }\n        throw new TypeError(\"Only managed Dolphin Beans can be used\");\n    }\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n        return {value: param, type: BASIC_TYPE};\n    }\n    throw new TypeError(\"Only managed Dolphin Beans and primitive types can be used\");\n};\n\n\nClassRepository.prototype.mapDolphinToBean = function(value, type) {\n    return fromDolphin(this, type, value);\n};\n\n\n\nexports.ClassRepository = ClassRepository;\nexports.UNKNOWN = UNKNOWN;\nexports.BASIC_TYPE = BASIC_TYPE;\nexports.DOLPHIN_BEAN = DOLPHIN_BEAN;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar utils = require('./utils.js');\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar INIT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'initClientContext';\nvar DISCONNECT_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'disconnectClientContext';\n\nfunction ClientContext(dolphin, beanManager, controllerManager, connector) {\n    checkMethod('ClientContext(dolphin, beanManager, controllerManager, connector)');\n    checkParam(dolphin, 'dolphin');\n    checkParam(beanManager, 'beanManager');\n    checkParam(controllerManager, 'controllerManager');\n    checkParam(connector, 'connector');\n\n    this.dolphin = dolphin;\n    this.beanManager = beanManager;\n    this._controllerManager = controllerManager;\n    this._connector = connector;\n\n    this._connector.invoke(INIT_COMMAND_NAME);\n}\n\n\nClientContext.prototype.createController = function(name) {\n    checkMethod('ClientContext.createController(name)');\n    checkParam(name, 'name');\n\n    return this._controllerManager.createController(name);\n};\n\n\nClientContext.prototype.disconnect = function() {\n    // TODO: Implement ClientContext.disconnect [DP-46]\n    var self = this;\n    this.dolphin.stopPushListening();\n    this._controllerManager.destroy().then(function() {\n        self._connector.invoke(DISCONNECT_COMMAND_NAME);\n        self.dolphin = null;\n        self.beanManager = null;\n        self._controllerManager = null;\n        self._connector = null;\n    });\n};\n\n\nexports.ClientContext = ClientContext;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\n\nvar exists = require('./utils.js').exists;\n\n\nfunction encodeCreatePresentationModelCommand(command) {\n    return {\n        'p': command.pmId,\n        't': command.pmType,\n        'a': command.attributes.map(function (attribute) {\n            var result = {\n                'n': attribute.propertyName,\n                'i': attribute.id\n            };\n            if (exists(attribute.value)) {\n                result.v = attribute.value;\n            }\n            if (exists(attribute.tag) && attribute.tag !== 'VALUE') {\n                result.t = attribute.tag;\n            }\n            return result;\n        }),\n        'id': 'CreatePresentationModel'\n    };\n}\n\nfunction decodeCreatePresentationModelCommand(command) {\n    return {\n        'id': 'CreatePresentationModel',\n        'className': \"org.opendolphin.core.comm.CreatePresentationModelCommand\",\n        'clientSideOnly': false,\n        'pmId': command.p,\n        'pmType': command.t,\n        'attributes': command.a.map(function (attribute) {\n            return {\n                'propertyName': attribute.n,\n                'id': attribute.i,\n                'value': exists(attribute.v)? attribute.v : null,\n                'baseValue': exists(attribute.v)? attribute.v : null,\n                'qualifier': null,\n                'tag': exists(attribute.t)? attribute.t : 'VALUE'\n            };\n        })\n    };\n}\n\n\nfunction encodeValueChangedCommand(command) {\n    var result = {\n        'a': command.attributeId\n    };\n    if (exists(command.oldValue)) {\n        result.o = command.oldValue;\n    }\n    if (exists(command.newValue)) {\n        result.n = command.newValue;\n    }\n    result.id = 'ValueChanged';\n    return result;\n}\n\nfunction decodeValueChangedCommand(command) {\n    return {\n        'id': 'ValueChanged',\n        'className': \"org.opendolphin.core.comm.ValueChangedCommand\",\n        'attributeId': command.a,\n        'oldValue': exists(command.o)? command.o : null,\n        'newValue': exists(command.n)? command.n : null\n    };\n}\n\n\nexports.Codec = {\n    encode: function (commands) {\n        return JSON.stringify(commands.map(function (command) {\n            if (command.id === 'CreatePresentationModel') {\n                return encodeCreatePresentationModelCommand(command);\n            } else if (command.id === 'ValueChanged') {\n                return encodeValueChangedCommand(command);\n            }\n            return command;\n        }));\n    },\n    decode: function (transmitted) {\n        if (typeof transmitted == 'string') {\n            return JSON.parse(transmitted).map(function (command) {\n                if (command.id === 'CreatePresentationModel') {\n                    return decodeCreatePresentationModelCommand(command);\n                } else if (command.id === 'ValueChanged') {\n                    return decodeValueChangedCommand(command);\n                }\n                return command;\n            });\n        }\n        else {\n            return transmitted;\n        }\n    }\n};","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Promise = require('../bower_components/core.js/library/fn/promise');\nvar opendolphin = require('../libsrc/opendolphin.js');\nvar utils = require('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar POLL_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'longPoll';\nvar RELEASE_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'release';\n\nvar DOLPHIN_BEAN = '@@@ DOLPHIN_BEAN @@@';\nvar ACTION_CALL_BEAN = '@@@ CONTROLLER_ACTION_CALL_BEAN @@@';\nvar HIGHLANDER_BEAN = '@@@ HIGHLANDER_BEAN @@@';\nvar DOLPHIN_LIST_SPLICE = '@DP:LS@';\nvar SOURCE_SYSTEM = '@@@ SOURCE_SYSTEM @@@';\nvar SOURCE_SYSTEM_CLIENT = 'client';\nvar SOURCE_SYSTEM_SERVER = 'server';\n\n\n\nvar initializer;\n\nfunction Connector(url, dolphin, classRepository, config) {\n    checkMethod('Connector(url, dolphin, classRepository, config)');\n    checkParam(url, 'url');\n    checkParam(dolphin, 'dolphin');\n    checkParam(classRepository, 'classRepository');\n\n    var self = this;\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.highlanderPMResolver = function() {};\n    this.highlanderPMPromise = new Promise(function(resolve) {\n        self.highlanderPMResolver = resolve;\n    });\n\n    dolphin.getClientModelStore().onModelStoreChange(function (event) {\n        var model = event.clientPresentationModel;\n        var sourceSystem = model.findAttributeByPropertyName(SOURCE_SYSTEM);\n        if (exists(sourceSystem) && sourceSystem.value === SOURCE_SYSTEM_SERVER) {\n            if (event.eventType === opendolphin.Type.ADDED) {\n                self.onModelAdded(model);\n            } else if (event.eventType === opendolphin.Type.REMOVED) {\n                self.onModelRemoved(model);\n            }\n        }\n    });\n\n    if (!exists(config) || !exists(config.serverPush) || config.serverPush === true) {\n        setTimeout(function() {\n            dolphin.startPushListening(POLL_COMMAND_NAME, RELEASE_COMMAND_NAME);\n        }, 500);\n    }\n\n    initializer = new Promise(function(resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.withCredentials = true;\n\n        req.onload = function() {\n            if (req.status === 200) {\n                resolve();\n            }\n            else {\n                reject(Error(req.statusText));\n            }\n        };\n\n        req.onerror = function() {\n            reject(Error(\"Network Error\"));\n        };\n\n        req.open('POST', url + 'invalidate?');\n        req.send();\n    });\n}\n\n\nConnector.prototype.onModelAdded = function(model) {\n    checkMethod('Connector.onModelAdded(model)');\n    checkParam(model, 'model');\n\n    var type = model.presentationModelType;\n    switch (type) {\n        case ACTION_CALL_BEAN:\n            // ignore\n            break;\n        case DOLPHIN_BEAN:\n            this.classRepository.registerClass(model);\n            break;\n        case HIGHLANDER_BEAN:\n            this.highlanderPMResolver(model);\n            break;\n        case DOLPHIN_LIST_SPLICE:\n            this.classRepository.spliceListEntry(model);\n            this.dolphin.deletePresentationModel(model);\n            break;\n        default:\n            this.classRepository.load(model);\n            break;\n    }\n};\n\n\nConnector.prototype.onModelRemoved = function(model) {\n    checkMethod('Connector.onModelRemoved(model)');\n    checkParam(model, 'model');\n\n    var type = model.presentationModelType;\n    switch (type) {\n        case DOLPHIN_BEAN:\n            this.classRepository.unregisterClass(model);\n            break;\n        case DOLPHIN_LIST_SPLICE:\n            // do nothing\n            break;\n        default:\n            this.classRepository.unload(model);\n            break;\n    }\n};\n\n\nConnector.prototype.invoke = function(command) {\n    checkMethod('Connector.invoke(command)');\n    checkParam(command, 'command');\n\n    var dolphin = this.dolphin;\n    return new Promise(function(resolve) {\n        //initializer.then(function () {\n            dolphin.send(command, {\n                onFinished: function() {\n                    resolve();\n                }\n            });\n        //});\n    });\n};\n\n\nConnector.prototype.getHighlanderPM = function() {\n    return this.highlanderPMPromise;\n};\n\n\n\nexports.Connector = Connector;\nexports.SOURCE_SYSTEM = SOURCE_SYSTEM;\nexports.SOURCE_SYSTEM_CLIENT = SOURCE_SYSTEM_CLIENT;\nexports.SOURCE_SYSTEM_SERVER = SOURCE_SYSTEM_SERVER;\nexports.ACTION_CALL_BEAN = ACTION_CALL_BEAN;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Promise = require('../bower_components/core.js/library/fn/promise');\nvar Set = require('../bower_components/core.js/library/fn/set');\nvar utils = require('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\nvar ControllerProxy = require('./controllerproxy.js').ControllerProxy;\n\nvar DOLPHIN_BEAN_TYPE = require('./classrepo.js').DOLPHIN_BEAN;\n\nvar SOURCE_SYSTEM = require('./connector.js').SOURCE_SYSTEM;\nvar SOURCE_SYSTEM_CLIENT = require('./connector.js').SOURCE_SYSTEM_CLIENT;\nvar ACTION_CALL_BEAN = require('./connector.js').ACTION_CALL_BEAN;\n\nvar DOLPHIN_PLATFORM_PREFIX = 'dolphin_platform_intern_';\nvar REGISTER_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'registerController';\nvar CALL_CONTROLLER_ACTION_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'callControllerAction';\nvar DESTROY_CONTROLLER_COMMAND_NAME = DOLPHIN_PLATFORM_PREFIX + 'destroyController';\n\nvar CONTROLLER_NAME = 'controllerName';\nvar CONTROLLER_ID = 'controllerId';\nvar MODEL = 'model';\nvar ACTION_NAME = 'actionName';\nvar ERROR_CODE = 'errorCode';\nvar PARAM_PREFIX = '_';\n\n\nfunction ControllerManager(dolphin, classRepository, connector) {\n    checkMethod('ControllerManager(dolphin, classRepository, connector)');\n    checkParam(dolphin, 'dolphin');\n    checkParam(classRepository, 'classRepository');\n    checkParam(connector, 'connector');\n\n    this.dolphin = dolphin;\n    this.classRepository = classRepository;\n    this.connector = connector;\n    this.controllers = new Set();\n}\n\n\nControllerManager.prototype.createController = function(name) {\n    checkMethod('ControllerManager.createController(name)');\n    checkParam(name, 'name');\n\n    var self = this;\n    var controllerId, modelId, model, controller;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_NAME).setValue(name);\n            self.connector.invoke(REGISTER_CONTROLLER_COMMAND_NAME).then(function() {\n                controllerId = highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).getValue();\n                modelId = highlanderPM.findAttributeByPropertyName(MODEL).getValue();\n                model = self.classRepository.mapDolphinToBean(modelId, DOLPHIN_BEAN_TYPE);\n                controller = new ControllerProxy(controllerId, model, self);\n                self.controllers.add(controller);\n                resolve(controller);\n            });\n        });\n    });\n};\n\n\nControllerManager.prototype.invokeAction = function(controllerId, actionName, params) {\n    checkMethod('ControllerManager.invokeAction(controllerId, actionName, params)');\n    checkParam(controllerId, 'controllerId');\n    checkParam(actionName, 'actionName');\n\n    var self = this;\n    return new Promise(function(resolve, reject) {\n\n        var attributes = [\n            self.dolphin.attribute(SOURCE_SYSTEM, null, SOURCE_SYSTEM_CLIENT),\n            self.dolphin.attribute(CONTROLLER_ID, null, controllerId),\n            self.dolphin.attribute(ACTION_NAME, null, actionName),\n            self.dolphin.attribute(ERROR_CODE)\n        ];\n\n        if (exists(params)) {\n            for (var prop in params) {\n                if (params.hasOwnProperty(prop)) {\n                    var param = self.classRepository.mapParamToDolphin(params[prop]);\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.value, 'VALUE'));\n                    attributes.push(self.dolphin.attribute(PARAM_PREFIX + prop, null, param.type, 'VALUE_TYPE'));\n                }\n            }\n        }\n\n        var pm = self.dolphin.presentationModel.apply(self.dolphin, [null, ACTION_CALL_BEAN].concat(attributes));\n\n        self.connector.invoke(CALL_CONTROLLER_ACTION_COMMAND_NAME, params).then(function() {\n            var isError = pm.findAttributeByPropertyName(ERROR_CODE).getValue();\n            if (isError) {\n                reject(new Error(\"ControllerAction caused an error\"));\n            } else {\n                resolve();\n            }\n            self.dolphin.deletePresentationModel(pm);\n        });\n    });\n};\n\n\nControllerManager.prototype.destroyController = function(controller) {\n    checkMethod('ControllerManager.destroyController(controller)');\n    checkParam(controller, 'controller');\n\n    var self = this;\n    return new Promise(function(resolve) {\n        self.connector.getHighlanderPM().then(function (highlanderPM) {\n            self.controllers.delete(controller);\n            highlanderPM.findAttributeByPropertyName(CONTROLLER_ID).setValue(controller.controllerId);\n            self.connector.invoke(DESTROY_CONTROLLER_COMMAND_NAME).then(resolve);\n        });\n    });\n};\n\n\nControllerManager.prototype.destroy = function() {\n    var controllersCopy = this.controllers;\n    var promises = [];\n    this.controllers = new Set();\n    controllersCopy.forEach(function (controller) {\n        try {\n            promises.push(controller.destroy());\n        } catch (e) {\n            // ignore\n        }\n    });\n    return Promise.all(promises);\n};\n\n\n\nexports.ControllerManager = ControllerManager;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar Set = require('../bower_components/core.js/library/fn/set');\nvar utils = require('./utils.js');\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\n\n\n\nfunction ControllerProxy(controllerId, model, manager) {\n    checkMethod('ControllerProxy(controllerId, model, manager)');\n    checkParam(controllerId, 'controllerId');\n    checkParam(model, 'model');\n    checkParam(manager, 'manager');\n\n    this.controllerId = controllerId;\n    this.model = model;\n    this.manager = manager;\n    this.destroyed = false;\n    this.onDestroyedHandlers = new Set();\n}\n\n\nControllerProxy.prototype.invoke = function(name, params) {\n    checkMethod('ControllerProxy.invoke(name, params)');\n    checkParam(name, 'name');\n\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    return this.manager.invokeAction(this.controllerId, name, params);\n};\n\n\nControllerProxy.prototype.destroy = function() {\n    if (this.destroyed) {\n        throw new Error('The controller was already destroyed');\n    }\n    this.destroyed = true;\n    this.onDestroyedHandlers.forEach(function(handler) {\n        try {\n            handler(this);\n        } catch(e) {\n            console.warn('An exception occurred while calling an onDestroyed-handler', e);\n        }\n    }, this);\n    return this.manager.destroyController(this);\n};\n\n\nControllerProxy.prototype.onDestroyed = function(handler) {\n    checkMethod('ControllerProxy.onDestroyed(handler)');\n    checkParam(handler, 'handler');\n\n    var self = this;\n    this.onDestroyedHandlers.add(handler);\n    return {\n        unsubscribe: function() {\n            self.onDestroyedHandlers.delete(handler);\n        }\n    };\n};\n\n\n\nexports.ControllerProxy = ControllerProxy;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global console */\n\"use strict\";\n\nrequire('./polyfills.js');\nvar opendolphin = require('../libsrc/opendolphin.js');\n\nvar utils = require('./utils.js');\nvar exists = utils.exists;\nvar checkMethod = utils.checkMethod;\nvar checkParam = utils.checkParam;\nvar Connector = require('./connector.js').Connector;\nvar BeanManager = require('./beanmanager.js').BeanManager;\nvar ClassRepository = require('./classrepo.js').ClassRepository;\nvar ControllerManager = require('./controllermanager.js').ControllerManager;\nvar ClientContext = require('./clientcontext.js').ClientContext;\nvar Codec = require('./codec.js').Codec;\n\nexports.connect = function(url, config) {\n    checkMethod('connect(url, config)');\n    checkParam(url, 'url');\n\n    var builder = opendolphin.makeDolphin().url(url).reset(false).slackMS(4).supportCORS(true);\n    if (exists(config) && exists(config.errorHandler)) {\n        builder.errorHandler(config.errorHandler);\n    }\n    var dolphin = builder.build();\n    dolphin.clientConnector.transmitter.codec = Codec;\n\n    var classRepository = new ClassRepository(dolphin);\n    var beanManager = new BeanManager(classRepository);\n    var connector = new Connector(url, dolphin, classRepository, config);\n    var controllerManager = new ControllerManager(dolphin, classRepository, connector);\n\n    return new ClientContext(dolphin, beanManager, controllerManager, connector);\n};\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n ////////////////////\n// Array.forEach()\n////////////////////\nif (!Array.prototype.forEach) {\n\n    Array.prototype.forEach = function(callback, thisArg) {\n\n        var T, k;\n\n        if (this == null) {\n            throw new TypeError(' this is null or not defined');\n        }\n\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n\n        // 6. Let k be 0\n        k = 0;\n\n        // 7. Repeat, while k < len\n        while (k < len) {\n\n            var kValue;\n\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n\n\n////////////////////\n// Array.filter()\n////////////////////\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun/*, thisArg*/) {\n        'use strict';\n\n        if (this === void 0 || this === null) {\n            throw new TypeError();\n        }\n\n        var t = Object(this);\n        var len = t.length >>> 0;\n        if (typeof fun !== 'function') {\n            throw new TypeError();\n        }\n\n        var res = [];\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n            if (i in t) {\n                var val = t[i];\n\n                // NOTE: Technically this should Object.defineProperty at\n                //       the next index, as push can be affected by\n                //       properties on Object.prototype and Array.prototype.\n                //       But that method's new, and collisions should be\n                //       rare, so use the more-compatible alternative.\n                if (fun.call(thisArg, val, i, t)) {\n                    res.push(val);\n                }\n            }\n        }\n\n        return res;\n    };\n}","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar checkMethodName;\n\nvar exists = function(object) {\n    return typeof object !== 'undefined' && object !== null;\n};\n\nmodule.exports.exists = exists;\n\nmodule.exports.checkMethod = function(name) {\n    checkMethodName = name;\n};\n\nmodule.exports.checkParam = function(param, parameterName) {\n    if (!exists(param)) {\n        throw new Error('The parameter ' + parameterName + ' is mandatory in ' + checkMethodName);\n    }\n};\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n/* global Polymer, console */\n\"use strict\";\n\nvar Binder = require('./binder.js').Binder;\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\n\nvar arrayKeyBug;\nfunction polymer1_1hack(element, path) {\n    // This is a temporary hack to deal with Polymer's API consistency concerning arrays and paths.\n    // An observer uses keys in an array, while the get() and set() methods expect the index.\n    // This is hopefully fixed in Polymer 1.2.\n    do {\n        var pathElements = path.match(/^([^\\.]+)\\.(.*)$/);\n        var key = pathElements !== null? pathElements[1] : path;\n        path = pathElements !== null? pathElements[2] : null;\n\n        if (Array.isArray(element)) {\n            var arrayKey = parseInt(key);\n            if (isNaN(arrayKey)) {\n                element = element[key];\n            } else {\n                var collection = Polymer.Collection.get(element);\n                element = collection.getItem(arrayKey);\n            }\n        } else {\n            element = element[key];\n        }\n    } while (path !== null && exists(element));\n\n    return element;\n}\nfunction navigateToBean(element, path) {\n    var navigation = path.match(/^(.*)\\.[^\\.]*$/);\n    if (! exists(navigation)) {\n        return element;\n    } else {\n        if (!exists(arrayKeyBug)) {\n            arrayKeyBug = typeof Polymer.version !== 'string' || (Polymer.version.match(/^1\\.[01]\\./) !== null);\n        }\n        return arrayKeyBug? polymer1_1hack(element, navigation[1]) : element.get(navigation[1], element);\n    }\n}\n\n\nfunction setupCreateBehavior(clientContext) {\n\n    var binder = new Binder(clientContext.beanManager);\n\n    return function(controllerName) {\n        var state = 'INITIALIZING';\n        return {\n\n            properties: {\n                model: {\n                    type: Object,\n                    value: function() { return {}; }\n                }\n            },\n\n            observers: ['_dolphinObserver(model.*)'],\n\n            created: function() {\n                var self = this;\n                clientContext.createController(controllerName).then(function(controller) {\n                    self._controller = controller;\n                    state = 'READY';\n                    self.set('model', controller.model);\n                    controller.onDestroyed(function() {\n                        state = 'DESTROYED';\n                        self.set('model', null);\n                    });\n                });\n            },\n\n            invoke: function(actionName, params) {\n                // TODO Call this after init has finished\n                if (state !== 'READY') {\n                    console.warn('Controller.invoke() called before init() finished');\n                    return;\n                }\n                return this._controller.invoke(actionName, params);\n            },\n\n            _dolphinObserver: function(event) {\n                if (state !== 'READY') {\n                    return;\n                }\n                var path = event.path;\n                var bean, propertyName, i, j;\n                var newValue = event.value;\n\n                if (exists(newValue) && exists(newValue.indexSplices)) {\n                    path = path.substr(0, path.length - \".splices\".length);\n                    bean = navigateToBean(this, path);\n                    if (exists(bean)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var n = newValue.indexSplices.length;\n                        for (i = 0; i < n; i++) {\n                            var change = newValue.indexSplices[i];\n                            clientContext.beanManager.notifyArrayChange(bean, propertyName[0], change.index, change.addedCount, change.removed);\n\n                            var array = bean[propertyName[0]];\n                            for (j = 0; j < change.removed.length; j++) {\n                                binder.unbind(this, path + '.' + (change.index + j), change.removed[j]);\n                            }\n                            for (j = change.index + change.addedCount; j < array.length; j++) {\n                                var oldPos = j - change.addedCount + change.removed.length;\n                                binder.unbind(this, path + '.' + oldPos, array[j]);\n                            }\n                            for (j = change.index; j < array.length; j++) {\n                                binder.bind(this, path + '.' + j, array[j]);\n                            }\n                        }\n                    }\n                } else {\n                    bean = navigateToBean(this, path);\n                    if (exists(bean) && !Array.isArray(bean) && !Array.isArray(newValue)) {\n                        propertyName = path.match(/[^\\.]+$/);\n                        var oldValue = clientContext.beanManager.notifyBeanChange(bean, propertyName[0], newValue);\n                        if (exists(oldValue)) {\n                            binder.unbind(this, path, oldValue);\n                        }\n                        if (exists(newValue)) {\n                            binder.bind(this, path, newValue);\n                        }\n                    }\n                }\n            }\n        };\n    };\n}\n\n\n\nexports.setupCreateBehavior = setupCreateBehavior;","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar Map  = require('../bower_components/core.js/library/fn/map');\n\n\n\nfunction exists(object) {\n    return typeof object !== 'undefined' && object !== null;\n}\n\nfunction bindScope(scope, fn) {\n    return function () {\n        fn.apply(scope, arguments);\n    };\n}\n\nfunction deepEqual(array1, array2) {\n    if (array1 === array2 || (!exists(array1) && !exists(array2))) {\n        return true;\n    }\n    if (exists(array1) !== exists(array2)) {\n        return false;\n    }\n    var n = array1.length;\n    if (array2.length !== n) {\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\nfunction Binder(beanManager) {\n    this.listeners = new Map();\n\n    beanManager.onBeanUpdate(bindScope(this, this.onBeanUpdateHandler));\n    beanManager.onArrayUpdate(bindScope(this, this.onArrayUpdateHandler));\n}\n\n\nBinder.prototype.onBeanUpdateHandler = function(bean, propertyName, newValue, oldValue) {\n    if (oldValue === newValue) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        element.set(path, newValue);\n    } else {\n        bean[propertyName] = newValue;\n    }\n};\n\n\nBinder.prototype.onArrayUpdateHandler = function(bean, propertyName, index, count, newElements) {\n    var array = bean[propertyName];\n    var oldElements = array.slice(index, index + count);\n    if (deepEqual(newElements, oldElements)) {\n        return;\n    }\n    var listenerList = this.listeners.get(bean);\n    if (exists(listenerList) && listenerList.length > 0) {\n        var entry = listenerList[0];\n        var element = entry.element;\n        var path = entry.rootPath + '.' + propertyName;\n        if (typeof newElements === 'undefined') {\n            element.splice(path, index, count);\n        } else {\n            element.splice.apply(element, [path, index, count].concat(newElements));\n        }\n    } else {\n        if (typeof newElements === 'undefined') {\n            array.splice(index, count);\n        } else {\n            array.splice.apply(array, [index, count].concat(newElements));\n        }\n    }\n};\n\n\nBinder.prototype.bind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (!exists(listenerList)) {\n        listenerList = [];\n        this.listeners.set(value, listenerList);\n    }\n    listenerList.push({element: element, rootPath: rootPath});\n\n    if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n            this.bind(element, rootPath + '.' + i, value[i]);\n        }\n    } else if (typeof value === 'object') {\n        for (var propertyName in value) {\n            if (value.hasOwnProperty(propertyName)) {\n                this.bind(element, rootPath + '.' + propertyName, value[propertyName]);\n            }\n        }\n    }\n};\n\nBinder.prototype.unbind = function (element, rootPath, value) {\n    if (!exists(value) || typeof value !== 'object') {\n        return;\n    }\n    var listenerList = this.listeners.get(value);\n    if (exists(listenerList)) {\n        var n = listenerList.length;\n        for (var i = 0; i < n; i++) {\n            var entry = listenerList[i];\n            if (entry.element === element && entry.rootPath === rootPath) {\n                listenerList.splice(i, 1);\n\n                if (Array.isArray(value)) {\n                    for (var j = 0; j < value.length; j++) {\n                        this.unbind(element, rootPath + '.' + j, value[j]);\n                    }\n                } else if (typeof value === 'object') {\n                    for (var propertyName in value) {\n                        if (value.hasOwnProperty(propertyName)) {\n                            this.unbind(element, rootPath + '.' + propertyName, value[propertyName]);\n                        }\n                    }\n                }\n                return;\n            }\n        }\n    }\n};\n\n\n\nexports.Binder = Binder;\n","/* Copyright 2015 Canoo Engineering AG.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browserify: true */\n\"use strict\";\n\nvar connect = require('../bower_components/dolphin-js/dist/dolphin.js').connect;\nvar setupCreateBehavior = require('./behavior.js').setupCreateBehavior;\n\n\nexports.connect = function(url, config) {\n    var clientContext = connect(url, config);\n    clientContext.createBehavior = setupCreateBehavior(clientContext);\n    return clientContext;\n};\n"],"sourceRoot":"/source/"}